{
	"id": "dd5e2e51962526cb624af746b1e0c3a5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bank.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"./JVCToken.sol\";\n\ninterface Owner {}\n\ncontract Bank is Owner, Context {\n    // variable to reference instances of the token contract.\n    JVCToken public token;\n\n    // Declare storage locations\n    address private _owner;\n    mapping(address => User) public users;\n    uint256 private minDepAmt = 0.00038 ether;\n    uint256 private maxWithdAmt = 1 ether;\n\n    // The owner is not a valid owner account. (eg. `address(0)`)\n    error OwnableInvalidOwner(address owner);\n    // The caller account is not authorized to perform an operation.\n    error OwnableUnauthorizedAccount(address account);\n\n    // Store user data\n    struct User {\n        address uAddr;\n        string uName;\n        uint256 balance;\n    }\n\n    // Record the state of the transaction with custom datatype\n    enum Status {\n        Pending,\n        Failed,\n        Successful\n    }\n    Status public status;\n\n    // Log the status of the deposit and withdrawal function\n    event DepositSuccessful(\n        address indexed user,\n        uint256 amount\n    );\n    event DepositFailed(\n        address indexed user,\n        string message\n    );\n    event WithdrawalSuccessful(\n        address indexed addr,\n        address indexed user,\n        uint256 amount\n    );\n    event WithdrawalFailed(\n        address indexed user,\n        string message\n    );\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    // Throws if called by any account other than the owner.\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    // Verify that an address is not a contract address using the helper function (isContractAddr)\n    modifier verifyAddr(address _addr) {\n        require(\n            !isContractAddr(_addr),\n            \"This is a contract address!\"\n        );\n        _;\n    }\n    // Verify that a user exist\n    modifier findUserByUname(string memory uname) {\n        require(\n            bytes(users[msg.sender].uName).length != 0,\n            \"User not found!\"\n        );\n        _;\n    }\n\n    constructor(address _tokenAddress, address initialOwner)\n    {\n        token = JVCToken(_tokenAddress);\n\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /** Returns the address of the current owner. */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /** Throws if the sender is not the owner.**/\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     *Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    // Register users\n    function registerUser(\n        string memory uname,\n        address payable addr\n    ) public {\n        require(\n            bytes(users[addr].uName).length == 0,\n            \"User already registered!\"\n        );\n        users[addr] = User(addr, uname, 0);\n    }\n\n    // Get a user by Address\n    function getUserByAddress(address userAddress)\n        public\n        view\n        verifyAddr(userAddress)\n        returns (User memory)\n    {\n        return users[userAddress];\n    }\n\n    // Get a user by Username\n    function getUserByName(string memory Uname)\n        public\n        view\n        findUserByUname(Uname)\n        returns (User memory)\n    {\n        return users[msg.sender];\n    }\n\n    // Deposit to the users address\n    function deposit()\n        public\n        payable\n        verifyAddr(msg.sender)\n    {\n        if (msg.value < minDepAmt) {\n            status = Status.Failed;\n            emit DepositFailed(\n                msg.sender,\n                \"Minimum deposit amount is 0.00038\"\n            );\n        } else {\n            users[msg.sender].balance += msg.value;\n            status = Status.Successful;\n            emit DepositSuccessful(msg.sender, msg.value);\n        }\n    }\n\n    // Withdraw to an external account\n    function withdraw(uint256 amount, address payable addr)\n        public\n        payable\n        verifyAddr(msg.sender)\n    {\n        require(\n            amount <= users[addr].balance,\n            \"Insufficient balance\"\n        );\n        require(\n            amount <= maxWithdAmt,\n            \"Withdrawal amount exceeds limit\"\n        );\n\n        users[addr].balance -= amount;\n        addr.transfer(amount);\n        emit WithdrawalSuccessful(addr, msg.sender, amount);\n    }\n\n    // Helper function to check if an address is a contract address\n    function isContractAddr(address addr_)\n        internal\n        view\n        returns (bool)\n    {\n        return addr_.code.length > 0;\n    }\n}\n"
			},
			"contracts/JVCToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract JVCToken is ERC20, Ownable {\n    constructor(\n        address initialOwner,\n        string memory name,\n        string memory symbol\n    ) ERC20(name, symbol) Ownable(initialOwner) {}\n\n    function mint(address toAddr, uint256 amount) public onlyOwner {\n        _mint(toAddr, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/JVCToken.sol": {
				"JVCToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/JVCToken.sol\":168:469  contract JVCToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/JVCToken.sol\":210:360  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/JVCToken.sol\":344:356  initialOwner */\n  dup3\n    /* \"contracts/JVCToken.sol\":322:326  name */\n  dup3\n    /* \"contracts/JVCToken.sol\":328:334  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_8\n    /* \"contracts/JVCToken.sol\":322:326  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4258:4309   */\n  mstore\n    /* \"#utility.yul\":4231:4249   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/JVCToken.sol\":210:360  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/JVCToken.sol\":168:469  contract JVCToken is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_21:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_29:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_31\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_33\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_34:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1598   */\ntag_3:\n    /* \"#utility.yul\":982:988   */\n  0x00\n    /* \"#utility.yul\":990:996   */\n  dup1\n    /* \"#utility.yul\":998:1004   */\n  0x00\n    /* \"#utility.yul\":1051:1053   */\n  0x60\n    /* \"#utility.yul\":1039:1048   */\n  dup5\n    /* \"#utility.yul\":1030:1037   */\n  dup7\n    /* \"#utility.yul\":1026:1049   */\n  sub\n    /* \"#utility.yul\":1022:1054   */\n  slt\n    /* \"#utility.yul\":1019:1071   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1067:1068   */\n  0x00\n    /* \"#utility.yul\":1064:1065   */\n  dup1\n    /* \"#utility.yul\":1057:1069   */\n  revert\n    /* \"#utility.yul\":1019:1071   */\ntag_36:\n    /* \"#utility.yul\":1093:1109   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1138:1169   */\n  dup2\n  and\n    /* \"#utility.yul\":1128:1170   */\n  dup2\n  eq\n    /* \"#utility.yul\":1118:1188   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1184:1185   */\n  0x00\n    /* \"#utility.yul\":1181:1182   */\n  dup1\n    /* \"#utility.yul\":1174:1186   */\n  revert\n    /* \"#utility.yul\":1118:1188   */\ntag_37:\n    /* \"#utility.yul\":1256:1258   */\n  0x20\n    /* \"#utility.yul\":1241:1259   */\n  dup6\n  add\n    /* \"#utility.yul\":1235:1260   */\n  mload\n    /* \"#utility.yul\":1207:1212   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1272:1302   */\n  dup2\n  gt\n    /* \"#utility.yul\":1269:1319   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1315:1316   */\n  0x00\n    /* \"#utility.yul\":1312:1313   */\n  dup1\n    /* \"#utility.yul\":1305:1317   */\n  revert\n    /* \"#utility.yul\":1269:1319   */\ntag_38:\n    /* \"#utility.yul\":1338:1399   */\n  tag_39\n    /* \"#utility.yul\":1391:1398   */\n  dup7\n    /* \"#utility.yul\":1382:1388   */\n  dup3\n    /* \"#utility.yul\":1371:1380   */\n  dup8\n    /* \"#utility.yul\":1367:1389   */\n  add\n    /* \"#utility.yul\":1338:1399   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1445:1447   */\n  0x40\n    /* \"#utility.yul\":1430:1448   */\n  dup7\n  add\n    /* \"#utility.yul\":1424:1449   */\n  mload\n    /* \"#utility.yul\":1328:1399   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1424:1449   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1461:1493   */\n  dup2\n  gt\n    /* \"#utility.yul\":1458:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1458:1510   */\ntag_40:\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup7\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup8\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1598   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_22:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2114:2632   */\ntag_24:\n    /* \"#utility.yul\":2216:2218   */\n  0x1f\n    /* \"#utility.yul\":2211:2214   */\n  dup3\n    /* \"#utility.yul\":2208:2219   */\n  gt\n    /* \"#utility.yul\":2205:2626   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2252:2257   */\n  dup1\n    /* \"#utility.yul\":2249:2250   */\n  0x00\n    /* \"#utility.yul\":2242:2258   */\n  mstore\n    /* \"#utility.yul\":2296:2300   */\n  0x20\n    /* \"#utility.yul\":2293:2294   */\n  0x00\n    /* \"#utility.yul\":2283:2301   */\n  keccak256\n    /* \"#utility.yul\":2366:2368   */\n  0x1f\n    /* \"#utility.yul\":2354:2364   */\n  dup5\n    /* \"#utility.yul\":2350:2369   */\n  add\n    /* \"#utility.yul\":2347:2348   */\n  0x05\n    /* \"#utility.yul\":2343:2370   */\n  shr\n    /* \"#utility.yul\":2337:2341   */\n  dup2\n    /* \"#utility.yul\":2333:2371   */\n  add\n    /* \"#utility.yul\":2402:2406   */\n  0x20\n    /* \"#utility.yul\":2390:2400   */\n  dup6\n    /* \"#utility.yul\":2387:2407   */\n  lt\n    /* \"#utility.yul\":2384:2431   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2425:2429   */\n  dup1\n    /* \"#utility.yul\":2384:2431   */\ntag_48:\n    /* \"#utility.yul\":2480:2482   */\n  0x1f\n    /* \"#utility.yul\":2475:2478   */\n  dup5\n    /* \"#utility.yul\":2471:2483   */\n  add\n    /* \"#utility.yul\":2468:2469   */\n  0x05\n    /* \"#utility.yul\":2464:2484   */\n  shr\n    /* \"#utility.yul\":2458:2462   */\n  dup3\n    /* \"#utility.yul\":2454:2485   */\n  add\n    /* \"#utility.yul\":2444:2485   */\n  swap2\n  pop\n    /* \"#utility.yul\":2535:2616   */\ntag_49:\n    /* \"#utility.yul\":2553:2555   */\n  dup2\n    /* \"#utility.yul\":2546:2551   */\n  dup2\n    /* \"#utility.yul\":2543:2556   */\n  lt\n    /* \"#utility.yul\":2535:2616   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2612:2613   */\n  0x00\n    /* \"#utility.yul\":2598:2614   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2579:2580   */\n  0x01\n    /* \"#utility.yul\":2568:2581   */\n  add\n    /* \"#utility.yul\":2535:2616   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2539:2542   */\n  pop\n  pop\n    /* \"#utility.yul\":2205:2626   */\ntag_47:\n    /* \"#utility.yul\":2114:2632   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2808:4107   */\ntag_9:\n    /* \"#utility.yul\":2928:2938   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2950:2980   */\n  dup2\n  gt\n    /* \"#utility.yul\":2947:3003   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2983:3001   */\n  tag_55\n  tag_20\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":3012:3109   */\n  tag_56\n    /* \"#utility.yul\":3102:3108   */\n  dup2\n    /* \"#utility.yul\":3062:3100   */\n  tag_57\n    /* \"#utility.yul\":3094:3098   */\n  dup5\n    /* \"#utility.yul\":3088:3099   */\n  sload\n    /* \"#utility.yul\":3062:3100   */\n  tag_22\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":3056:3060   */\n  dup5\n    /* \"#utility.yul\":3012:3109   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3158:3162   */\n  0x20\n    /* \"#utility.yul\":3189:3191   */\n  0x1f\n    /* \"#utility.yul\":3178:3192   */\n  dup3\n  gt\n    /* \"#utility.yul\":3206:3207   */\n  0x01\n    /* \"#utility.yul\":3201:3850   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3894:3895   */\n  0x00\n    /* \"#utility.yul\":3911:3917   */\n  dup4\n    /* \"#utility.yul\":3908:3997   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":3963:3982   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3957:3983   */\n  mload\n    /* \"#utility.yul\":3908:3997   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2765:2766   */\n  0x03\n    /* \"#utility.yul\":2761:2772   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2757:2781   */\n  shr\n    /* \"#utility.yul\":2753:2782   */\n  not\n    /* \"#utility.yul\":2743:2783   */\n  and\n    /* \"#utility.yul\":2789:2790   */\n  0x01\n    /* \"#utility.yul\":2785:2796   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2740:2797   */\n  or\n    /* \"#utility.yul\":4010:4091   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3171:4101   */\n  jump(tag_51)\n    /* \"#utility.yul\":3201:3850   */\ntag_59:\n    /* \"#utility.yul\":2061:2062   */\n  0x00\n    /* \"#utility.yul\":2054:2068   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2098:2102   */\n  0x20\n    /* \"#utility.yul\":2085:2103   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3237:3257   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3355:3577   */\ntag_63:\n    /* \"#utility.yul\":3369:3376   */\n  dup3\n    /* \"#utility.yul\":3366:3367   */\n  dup2\n    /* \"#utility.yul\":3363:3377   */\n  lt\n    /* \"#utility.yul\":3355:3577   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3451:3470   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3445:3471   */\n  mload\n    /* \"#utility.yul\":3430:3472   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3558:3562   */\n  0x20\n    /* \"#utility.yul\":3543:3563   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3511:3512   */\n  0x01\n    /* \"#utility.yul\":3499:3513   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3385:3397   */\n  add\n    /* \"#utility.yul\":3355:3577   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3359:3362   */\n  pop\n    /* \"#utility.yul\":3605:3611   */\n  dup5\n    /* \"#utility.yul\":3596:3603   */\n  dup3\n    /* \"#utility.yul\":3593:3612   */\n  lt\n    /* \"#utility.yul\":3590:3791   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3666:3685   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3660:3686   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3749:3750   */\n  0x03\n    /* \"#utility.yul\":3745:3759   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3761:3764   */\n  0xf8\n    /* \"#utility.yul\":3741:3765   */\n  and\n    /* \"#utility.yul\":3737:3774   */\n  shr\n    /* \"#utility.yul\":3733:3775   */\n  not\n    /* \"#utility.yul\":3718:3776   */\n  and\n    /* \"#utility.yul\":3703:3777   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3590:3791   */\ntag_66:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3837:3838   */\n  0x01\n    /* \"#utility.yul\":3821:3835   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3817:3839   */\n  add\n    /* \"#utility.yul\":3804:3840   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2808:4107   */\n  jump\t// out\n    /* \"#utility.yul\":4112:4315   */\ntag_26:\n    /* \"contracts/JVCToken.sol\":168:469  contract JVCToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/JVCToken.sol\":168:469  contract JVCToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"contracts/JVCToken.sol\":366:467  function mint(address toAddr, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2199:2250   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2187:2189   */\n      0x20\n        /* \"#utility.yul\":2172:2190   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_59\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_28\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_41\n      tag_68\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/JVCToken.sol\":366:467  function mint(address toAddr, uint256 amount) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/JVCToken.sol\":439:460  _mint(toAddr, amount) */\n      tag_94\n        /* \"contracts/JVCToken.sol\":445:451  toAddr */\n      dup3\n        /* \"contracts/JVCToken.sol\":453:459  amount */\n      dup3\n        /* \"contracts/JVCToken.sol\":439:444  _mint */\n      tag_95\n        /* \"contracts/JVCToken.sol\":439:460  _mint(toAddr, amount) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/JVCToken.sol\":366:467  function mint(address toAddr, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_117\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_154\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_159\n      swap1\n      pop\n      jump\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_117\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_163)\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_164\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_21:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_165:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_169:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_24:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_171:\n        /* \"#utility.yul\":783:812   */\n      tag_172\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_165\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_34:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_176:\n        /* \"#utility.yul\":1479:1508   */\n      tag_177\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_165\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_178\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_165\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_46:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_181:\n        /* \"#utility.yul\":2013:2042   */\n      tag_182\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_165\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2521   */\n    tag_64:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      dup1\n        /* \"#utility.yul\":2390:2392   */\n      0x40\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2369:2376   */\n      dup6\n        /* \"#utility.yul\":2365:2388   */\n      sub\n        /* \"#utility.yul\":2361:2393   */\n      slt\n        /* \"#utility.yul\":2358:2410   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      dup1\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2358:2410   */\n    tag_185:\n        /* \"#utility.yul\":2429:2458   */\n      tag_186\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2429:2458   */\n      tag_165\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2419:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2477:2515   */\n      tag_187\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup5\n        /* \"#utility.yul\":2496:2514   */\n      add\n        /* \"#utility.yul\":2477:2515   */\n      tag_165\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2467:2515   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2906   */\n    tag_72:\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2601:2613   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2648:2660   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2669:2730   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":2723:2727   */\n      0x7f\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2711:2728   */\n      and\n        /* \"#utility.yul\":2701:2728   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2730   */\n    tag_189:\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      lt\n        /* \"#utility.yul\":2745:2763   */\n      dup2\n        /* \"#utility.yul\":2742:2780   */\n      sub\n        /* \"#utility.yul\":2739:2900   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x22\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2739:2900   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":2526:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3483   */\n    tag_158:\n        /* \"#utility.yul\":3326:3335   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3347:3357   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3344:3477   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3399:3409   */\n      0x4e487b71\n        /* \"#utility.yul\":3394:3397   */\n      0xe0\n        /* \"#utility.yul\":3390:3410   */\n      shl\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3411   */\n      mstore\n        /* \"#utility.yul\":3434:3438   */\n      0x11\n        /* \"#utility.yul\":3431:3432   */\n      0x04\n        /* \"#utility.yul\":3424:3439   */\n      mstore\n        /* \"#utility.yul\":3462:3466   */\n      0x24\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3452:3467   */\n      revert\n\n    auxdata: 0xa264697066735822122034947ef06eabc88d56bcadb108e1f26ff8b9d82a360a265704a2da3945308b0664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 140,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4317:8",
										"nodeType": "YulBlock",
										"src": "0:4317:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "210:659:8",
													"nodeType": "YulBlock",
													"src": "210:659:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:8",
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nativeSrc": "261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nativeSrc": "261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:8",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nativeSrc": "234:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nativeSrc": "230:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nativeSrc": "223:35:8",
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nativeSrc": "220:55:8",
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nativeSrc": "284:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:8"
																},
																"nativeSrc": "298:13:8",
																"nodeType": "YulFunctionCall",
																"src": "298:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:8",
																	"nodeType": "YulTypedName",
																	"src": "288:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:8",
																"nodeType": "YulBlock",
																"src": "354:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:8"
																			},
																			"nativeSrc": "356:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:8"
																		},
																		"nativeSrc": "356:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:8",
																						"nodeType": "YulLiteral",
																						"src": "342:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:8",
																						"nodeType": "YulLiteral",
																						"src": "346:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:8"
																				},
																				"nativeSrc": "338:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:8",
																				"nodeType": "YulLiteral",
																				"src": "350:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:8"
																		},
																		"nativeSrc": "334:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:8"
																},
																"nativeSrc": "323:30:8",
																"nodeType": "YulFunctionCall",
																"src": "323:30:8"
															},
															"nativeSrc": "320:56:8",
															"nodeType": "YulIf",
															"src": "320:56:8"
														},
														{
															"nativeSrc": "385:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:8",
																		"nodeType": "YulLiteral",
																		"src": "405:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:8"
																},
																"nativeSrc": "399:9:8",
																"nodeType": "YulFunctionCall",
																"src": "399:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:8",
																	"nodeType": "YulTypedName",
																	"src": "389:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:8",
																										"nodeType": "YulLiteral",
																										"src": "471:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:8"
																								},
																								"nativeSrc": "459:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:8",
																										"nodeType": "YulLiteral",
																										"src": "482:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:8"
																								},
																								"nativeSrc": "478:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:8"
																						},
																						"nativeSrc": "455:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:8",
																						"nodeType": "YulLiteral",
																						"src": "488:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:8"
																				},
																				"nativeSrc": "451:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:8",
																						"nodeType": "YulLiteral",
																						"src": "497:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:8"
																				},
																				"nativeSrc": "493:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:8"
																		},
																		"nativeSrc": "447:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:8"
																},
																"nativeSrc": "435:67:8",
																"nodeType": "YulFunctionCall",
																"src": "435:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:8",
																	"nodeType": "YulTypedName",
																	"src": "421:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:8",
																"nodeType": "YulBlock",
																"src": "577:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:8"
																			},
																			"nativeSrc": "579:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:8"
																		},
																		"nativeSrc": "579:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:8",
																								"nodeType": "YulLiteral",
																								"src": "540:2:8",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:8",
																								"nodeType": "YulLiteral",
																								"src": "544:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:8"
																						},
																						"nativeSrc": "536:10:8",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:8",
																						"nodeType": "YulLiteral",
																						"src": "548:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:8"
																				},
																				"nativeSrc": "532:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:8"
																		},
																		"nativeSrc": "517:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:8"
																		},
																		"nativeSrc": "553:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:8"
																},
																"nativeSrc": "514:62:8",
																"nodeType": "YulFunctionCall",
																"src": "514:62:8"
															},
															"nativeSrc": "511:88:8",
															"nodeType": "YulIf",
															"src": "511:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:8",
																		"nodeType": "YulLiteral",
																		"src": "615:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:8"
																},
																"nativeSrc": "608:22:8",
																"nodeType": "YulFunctionCall",
																"src": "608:22:8"
															},
															"nativeSrc": "608:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:8"
																},
																"nativeSrc": "639:22:8",
																"nodeType": "YulFunctionCall",
																"src": "639:22:8"
															},
															"nativeSrc": "639:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:8"
														},
														{
															"body": {
																"nativeSrc": "713:16:8",
																"nodeType": "YulBlock",
																"src": "713:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:8",
																					"nodeType": "YulLiteral",
																					"src": "722:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:8",
																					"nodeType": "YulLiteral",
																					"src": "725:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:8"
																			},
																			"nativeSrc": "715:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:8"
																		},
																		"nativeSrc": "715:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:8"
																				},
																				"nativeSrc": "680:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:8",
																				"nodeType": "YulLiteral",
																				"src": "701:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:8"
																		},
																		"nativeSrc": "676:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:8"
																},
																"nativeSrc": "673:39:8",
																"nodeType": "YulFunctionCall",
																"src": "673:39:8"
															},
															"nativeSrc": "670:59:8",
															"nodeType": "YulIf",
															"src": "670:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:8",
																				"nodeType": "YulLiteral",
																				"src": "756:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:8"
																		},
																		"nativeSrc": "744:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:8",
																				"nodeType": "YulLiteral",
																				"src": "775:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:8"
																		},
																		"nativeSrc": "763:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:8"
																},
																"nativeSrc": "738:51:8",
																"nodeType": "YulFunctionCall",
																"src": "738:51:8"
															},
															"nativeSrc": "738:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:8"
																				},
																				"nativeSrc": "809:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:8",
																				"nodeType": "YulLiteral",
																				"src": "830:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:8"
																		},
																		"nativeSrc": "805:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:8",
																		"nodeType": "YulLiteral",
																		"src": "837:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:8"
																},
																"nativeSrc": "798:41:8",
																"nodeType": "YulFunctionCall",
																"src": "798:41:8"
															},
															"nativeSrc": "798:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:8"
														},
														{
															"nativeSrc": "848:15:8",
															"nodeType": "YulAssignment",
															"src": "848:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:8",
																"nodeType": "YulIdentifier",
																"src": "857:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:8",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:8",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:8",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:723:8"
											},
											{
												"body": {
													"nativeSrc": "1009:589:8",
													"nodeType": "YulBlock",
													"src": "1009:589:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1055:16:8",
																"nodeType": "YulBlock",
																"src": "1055:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1067:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1057:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:8"
																			},
																			"nativeSrc": "1057:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1057:12:8"
																		},
																		"nativeSrc": "1057:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1057:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1030:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1039:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1026:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:8"
																		},
																		"nativeSrc": "1026:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1051:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1022:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1022:3:8"
																},
																"nativeSrc": "1022:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1022:32:8"
															},
															"nativeSrc": "1019:52:8",
															"nodeType": "YulIf",
															"src": "1019:52:8"
														},
														{
															"nativeSrc": "1080:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1080:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1099:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1093:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1093:5:8"
																},
																"nativeSrc": "1093:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1093:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1084:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1084:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1172:16:8",
																"nodeType": "YulBlock",
																"src": "1172:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1181:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1181:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1184:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1174:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1174:6:8"
																			},
																			"nativeSrc": "1174:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:8"
																		},
																		"nativeSrc": "1174:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1131:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1131:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1142:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1142:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1157:3:8",
																										"nodeType": "YulLiteral",
																										"src": "1157:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1162:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1162:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1153:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1153:3:8"
																								},
																								"nativeSrc": "1153:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1153:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1166:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1166:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1149:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1149:3:8"
																						},
																						"nativeSrc": "1149:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1149:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1138:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:8"
																				},
																				"nativeSrc": "1138:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1128:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1128:2:8"
																		},
																		"nativeSrc": "1128:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1128:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:8"
																},
																"nativeSrc": "1121:50:8",
																"nodeType": "YulFunctionCall",
																"src": "1121:50:8"
															},
															"nativeSrc": "1118:70:8",
															"nodeType": "YulIf",
															"src": "1118:70:8"
														},
														{
															"nativeSrc": "1197:15:8",
															"nodeType": "YulAssignment",
															"src": "1197:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1207:5:8",
																"nodeType": "YulIdentifier",
																"src": "1207:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1197:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:8"
																}
															]
														},
														{
															"nativeSrc": "1221:39:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1221:39:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1245:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1245:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1256:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1256:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1241:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1241:3:8"
																		},
																		"nativeSrc": "1241:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1241:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1235:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1235:5:8"
																},
																"nativeSrc": "1235:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1235:25:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1225:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1225:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1303:16:8",
																"nodeType": "YulBlock",
																"src": "1303:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1312:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1312:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1315:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1315:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1305:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1305:6:8"
																			},
																			"nativeSrc": "1305:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1305:12:8"
																		},
																		"nativeSrc": "1305:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1305:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1275:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1275:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1291:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1291:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1295:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1295:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1287:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1287:3:8"
																				},
																				"nativeSrc": "1287:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1287:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1299:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1299:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1283:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:8"
																		},
																		"nativeSrc": "1283:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1283:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1272:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:2:8"
																},
																"nativeSrc": "1272:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1272:30:8"
															},
															"nativeSrc": "1269:50:8",
															"nodeType": "YulIf",
															"src": "1269:50:8"
														},
														{
															"nativeSrc": "1328:71:8",
															"nodeType": "YulAssignment",
															"src": "1328:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1371:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1382:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1367:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:8"
																		},
																		"nativeSrc": "1367:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1391:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1391:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1338:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1338:28:8"
																},
																"nativeSrc": "1338:61:8",
																"nodeType": "YulFunctionCall",
																"src": "1338:61:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1328:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:8"
																}
															]
														},
														{
															"nativeSrc": "1408:41:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1408:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1434:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1434:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1445:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1445:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1430:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:8"
																		},
																		"nativeSrc": "1430:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1430:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1424:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1424:5:8"
																},
																"nativeSrc": "1424:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1424:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1412:8:8",
																	"nodeType": "YulTypedName",
																	"src": "1412:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1494:16:8",
																"nodeType": "YulBlock",
																"src": "1494:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1503:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1506:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1496:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:8"
																			},
																			"nativeSrc": "1496:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:8"
																		},
																		"nativeSrc": "1496:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1464:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1464:8:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1482:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1482:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1486:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1486:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1478:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1478:3:8"
																				},
																				"nativeSrc": "1478:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1478:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1490:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1490:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:8"
																		},
																		"nativeSrc": "1474:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1474:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1461:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1461:2:8"
																},
																"nativeSrc": "1461:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1461:32:8"
															},
															"nativeSrc": "1458:52:8",
															"nodeType": "YulIf",
															"src": "1458:52:8"
														},
														{
															"nativeSrc": "1519:73:8",
															"nodeType": "YulAssignment",
															"src": "1519:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1562:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1573:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1558:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:8"
																		},
																		"nativeSrc": "1558:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1584:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1529:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:8"
																},
																"nativeSrc": "1529:63:8",
																"nodeType": "YulFunctionCall",
																"src": "1529:63:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1519:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "874:724:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "959:9:8",
														"nodeType": "YulTypedName",
														"src": "959:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "970:7:8",
														"nodeType": "YulTypedName",
														"src": "970:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "982:6:8",
														"nodeType": "YulTypedName",
														"src": "982:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "990:6:8",
														"nodeType": "YulTypedName",
														"src": "990:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "998:6:8",
														"nodeType": "YulTypedName",
														"src": "998:6:8",
														"type": ""
													}
												],
												"src": "874:724:8"
											},
											{
												"body": {
													"nativeSrc": "1658:325:8",
													"nodeType": "YulBlock",
													"src": "1658:325:8",
													"statements": [
														{
															"nativeSrc": "1668:22:8",
															"nodeType": "YulAssignment",
															"src": "1668:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1682:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1685:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1678:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:8"
																},
																"nativeSrc": "1678:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1678:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1668:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:8"
																}
															]
														},
														{
															"nativeSrc": "1699:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1729:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1735:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1725:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:8"
																},
																"nativeSrc": "1725:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1725:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1703:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1776:31:8",
																"nodeType": "YulBlock",
																"src": "1776:31:8",
																"statements": [
																	{
																		"nativeSrc": "1778:27:8",
																		"nodeType": "YulAssignment",
																		"src": "1778:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1792:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1800:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1788:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:8"
																			},
																			"nativeSrc": "1788:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1778:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1756:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1749:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:8"
																},
																"nativeSrc": "1749:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1749:26:8"
															},
															"nativeSrc": "1746:61:8",
															"nodeType": "YulIf",
															"src": "1746:61:8"
														},
														{
															"body": {
																"nativeSrc": "1866:111:8",
																"nodeType": "YulBlock",
																"src": "1866:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1887:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1894:3:8",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1899:10:8",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1890:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:8"
																					},
																					"nativeSrc": "1890:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1880:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:8"
																			},
																			"nativeSrc": "1880:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:8"
																		},
																		"nativeSrc": "1880:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1931:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1934:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1924:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			"nativeSrc": "1924:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:8"
																		},
																		"nativeSrc": "1924:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1962:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1952:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:8"
																			},
																			"nativeSrc": "1952:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:8"
																		},
																		"nativeSrc": "1952:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1822:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1845:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1853:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1842:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:8"
																		},
																		"nativeSrc": "1842:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1819:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:8"
																},
																"nativeSrc": "1819:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1819:38:8"
															},
															"nativeSrc": "1816:161:8",
															"nodeType": "YulIf",
															"src": "1816:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1603:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1638:4:8",
														"nodeType": "YulTypedName",
														"src": "1638:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1647:6:8",
														"nodeType": "YulTypedName",
														"src": "1647:6:8",
														"type": ""
													}
												],
												"src": "1603:380:8"
											},
											{
												"body": {
													"nativeSrc": "2044:65:8",
													"nodeType": "YulBlock",
													"src": "2044:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2061:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2064:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2054:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:8"
																},
																"nativeSrc": "2054:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2054:14:8"
															},
															"nativeSrc": "2054:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2054:14:8"
														},
														{
															"nativeSrc": "2077:26:8",
															"nodeType": "YulAssignment",
															"src": "2077:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2095:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2095:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2085:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2085:9:8"
																},
																"nativeSrc": "2085:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2085:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2077:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1988:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2027:3:8",
														"nodeType": "YulTypedName",
														"src": "2027:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2035:4:8",
														"nodeType": "YulTypedName",
														"src": "2035:4:8",
														"type": ""
													}
												],
												"src": "1988:121:8"
											},
											{
												"body": {
													"nativeSrc": "2195:437:8",
													"nodeType": "YulBlock",
													"src": "2195:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2228:398:8",
																"nodeType": "YulBlock",
																"src": "2228:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2249:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2249:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2252:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2252:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2242:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:8"
																			},
																			"nativeSrc": "2242:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:16:8"
																		},
																		"nativeSrc": "2242:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2242:16:8"
																	},
																	{
																		"nativeSrc": "2271:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2271:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2293:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2293:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2296:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2296:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2283:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2283:9:8"
																			},
																			"nativeSrc": "2283:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2283:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2275:4:8",
																				"nodeType": "YulTypedName",
																				"src": "2275:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2314:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2314:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2337:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2337:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2347:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2347:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2354:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "2354:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2366:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2366:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2350:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2350:3:8"
																							},
																							"nativeSrc": "2350:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2350:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2343:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2343:3:8"
																					},
																					"nativeSrc": "2343:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2343:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2333:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2333:3:8"
																			},
																			"nativeSrc": "2333:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2318:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2318:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2408:23:8",
																			"nodeType": "YulBlock",
																			"src": "2408:23:8",
																			"statements": [
																				{
																					"nativeSrc": "2410:19:8",
																					"nodeType": "YulAssignment",
																					"src": "2410:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2425:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2425:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2410:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "2410:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2390:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "2390:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2402:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2402:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2387:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2387:2:8"
																			},
																			"nativeSrc": "2387:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2387:20:8"
																		},
																		"nativeSrc": "2384:47:8",
																		"nodeType": "YulIf",
																		"src": "2384:47:8"
																	},
																	{
																		"nativeSrc": "2444:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2444:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2458:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2458:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2468:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2468:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2475:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2475:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2480:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2480:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2471:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2471:3:8"
																							},
																							"nativeSrc": "2471:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2471:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2464:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2464:3:8"
																					},
																					"nativeSrc": "2464:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2464:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2454:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2454:3:8"
																			},
																			"nativeSrc": "2454:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2454:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2448:2:8",
																				"nodeType": "YulTypedName",
																				"src": "2448:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2498:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2498:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2511:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "2511:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2502:5:8",
																				"nodeType": "YulTypedName",
																				"src": "2502:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2596:20:8",
																			"nodeType": "YulBlock",
																			"src": "2596:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2605:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2605:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2612:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2612:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2598:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2598:6:8"
																						},
																						"nativeSrc": "2598:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2598:16:8"
																					},
																					"nativeSrc": "2598:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "2598:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2546:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2546:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2553:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2553:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2543:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2543:2:8"
																			},
																			"nativeSrc": "2543:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2543:13:8"
																		},
																		"nativeSrc": "2535:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2557:26:8",
																			"nodeType": "YulBlock",
																			"src": "2557:26:8",
																			"statements": [
																				{
																					"nativeSrc": "2559:22:8",
																					"nodeType": "YulAssignment",
																					"src": "2559:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2572:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2572:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2579:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2579:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2568:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2568:3:8"
																						},
																						"nativeSrc": "2568:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2568:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2559:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "2559:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2539:3:8",
																			"nodeType": "YulBlock",
																			"src": "2539:3:8",
																			"statements": []
																		},
																		"src": "2535:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2211:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2216:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2216:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2208:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2208:2:8"
																},
																"nativeSrc": "2208:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2208:11:8"
															},
															"nativeSrc": "2205:421:8",
															"nodeType": "YulIf",
															"src": "2205:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2114:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2167:5:8",
														"nodeType": "YulTypedName",
														"src": "2167:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2174:3:8",
														"nodeType": "YulTypedName",
														"src": "2174:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2179:10:8",
														"nodeType": "YulTypedName",
														"src": "2179:10:8",
														"type": ""
													}
												],
												"src": "2114:518:8"
											},
											{
												"body": {
													"nativeSrc": "2722:81:8",
													"nodeType": "YulBlock",
													"src": "2722:81:8",
													"statements": [
														{
															"nativeSrc": "2732:65:8",
															"nodeType": "YulAssignment",
															"src": "2732:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2747:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2747:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2765:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2765:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2768:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2768:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2761:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2761:3:8"
																								},
																								"nativeSrc": "2761:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2761:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2778:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2778:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2774:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2774:3:8"
																								},
																								"nativeSrc": "2774:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2774:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2757:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2757:3:8"
																						},
																						"nativeSrc": "2757:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2757:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2753:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2753:3:8"
																				},
																				"nativeSrc": "2753:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2753:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2743:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2743:3:8"
																		},
																		"nativeSrc": "2743:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2743:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2789:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2789:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2792:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2792:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2785:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2785:3:8"
																		},
																		"nativeSrc": "2785:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2740:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2740:2:8"
																},
																"nativeSrc": "2740:57:8",
																"nodeType": "YulFunctionCall",
																"src": "2740:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2732:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2732:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2637:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2699:4:8",
														"nodeType": "YulTypedName",
														"src": "2699:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2705:3:8",
														"nodeType": "YulTypedName",
														"src": "2705:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2713:4:8",
														"nodeType": "YulTypedName",
														"src": "2713:4:8",
														"type": ""
													}
												],
												"src": "2637:166:8"
											},
											{
												"body": {
													"nativeSrc": "2904:1203:8",
													"nodeType": "YulBlock",
													"src": "2904:1203:8",
													"statements": [
														{
															"nativeSrc": "2914:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2914:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2934:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2934:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2928:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2928:5:8"
																},
																"nativeSrc": "2928:10:8",
																"nodeType": "YulFunctionCall",
																"src": "2928:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2918:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2918:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2981:22:8",
																"nodeType": "YulBlock",
																"src": "2981:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2983:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2983:16:8"
																			},
																			"nativeSrc": "2983:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2983:18:8"
																		},
																		"nativeSrc": "2983:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2983:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2953:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2953:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2969:2:8",
																						"nodeType": "YulLiteral",
																						"src": "2969:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2973:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2973:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2965:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:8"
																				},
																				"nativeSrc": "2965:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2965:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2977:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2977:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2961:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:8"
																		},
																		"nativeSrc": "2961:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2950:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2950:2:8"
																},
																"nativeSrc": "2950:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2950:30:8"
															},
															"nativeSrc": "2947:56:8",
															"nodeType": "YulIf",
															"src": "2947:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3056:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3056:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3094:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3094:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3088:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3088:5:8"
																				},
																				"nativeSrc": "3088:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3088:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3062:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "3062:25:8"
																		},
																		"nativeSrc": "3062:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3062:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3102:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3012:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3012:43:8"
																},
																"nativeSrc": "3012:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3012:97:8"
															},
															"nativeSrc": "3012:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "3012:97:8"
														},
														{
															"nativeSrc": "3118:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3118:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3135:1:8",
																"nodeType": "YulLiteral",
																"src": "3135:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3122:9:8",
																	"nodeType": "YulTypedName",
																	"src": "3122:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3145:17:8",
															"nodeType": "YulAssignment",
															"src": "3145:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3158:4:8",
																"nodeType": "YulLiteral",
																"src": "3158:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3145:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3145:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3208:642:8",
																		"nodeType": "YulBlock",
																		"src": "3208:642:8",
																		"statements": [
																			{
																				"nativeSrc": "3222:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3222:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3241:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3241:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3253:2:8",
																									"nodeType": "YulLiteral",
																									"src": "3253:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3249:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3249:3:8"
																							},
																							"nativeSrc": "3249:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3249:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3237:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3237:3:8"
																					},
																					"nativeSrc": "3237:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3237:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3226:7:8",
																						"nodeType": "YulTypedName",
																						"src": "3226:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3270:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3270:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3314:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3314:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3284:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "3284:29:8"
																					},
																					"nativeSrc": "3284:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3284:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3274:6:8",
																						"nodeType": "YulTypedName",
																						"src": "3274:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3332:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3332:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3341:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3341:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3336:1:8",
																						"nodeType": "YulTypedName",
																						"src": "3336:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3412:165:8",
																					"nodeType": "YulBlock",
																					"src": "3412:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3437:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3437:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3455:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "3455:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3460:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "3460:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3451:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "3451:3:8"
																												},
																												"nativeSrc": "3451:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "3451:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3445:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "3445:5:8"
																										},
																										"nativeSrc": "3445:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3445:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3430:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3430:6:8"
																								},
																								"nativeSrc": "3430:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3430:42:8"
																							},
																							"nativeSrc": "3430:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3430:42:8"
																						},
																						{
																							"nativeSrc": "3489:24:8",
																							"nodeType": "YulAssignment",
																							"src": "3489:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3503:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3503:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3511:1:8",
																										"nodeType": "YulLiteral",
																										"src": "3511:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3499:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3499:3:8"
																								},
																								"nativeSrc": "3499:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3499:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3489:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3489:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3530:33:8",
																							"nodeType": "YulAssignment",
																							"src": "3530:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3547:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "3547:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3558:4:8",
																										"nodeType": "YulLiteral",
																										"src": "3558:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3543:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3543:3:8"
																								},
																								"nativeSrc": "3543:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3543:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3530:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "3530:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3366:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "3366:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3369:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "3369:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3363:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3363:2:8"
																					},
																					"nativeSrc": "3363:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3363:14:8"
																				},
																				"nativeSrc": "3355:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3378:21:8",
																					"nodeType": "YulBlock",
																					"src": "3378:21:8",
																					"statements": [
																						{
																							"nativeSrc": "3380:17:8",
																							"nodeType": "YulAssignment",
																							"src": "3380:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3389:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "3389:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3392:4:8",
																										"nodeType": "YulLiteral",
																										"src": "3392:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3385:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3385:3:8"
																								},
																								"nativeSrc": "3385:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3385:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3380:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "3380:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3359:3:8",
																					"nodeType": "YulBlock",
																					"src": "3359:3:8",
																					"statements": []
																				},
																				"src": "3355:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "3625:166:8",
																					"nodeType": "YulBlock",
																					"src": "3625:166:8",
																					"statements": [
																						{
																							"nativeSrc": "3643:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3643:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3670:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "3670:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3675:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3675:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3666:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3666:3:8"
																										},
																										"nativeSrc": "3666:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3666:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3660:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3660:5:8"
																								},
																								"nativeSrc": "3660:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3660:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3647:9:8",
																									"nodeType": "YulTypedName",
																									"src": "3647:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3710:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3710:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3722:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3722:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3749:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "3749:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3752:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "3752:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3745:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "3745:3:8"
																																		},
																																		"nativeSrc": "3745:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3745:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3761:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "3761:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3741:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "3741:3:8"
																																},
																																"nativeSrc": "3741:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "3741:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3771:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "3771:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3767:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "3767:3:8"
																																},
																																"nativeSrc": "3767:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "3767:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3737:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "3737:3:8"
																														},
																														"nativeSrc": "3737:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "3737:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3733:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "3733:3:8"
																												},
																												"nativeSrc": "3733:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "3733:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3718:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3718:3:8"
																										},
																										"nativeSrc": "3718:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3718:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3703:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3703:6:8"
																								},
																								"nativeSrc": "3703:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3703:74:8"
																							},
																							"nativeSrc": "3703:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3703:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3596:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "3596:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3605:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3605:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3593:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3593:2:8"
																					},
																					"nativeSrc": "3593:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3593:19:8"
																				},
																				"nativeSrc": "3590:201:8",
																				"nodeType": "YulIf",
																				"src": "3590:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3811:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3811:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3825:1:8",
																											"nodeType": "YulLiteral",
																											"src": "3825:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3828:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "3828:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3821:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "3821:3:8"
																									},
																									"nativeSrc": "3821:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "3821:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3837:1:8",
																									"nodeType": "YulLiteral",
																									"src": "3837:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3817:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3817:3:8"
																							},
																							"nativeSrc": "3817:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3817:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3804:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3804:6:8"
																					},
																					"nativeSrc": "3804:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3804:36:8"
																				},
																				"nativeSrc": "3804:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3804:36:8"
																			}
																		]
																	},
																	"nativeSrc": "3201:649:8",
																	"nodeType": "YulCase",
																	"src": "3201:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3206:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3206:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3867:234:8",
																		"nodeType": "YulBlock",
																		"src": "3867:234:8",
																		"statements": [
																			{
																				"nativeSrc": "3881:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3881:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3894:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3894:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3885:5:8",
																						"nodeType": "YulTypedName",
																						"src": "3885:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3930:67:8",
																					"nodeType": "YulBlock",
																					"src": "3930:67:8",
																					"statements": [
																						{
																							"nativeSrc": "3948:35:8",
																							"nodeType": "YulAssignment",
																							"src": "3948:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3967:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "3967:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3972:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3972:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3963:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3963:3:8"
																										},
																										"nativeSrc": "3963:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3963:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3957:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3957:5:8"
																								},
																								"nativeSrc": "3957:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3957:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3948:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3948:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3911:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3911:6:8"
																				},
																				"nativeSrc": "3908:89:8",
																				"nodeType": "YulIf",
																				"src": "3908:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4017:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4017:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4076:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4076:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4083:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4083:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4023:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "4023:52:8"
																							},
																							"nativeSrc": "4023:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4023:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4010:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4010:6:8"
																					},
																					"nativeSrc": "4010:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4010:81:8"
																				},
																				"nativeSrc": "4010:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4010:81:8"
																			}
																		]
																	},
																	"nativeSrc": "3859:242:8",
																	"nodeType": "YulCase",
																	"src": "3859:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3181:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3181:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3189:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3189:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3178:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3178:2:8"
																},
																"nativeSrc": "3178:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3178:14:8"
															},
															"nativeSrc": "3171:930:8",
															"nodeType": "YulSwitch",
															"src": "3171:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2808:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2889:4:8",
														"nodeType": "YulTypedName",
														"src": "2889:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2895:3:8",
														"nodeType": "YulTypedName",
														"src": "2895:3:8",
														"type": ""
													}
												],
												"src": "2808:1299:8"
											},
											{
												"body": {
													"nativeSrc": "4213:102:8",
													"nodeType": "YulBlock",
													"src": "4213:102:8",
													"statements": [
														{
															"nativeSrc": "4223:26:8",
															"nodeType": "YulAssignment",
															"src": "4223:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4235:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4235:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4231:3:8"
																},
																"nativeSrc": "4231:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4231:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4223:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4223:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4265:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4265:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4280:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4280:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4296:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4296:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4301:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4301:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4292:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4292:3:8"
																						},
																						"nativeSrc": "4292:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4292:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4305:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4305:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4288:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:8"
																				},
																				"nativeSrc": "4288:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4288:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4276:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4276:3:8"
																		},
																		"nativeSrc": "4276:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4276:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:8"
																},
																"nativeSrc": "4258:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4258:51:8"
															},
															"nativeSrc": "4258:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4258:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4112:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4182:9:8",
														"nodeType": "YulTypedName",
														"src": "4182:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4193:6:8",
														"nodeType": "YulTypedName",
														"src": "4193:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4204:4:8",
														"nodeType": "YulTypedName",
														"src": "4204:4:8",
														"type": ""
													}
												],
												"src": "4112:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610bc8380380610bc883398101604081905261002e9161017a565b828282600361003d8382610280565b50600461004a8282610280565b5050506001600160a01b03811661007a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100838161008c565b5050505061033a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610100575f80fd5b81516001600160401b03811115610119576101196100dd565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610147576101476100dd565b60405281815283820160200185101561015e575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f805f6060848603121561018c575f80fd5b83516001600160a01b03811681146101a2575f80fd5b60208501519093506001600160401b038111156101bd575f80fd5b6101c9868287016100f1565b604086015190935090506001600160401b038111156101e6575f80fd5b6101f2868287016100f1565b9150509250925092565b600181811c9082168061021057607f821691505b60208210810361022e57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561027b57805f5260205f20601f840160051c810160208510156102595750805b601f840160051c820191505b81811015610278575f8155600101610265565b50505b505050565b81516001600160401b03811115610299576102996100dd565b6102ad816102a784546101fc565b84610234565b6020601f8211600181146102df575f83156102c85750848201515b5f19600385901b1c1916600184901b178455610278565b5f84815260208120601f198516915b8281101561030e57878501518255602094850194600190920191016102ee565b508482101561032b57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b610881806103475f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106f1565b60405180910390f35b6101006100fb366004610741565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610769565b6102b3565b604051601281526020016100e4565b610157610152366004610741565b6102d6565b005b6101146101673660046107a3565b6001600160a01b03165f9081526020819052604090205490565b6101576102ec565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102ff565b6101006101ba366004610741565b61030e565b6101146101cd3660046107c3565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101576102053660046107a3565b61031b565b606060038054610219906107f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107f4565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561035d565b60019150505b92915050565b5f336102c085828561036f565b6102cb8585856103ea565b506001949350505050565b6102de610447565b6102e88282610474565b5050565b6102f4610447565b6102fd5f6104a8565b565b606060048054610219906107f4565b5f336102a78185856103ea565b610323610447565b6001600160a01b03811661035157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61035a816104a8565b50565b61036a83838360016104f9565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103e457818110156103d657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610348565b6103e484848484035f6104f9565b50505050565b6001600160a01b03831661041357604051634b637e8f60e11b81525f6004820152602401610348565b6001600160a01b03821661043c5760405163ec442f0560e01b81525f6004820152602401610348565b61036a8383836105cb565b6005546001600160a01b031633146102fd5760405163118cdaa760e01b8152336004820152602401610348565b6001600160a01b03821661049d5760405163ec442f0560e01b81525f6004820152602401610348565b6102e85f83836105cb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105225760405163e602df0560e01b81525f6004820152602401610348565b6001600160a01b03831661054b57604051634a1406b160e11b81525f6004820152602401610348565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105bd91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f5578060025f8282546105ea919061082c565b909155506106659050565b6001600160a01b0383165f90815260208190526040902054818110156106475760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166106815760028054829003905561069f565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e491815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461073c575f80fd5b919050565b5f8060408385031215610752575f80fd5b61075b83610726565b946020939093013593505050565b5f805f6060848603121561077b575f80fd5b61078484610726565b925061079260208501610726565b929592945050506040919091013590565b5f602082840312156107b3575f80fd5b6107bc82610726565b9392505050565b5f80604083850312156107d4575f80fd5b6107dd83610726565b91506107eb60208401610726565b90509250929050565b600181811c9082168061080857607f821691505b60208210810361082657634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea264697066735822122034947ef06eabc88d56bcadb108e1f26ff8b9d82a360a265704a2da3945308b0664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBC8 CODESIZE SUB DUP1 PUSH2 0xBC8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x17A JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x280 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x280 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83 DUP2 PUSH2 0x8C JUMP JUMPDEST POP POP POP POP PUSH2 0x33A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x119 JUMPI PUSH2 0x119 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x147 JUMPI PUSH2 0x147 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x15E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C9 DUP7 DUP3 DUP8 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 DUP7 DUP3 DUP8 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x210 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x259 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x299 JUMPI PUSH2 0x299 PUSH2 0xDD JUMP JUMPDEST PUSH2 0x2AD DUP2 PUSH2 0x2A7 DUP5 SLOAD PUSH2 0x1FC JUMP JUMPDEST DUP5 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DF JUMPI PUSH0 DUP4 ISZERO PUSH2 0x2C8 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x278 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x30E JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2EE JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x32B JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x881 DUP1 PUSH2 0x347 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2E8 DUP3 DUP3 PUSH2 0x474 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2FD PUSH0 PUSH2 0x4A8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x323 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x4A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3E4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2E8 PUSH0 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x665 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x681 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x726 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x77B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x784 DUP5 PUSH2 0x726 JUMP JUMPDEST SWAP3 POP PUSH2 0x792 PUSH1 0x20 DUP6 ADD PUSH2 0x726 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BC DUP3 PUSH2 0x726 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DD DUP4 PUSH2 0x726 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EB PUSH1 0x20 DUP5 ADD PUSH2 0x726 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x808 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x826 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP5 PUSH31 0xF06EABC88D56BCADB108E1F26FF8B9D82A360A265704A2DA3945308B066473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "168:301:6:-:0;;;210:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:12;322:4;328:6;1962:5:2;:13;322:4:6;1962:5:2;:13;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4258:51:8;4231:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;210:150:6;;;168:301;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:8;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:8;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:8;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:8;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:8:o;874:724::-;982:6;990;998;1051:2;1039:9;1030:7;1026:23;1022:32;1019:52;;;1067:1;1064;1057:12;1019:52;1093:16;;-1:-1:-1;;;;;1138:31:8;;1128:42;;1118:70;;1184:1;1181;1174:12;1118:70;1256:2;1241:18;;1235:25;1207:5;;-1:-1:-1;;;;;;1272:30:8;;1269:50;;;1315:1;1312;1305:12;1269:50;1338:61;1391:7;1382:6;1371:9;1367:22;1338:61;:::i;:::-;1445:2;1430:18;;1424:25;1328:71;;-1:-1:-1;1424:25:8;-1:-1:-1;;;;;;1461:32:8;;1458:52;;;1506:1;1503;1496:12;1458:52;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;874:724;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:518::-;2216:2;2211:3;2208:11;2205:421;;;2252:5;2249:1;2242:16;2296:4;2293:1;2283:18;2366:2;2354:10;2350:19;2347:1;2343:27;2337:4;2333:38;2402:4;2390:10;2387:20;2384:47;;;-1:-1:-1;2425:4:8;2384:47;2480:2;2475:3;2471:12;2468:1;2464:20;2458:4;2454:31;2444:41;;2535:81;2553:2;2546:5;2543:13;2535:81;;;2612:1;2598:16;;2579:1;2568:13;2535:81;;;2539:3;;2205:421;2114:518;;;:::o;2808:1299::-;2928:10;;-1:-1:-1;;;;;2950:30:8;;2947:56;;;2983:18;;:::i;:::-;3012:97;3102:6;3062:38;3094:4;3088:11;3062:38;:::i;:::-;3056:4;3012:97;:::i;:::-;3158:4;3189:2;3178:14;;3206:1;3201:649;;;;3894:1;3911:6;3908:89;;;-1:-1:-1;3963:19:8;;;3957:26;3908:89;-1:-1:-1;;2765:1:8;2761:11;;;2757:24;2753:29;2743:40;2789:1;2785:11;;;2740:57;4010:81;;3171:930;;3201:649;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3237:20:8;;;3355:222;3369:7;3366:1;3363:14;3355:222;;;3451:19;;;3445:26;3430:42;;3558:4;3543:20;;;;3511:1;3499:14;;;;3385:12;3355:222;;;3359:3;3605:6;3596:7;3593:19;3590:201;;;3666:19;;;3660:26;-1:-1:-1;;3749:1:8;3745:14;;;3761:3;3741:24;3737:37;3733:42;3718:58;3703:74;;3590:201;-1:-1:-1;;;;3837:1:8;3821:14;;;3817:22;3804:36;;-1:-1:-1;2808:1299:8:o;4112:203::-;168:301:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 861,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1273,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1095,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1140,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 879,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1192,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1002,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1483,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 666,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_973": {
									"entryPoint": 726,
									"id": 973,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 522,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 748,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 767,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 691,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 795,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 782,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3485:8",
										"nodeType": "YulBlock",
										"src": "0:3485:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:8",
													"nodeType": "YulBlock",
													"src": "135:297:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:8",
																		"nodeType": "YulLiteral",
																		"src": "163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:8"
																},
																"nativeSrc": "145:21:8",
																"nodeType": "YulFunctionCall",
																"src": "145:21:8"
															},
															"nativeSrc": "145:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:8"
														},
														{
															"nativeSrc": "175:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:8"
																},
																"nativeSrc": "189:13:8",
																"nodeType": "YulFunctionCall",
																"src": "189:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:8",
																	"nodeType": "YulTypedName",
																	"src": "179:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:8",
																				"nodeType": "YulLiteral",
																				"src": "233:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:8"
																		},
																		"nativeSrc": "218:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																},
																"nativeSrc": "211:34:8",
																"nodeType": "YulFunctionCall",
																"src": "211:34:8"
															},
															"nativeSrc": "211:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:8",
																				"nodeType": "YulLiteral",
																				"src": "275:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:8"
																		},
																		"nativeSrc": "260:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:8",
																				"nodeType": "YulLiteral",
																				"src": "292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:8"
																		},
																		"nativeSrc": "280:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:8"
																},
																"nativeSrc": "254:50:8",
																"nodeType": "YulFunctionCall",
																"src": "254:50:8"
															},
															"nativeSrc": "254:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:8"
																				},
																				"nativeSrc": "324:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:8",
																				"nodeType": "YulLiteral",
																				"src": "348:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:8"
																		},
																		"nativeSrc": "320:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:8",
																		"nodeType": "YulLiteral",
																		"src": "353:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:8"
																},
																"nativeSrc": "313:42:8",
																"nodeType": "YulFunctionCall",
																"src": "313:42:8"
															},
															"nativeSrc": "313:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:8"
														},
														{
															"nativeSrc": "364:62:8",
															"nodeType": "YulAssignment",
															"src": "364:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:8",
																								"nodeType": "YulLiteral",
																								"src": "407:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:8"
																						},
																						"nativeSrc": "395:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:8",
																								"nodeType": "YulLiteral",
																								"src": "416:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:8"
																						},
																						"nativeSrc": "412:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:8"
																				},
																				"nativeSrc": "391:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:8"
																		},
																		"nativeSrc": "376:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "423:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:8"
																},
																"nativeSrc": "372:54:8",
																"nodeType": "YulFunctionCall",
																"src": "372:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:418:8"
											},
											{
												"body": {
													"nativeSrc": "486:124:8",
													"nodeType": "YulBlock",
													"src": "486:124:8",
													"statements": [
														{
															"nativeSrc": "496:29:8",
															"nodeType": "YulAssignment",
															"src": "496:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:8"
																},
																"nativeSrc": "505:20:8",
																"nodeType": "YulFunctionCall",
																"src": "505:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:8",
																"nodeType": "YulBlock",
																"src": "588:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:8",
																					"nodeType": "YulLiteral",
																					"src": "597:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:8",
																					"nodeType": "YulLiteral",
																					"src": "600:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:8"
																			},
																			"nativeSrc": "590:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:8"
																		},
																		"nativeSrc": "590:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:8",
																										"nodeType": "YulLiteral",
																										"src": "573:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:8",
																										"nodeType": "YulLiteral",
																										"src": "578:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:8"
																								},
																								"nativeSrc": "569:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:8",
																								"nodeType": "YulLiteral",
																								"src": "582:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:8"
																						},
																						"nativeSrc": "565:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:8"
																				},
																				"nativeSrc": "554:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:8"
																		},
																		"nativeSrc": "544:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:8"
																},
																"nativeSrc": "537:50:8",
																"nodeType": "YulFunctionCall",
																"src": "537:50:8"
															},
															"nativeSrc": "534:70:8",
															"nodeType": "YulIf",
															"src": "534:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:8",
														"nodeType": "YulTypedName",
														"src": "465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:8",
														"nodeType": "YulTypedName",
														"src": "476:5:8",
														"type": ""
													}
												],
												"src": "437:173:8"
											},
											{
												"body": {
													"nativeSrc": "702:213:8",
													"nodeType": "YulBlock",
													"src": "702:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:8",
																"nodeType": "YulBlock",
																"src": "748:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:8",
																					"nodeType": "YulLiteral",
																					"src": "757:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:8",
																					"nodeType": "YulLiteral",
																					"src": "760:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:8"
																			},
																			"nativeSrc": "750:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:8"
																		},
																		"nativeSrc": "750:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:8"
																		},
																		"nativeSrc": "719:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "744:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:8"
																},
																"nativeSrc": "715:32:8",
																"nodeType": "YulFunctionCall",
																"src": "715:32:8"
															},
															"nativeSrc": "712:52:8",
															"nodeType": "YulIf",
															"src": "712:52:8"
														},
														{
															"nativeSrc": "773:39:8",
															"nodeType": "YulAssignment",
															"src": "773:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:8"
																},
																"nativeSrc": "783:29:8",
																"nodeType": "YulFunctionCall",
																"src": "783:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:8"
																}
															]
														},
														{
															"nativeSrc": "821:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:8",
																"nodeType": "YulLiteral",
																"src": "834:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:8",
																	"nodeType": "YulTypedName",
																	"src": "825:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:8",
															"nodeType": "YulAssignment",
															"src": "844:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:8",
																				"nodeType": "YulLiteral",
																				"src": "881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:8"
																		},
																		"nativeSrc": "866:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:8"
																},
																"nativeSrc": "853:32:8",
																"nodeType": "YulFunctionCall",
																"src": "853:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:8"
																}
															]
														},
														{
															"nativeSrc": "894:15:8",
															"nodeType": "YulAssignment",
															"src": "894:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:8",
																"nodeType": "YulIdentifier",
																"src": "904:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:8",
														"nodeType": "YulTypedName",
														"src": "660:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:8",
														"nodeType": "YulTypedName",
														"src": "671:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:8",
														"nodeType": "YulTypedName",
														"src": "683:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:8",
														"nodeType": "YulTypedName",
														"src": "691:6:8",
														"type": ""
													}
												],
												"src": "615:300:8"
											},
											{
												"body": {
													"nativeSrc": "1015:92:8",
													"nodeType": "YulBlock",
													"src": "1015:92:8",
													"statements": [
														{
															"nativeSrc": "1025:26:8",
															"nodeType": "YulAssignment",
															"src": "1025:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:8"
																},
																"nativeSrc": "1033:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:8"
																				},
																				"nativeSrc": "1085:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:8"
																		},
																		"nativeSrc": "1078:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:8"
																},
																"nativeSrc": "1060:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:8"
															},
															"nativeSrc": "1060:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:8",
														"nodeType": "YulTypedName",
														"src": "984:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:8",
														"nodeType": "YulTypedName",
														"src": "995:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:8",
														"nodeType": "YulTypedName",
														"src": "1006:4:8",
														"type": ""
													}
												],
												"src": "920:187:8"
											},
											{
												"body": {
													"nativeSrc": "1213:76:8",
													"nodeType": "YulBlock",
													"src": "1213:76:8",
													"statements": [
														{
															"nativeSrc": "1223:26:8",
															"nodeType": "YulAssignment",
															"src": "1223:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:8"
																},
																"nativeSrc": "1231:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:8"
																},
																"nativeSrc": "1258:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:8"
															},
															"nativeSrc": "1258:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:8",
														"nodeType": "YulTypedName",
														"src": "1182:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:8",
														"nodeType": "YulTypedName",
														"src": "1193:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:8",
														"nodeType": "YulTypedName",
														"src": "1204:4:8",
														"type": ""
													}
												],
												"src": "1112:177:8"
											},
											{
												"body": {
													"nativeSrc": "1398:270:8",
													"nodeType": "YulBlock",
													"src": "1398:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:8",
																"nodeType": "YulBlock",
																"src": "1444:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:8"
																			},
																			"nativeSrc": "1446:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:8"
																		},
																		"nativeSrc": "1446:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:8"
																		},
																		"nativeSrc": "1415:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:8"
																},
																"nativeSrc": "1411:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:8"
															},
															"nativeSrc": "1408:52:8",
															"nodeType": "YulIf",
															"src": "1408:52:8"
														},
														{
															"nativeSrc": "1469:39:8",
															"nodeType": "YulAssignment",
															"src": "1469:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:8"
																},
																"nativeSrc": "1479:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:8"
																}
															]
														},
														{
															"nativeSrc": "1517:48:8",
															"nodeType": "YulAssignment",
															"src": "1517:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:8"
																		},
																		"nativeSrc": "1546:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:8"
																},
																"nativeSrc": "1527:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:8"
																}
															]
														},
														{
															"nativeSrc": "1574:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:8",
																"nodeType": "YulLiteral",
																"src": "1587:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:8",
															"nodeType": "YulAssignment",
															"src": "1597:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:8"
																		},
																		"nativeSrc": "1619:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:8"
																},
																"nativeSrc": "1606:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:8"
																}
															]
														},
														{
															"nativeSrc": "1647:15:8",
															"nodeType": "YulAssignment",
															"src": "1647:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:8",
																"nodeType": "YulIdentifier",
																"src": "1657:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:8",
														"nodeType": "YulTypedName",
														"src": "1348:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:8",
														"nodeType": "YulTypedName",
														"src": "1359:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:8",
														"nodeType": "YulTypedName",
														"src": "1371:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:8",
														"nodeType": "YulTypedName",
														"src": "1379:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:8",
														"nodeType": "YulTypedName",
														"src": "1387:6:8",
														"type": ""
													}
												],
												"src": "1294:374:8"
											},
											{
												"body": {
													"nativeSrc": "1770:87:8",
													"nodeType": "YulBlock",
													"src": "1770:87:8",
													"statements": [
														{
															"nativeSrc": "1780:26:8",
															"nodeType": "YulAssignment",
															"src": "1780:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:8"
																},
																"nativeSrc": "1788:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:8"
																		},
																		"nativeSrc": "1833:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:8"
																},
																"nativeSrc": "1815:36:8",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:8"
															},
															"nativeSrc": "1815:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:8",
														"nodeType": "YulTypedName",
														"src": "1739:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:8",
														"nodeType": "YulTypedName",
														"src": "1750:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:8",
														"nodeType": "YulTypedName",
														"src": "1761:4:8",
														"type": ""
													}
												],
												"src": "1673:184:8"
											},
											{
												"body": {
													"nativeSrc": "1932:116:8",
													"nodeType": "YulBlock",
													"src": "1932:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:8",
																"nodeType": "YulBlock",
																"src": "1978:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:8"
																			},
																			"nativeSrc": "1980:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:8"
																		},
																		"nativeSrc": "1980:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:8"
																		},
																		"nativeSrc": "1949:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:8"
																},
																"nativeSrc": "1945:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:8"
															},
															"nativeSrc": "1942:52:8",
															"nodeType": "YulIf",
															"src": "1942:52:8"
														},
														{
															"nativeSrc": "2003:39:8",
															"nodeType": "YulAssignment",
															"src": "2003:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:8"
																},
																"nativeSrc": "2013:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:8",
														"nodeType": "YulTypedName",
														"src": "1898:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:8",
														"nodeType": "YulTypedName",
														"src": "1909:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:8",
														"nodeType": "YulTypedName",
														"src": "1921:6:8",
														"type": ""
													}
												],
												"src": "1862:186:8"
											},
											{
												"body": {
													"nativeSrc": "2154:102:8",
													"nodeType": "YulBlock",
													"src": "2154:102:8",
													"statements": [
														{
															"nativeSrc": "2164:26:8",
															"nodeType": "YulAssignment",
															"src": "2164:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2176:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2176:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2187:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2187:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2172:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:8"
																},
																"nativeSrc": "2172:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2172:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2164:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2164:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2206:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2206:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2221:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2237:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2237:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2242:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2242:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2233:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2233:3:8"
																						},
																						"nativeSrc": "2233:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2233:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2246:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2246:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2229:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2229:3:8"
																				},
																				"nativeSrc": "2229:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2229:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2217:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:8"
																		},
																		"nativeSrc": "2217:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2217:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2199:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:8"
																},
																"nativeSrc": "2199:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2199:51:8"
															},
															"nativeSrc": "2199:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2199:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2053:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2123:9:8",
														"nodeType": "YulTypedName",
														"src": "2123:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2134:6:8",
														"nodeType": "YulTypedName",
														"src": "2134:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2145:4:8",
														"nodeType": "YulTypedName",
														"src": "2145:4:8",
														"type": ""
													}
												],
												"src": "2053:203:8"
											},
											{
												"body": {
													"nativeSrc": "2348:173:8",
													"nodeType": "YulBlock",
													"src": "2348:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2394:16:8",
																"nodeType": "YulBlock",
																"src": "2394:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2396:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:8"
																			},
																			"nativeSrc": "2396:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:12:8"
																		},
																		"nativeSrc": "2396:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2369:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2369:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2365:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:8"
																		},
																		"nativeSrc": "2365:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2390:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2361:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:8"
																},
																"nativeSrc": "2361:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2361:32:8"
															},
															"nativeSrc": "2358:52:8",
															"nodeType": "YulIf",
															"src": "2358:52:8"
														},
														{
															"nativeSrc": "2419:39:8",
															"nodeType": "YulAssignment",
															"src": "2419:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2429:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2429:18:8"
																},
																"nativeSrc": "2429:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2429:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:8"
																}
															]
														},
														{
															"nativeSrc": "2467:48:8",
															"nodeType": "YulAssignment",
															"src": "2467:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:8"
																		},
																		"nativeSrc": "2496:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2477:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2477:18:8"
																},
																"nativeSrc": "2477:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2477:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2467:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2261:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2306:9:8",
														"nodeType": "YulTypedName",
														"src": "2306:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2317:7:8",
														"nodeType": "YulTypedName",
														"src": "2317:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2329:6:8",
														"nodeType": "YulTypedName",
														"src": "2329:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2337:6:8",
														"nodeType": "YulTypedName",
														"src": "2337:6:8",
														"type": ""
													}
												],
												"src": "2261:260:8"
											},
											{
												"body": {
													"nativeSrc": "2581:325:8",
													"nodeType": "YulBlock",
													"src": "2581:325:8",
													"statements": [
														{
															"nativeSrc": "2591:22:8",
															"nodeType": "YulAssignment",
															"src": "2591:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2605:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2608:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2608:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:8"
																},
																"nativeSrc": "2601:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2591:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:8"
																}
															]
														},
														{
															"nativeSrc": "2622:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2622:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2652:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2652:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2658:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:8"
																},
																"nativeSrc": "2648:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2648:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2626:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2626:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2699:31:8",
																"nodeType": "YulBlock",
																"src": "2699:31:8",
																"statements": [
																	{
																		"nativeSrc": "2701:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2701:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2715:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2715:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2723:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2723:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2711:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:8"
																			},
																			"nativeSrc": "2711:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2711:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2679:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2679:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:8"
																},
																"nativeSrc": "2672:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2672:26:8"
															},
															"nativeSrc": "2669:61:8",
															"nodeType": "YulIf",
															"src": "2669:61:8"
														},
														{
															"body": {
																"nativeSrc": "2789:111:8",
																"nodeType": "YulBlock",
																"src": "2789:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:8"
																					},
																					"nativeSrc": "2813:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:8"
																			},
																			"nativeSrc": "2803:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:8"
																		},
																		"nativeSrc": "2803:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:8"
																			},
																			"nativeSrc": "2847:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:8"
																		},
																		"nativeSrc": "2847:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:8"
																			},
																			"nativeSrc": "2875:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:8"
																		},
																		"nativeSrc": "2875:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2745:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2745:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2765:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2765:2:8"
																		},
																		"nativeSrc": "2765:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2742:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:8"
																},
																"nativeSrc": "2742:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2742:38:8"
															},
															"nativeSrc": "2739:161:8",
															"nodeType": "YulIf",
															"src": "2739:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2526:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2561:4:8",
														"nodeType": "YulTypedName",
														"src": "2561:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2570:6:8",
														"nodeType": "YulTypedName",
														"src": "2570:6:8",
														"type": ""
													}
												],
												"src": "2526:380:8"
											},
											{
												"body": {
													"nativeSrc": "3068:188:8",
													"nodeType": "YulBlock",
													"src": "3068:188:8",
													"statements": [
														{
															"nativeSrc": "3078:26:8",
															"nodeType": "YulAssignment",
															"src": "3078:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3090:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3090:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3101:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3086:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3086:3:8"
																},
																"nativeSrc": "3086:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3086:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3078:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3078:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3120:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3135:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3135:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3151:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3151:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3156:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3156:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3147:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3147:3:8"
																						},
																						"nativeSrc": "3147:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3147:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3160:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3160:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3143:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3143:3:8"
																				},
																				"nativeSrc": "3143:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3143:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3131:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:8"
																		},
																		"nativeSrc": "3131:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3113:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:8"
																},
																"nativeSrc": "3113:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3113:51:8"
															},
															"nativeSrc": "3113:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3113:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3184:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3184:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3195:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3195:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3180:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:8"
																		},
																		"nativeSrc": "3180:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3180:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3200:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3200:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3173:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:8"
																},
																"nativeSrc": "3173:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3173:34:8"
															},
															"nativeSrc": "3173:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3173:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3227:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3227:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3238:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3238:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3223:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:8"
																		},
																		"nativeSrc": "3223:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3223:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3243:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:8"
																},
																"nativeSrc": "3216:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3216:34:8"
															},
															"nativeSrc": "3216:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2911:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3021:9:8",
														"nodeType": "YulTypedName",
														"src": "3021:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3032:6:8",
														"nodeType": "YulTypedName",
														"src": "3032:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3040:6:8",
														"nodeType": "YulTypedName",
														"src": "3040:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3048:6:8",
														"nodeType": "YulTypedName",
														"src": "3048:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3059:4:8",
														"nodeType": "YulTypedName",
														"src": "3059:4:8",
														"type": ""
													}
												],
												"src": "2911:345:8"
											},
											{
												"body": {
													"nativeSrc": "3309:174:8",
													"nodeType": "YulBlock",
													"src": "3309:174:8",
													"statements": [
														{
															"nativeSrc": "3319:16:8",
															"nodeType": "YulAssignment",
															"src": "3319:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3330:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3333:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3333:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3326:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:8"
																},
																"nativeSrc": "3326:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3326:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3319:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:111:8",
																"nodeType": "YulBlock",
																"src": "3366:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3387:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3387:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3394:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3394:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3399:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3399:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3390:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:8"
																					},
																					"nativeSrc": "3390:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3390:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3380:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:8"
																			},
																			"nativeSrc": "3380:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:31:8"
																		},
																		"nativeSrc": "3380:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3431:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3431:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3434:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3434:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3424:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3424:6:8"
																			},
																			"nativeSrc": "3424:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3424:15:8"
																		},
																		"nativeSrc": "3424:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3424:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3459:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3462:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3462:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3452:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:8"
																			},
																			"nativeSrc": "3452:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3452:15:8"
																		},
																		"nativeSrc": "3452:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3350:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3350:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3353:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3347:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3347:2:8"
																},
																"nativeSrc": "3347:10:8",
																"nodeType": "YulFunctionCall",
																"src": "3347:10:8"
															},
															"nativeSrc": "3344:133:8",
															"nodeType": "YulIf",
															"src": "3344:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3261:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3292:1:8",
														"nodeType": "YulTypedName",
														"src": "3292:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3295:1:8",
														"nodeType": "YulTypedName",
														"src": "3295:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3301:3:8",
														"nodeType": "YulTypedName",
														"src": "3301:3:8",
														"type": ""
													}
												],
												"src": "3261:222:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106f1565b60405180910390f35b6101006100fb366004610741565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610769565b6102b3565b604051601281526020016100e4565b610157610152366004610741565b6102d6565b005b6101146101673660046107a3565b6001600160a01b03165f9081526020819052604090205490565b6101576102ec565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102ff565b6101006101ba366004610741565b61030e565b6101146101cd3660046107c3565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101576102053660046107a3565b61031b565b606060038054610219906107f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107f4565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561035d565b60019150505b92915050565b5f336102c085828561036f565b6102cb8585856103ea565b506001949350505050565b6102de610447565b6102e88282610474565b5050565b6102f4610447565b6102fd5f6104a8565b565b606060048054610219906107f4565b5f336102a78185856103ea565b610323610447565b6001600160a01b03811661035157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61035a816104a8565b50565b61036a83838360016104f9565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103e457818110156103d657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610348565b6103e484848484035f6104f9565b50505050565b6001600160a01b03831661041357604051634b637e8f60e11b81525f6004820152602401610348565b6001600160a01b03821661043c5760405163ec442f0560e01b81525f6004820152602401610348565b61036a8383836105cb565b6005546001600160a01b031633146102fd5760405163118cdaa760e01b8152336004820152602401610348565b6001600160a01b03821661049d5760405163ec442f0560e01b81525f6004820152602401610348565b6102e85f83836105cb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105225760405163e602df0560e01b81525f6004820152602401610348565b6001600160a01b03831661054b57604051634a1406b160e11b81525f6004820152602401610348565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105bd91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f5578060025f8282546105ea919061082c565b909155506106659050565b6001600160a01b0383165f90815260208190526040902054818110156106475760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166106815760028054829003905561069f565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e491815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461073c575f80fd5b919050565b5f8060408385031215610752575f80fd5b61075b83610726565b946020939093013593505050565b5f805f6060848603121561077b575f80fd5b61078484610726565b925061079260208501610726565b929592945050506040919091013590565b5f602082840312156107b3575f80fd5b6107bc82610726565b9392505050565b5f80604083850312156107d4575f80fd5b6107dd83610726565b91506107eb60208401610726565b90509250929050565b600181811c9082168061080857607f821691505b60208210810361082657634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea264697066735822122034947ef06eabc88d56bcadb108e1f26ff8b9d82a360a265704a2da3945308b0664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2E8 DUP3 DUP3 PUSH2 0x474 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2FD PUSH0 PUSH2 0x4A8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x323 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x4A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3E4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2E8 PUSH0 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x665 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x681 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x726 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x77B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x784 DUP5 PUSH2 0x726 JUMP JUMPDEST SWAP3 POP PUSH2 0x792 PUSH1 0x20 DUP6 ADD PUSH2 0x726 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BC DUP3 PUSH2 0x726 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DD DUP4 PUSH2 0x726 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EB PUSH1 0x20 DUP5 ADD PUSH2 0x726 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x808 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x826 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP5 PUSH31 0xF06EABC88D56BCADB108E1F26FF8B9D82A360A265704A2DA3945308B066473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "168:301:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:8;;1078:22;1060:41;;1048:2;1033:18;4293:186:2;920:187:8;3144:97:2;3222:12;;3144:97;;;1258:25:8;;;1246:2;1231:18;3144:97:2;1112:177:8;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1815:36:8;;1803:2;1788:18;3002:82:2;1673:184:8;366:101:6;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2199:51:8;;2187:2;2172:18;1638:85:0;2053:203:8;2276:93:2;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;:::i;:::-;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;366:101:6:-;1531:13:0;:11;:13::i;:::-;439:21:6::1;445:6;453;439:5;:21::i;:::-;366:101:::0;;:::o;2293::0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2199:51:8::0;2172:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;3131:32:8;;10936:60:2;;;3113:51:8;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;10936:60:2;2911:345:8;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2199:51:8;2172:18;;5780:30:2;2053:203:8;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2199:51:8;2172:18;;5873:32:2;2053:203:8;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2199:51:8;2172:18;;1901:40:0;2053:203:8;7721:208:2;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2199:51:8;2172:18;;7835:32:2;2053:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2199:51:8;2172:18;;10103:32:2;2053:203:8;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2199:51:8;2172:18;;10203:31:2;2053:203:8;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1258:25:8;;1246:2;1231:18;;1112:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3131:32:8;;6649:50:2;;;3113:51:8;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;6649:50:2;2911:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1258::8;;1246:2;1231:18;;1112:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:418:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:8;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:8:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:8;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:8:o;2261:260::-;2329:6;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2429:29;2448:9;2429:29;:::i;:::-;2419:39;;2477:38;2511:2;2500:9;2496:18;2477:38;:::i;:::-;2467:48;;2261:260;;;;;:::o;2526:380::-;2605:1;2601:12;;;;2648;;;2669:61;;2723:4;2715:6;2711:17;2701:27;;2669:61;2776:2;2768:6;2765:14;2745:18;2742:38;2739:161;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15;2739:161;;2526:380;;;:::o;3261:222::-;3326:9;;;3347:10;;;3344:133;;;3399:10;3394:3;3390:20;3387:1;3380:31;3434:4;3431:1;3424:15;3462:4;3459:1;3452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2560",
								"decimals()": "265",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 469,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 469,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 469,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 360,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 360,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 360,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 210,
									"end": 360,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 210,
									"end": 360,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 210,
									"end": 360,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 210,
									"end": 360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 210,
									"end": 360,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 344,
									"end": 356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 322,
									"end": 326,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 328,
									"end": 334,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 322,
									"end": 326,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4258,
									"end": 4309,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4231,
									"end": 4249,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4231,
									"end": 4249,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 210,
									"end": 360,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 210,
									"end": 360,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 168,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 168,
									"end": 469,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 982,
									"end": 988,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 990,
									"end": 996,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1004,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1039,
									"end": 1048,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1037,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1049,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1067,
									"end": 1068,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1057,
									"end": 1069,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1093,
									"end": 1109,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1093,
									"end": 1109,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1138,
									"end": 1169,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1169,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1182,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1174,
									"end": 1186,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1258,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1235,
									"end": 1260,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1272,
									"end": 1302,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1302,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1316,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1312,
									"end": 1313,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1305,
									"end": 1317,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1391,
									"end": 1398,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1382,
									"end": 1388,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1371,
									"end": 1380,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1367,
									"end": 1389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1338,
									"end": 1399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1430,
									"end": 1448,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1430,
									"end": 1448,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1449,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 1449,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1461,
									"end": 1493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1493,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2114,
									"end": 2632,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2114,
									"end": 2632,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2218,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2219,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2205,
									"end": 2626,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2205,
									"end": 2626,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2205,
									"end": 2626,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2257,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2249,
									"end": 2250,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2258,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2293,
									"end": 2294,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2283,
									"end": 2301,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2366,
									"end": 2368,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2354,
									"end": 2364,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2350,
									"end": 2369,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2348,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2343,
									"end": 2370,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2337,
									"end": 2341,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2371,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2390,
									"end": 2400,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2387,
									"end": 2407,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2431,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2431,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2384,
									"end": 2431,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2431,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2384,
									"end": 2431,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2480,
									"end": 2482,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2475,
									"end": 2478,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2471,
									"end": 2483,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2469,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2464,
									"end": 2484,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2458,
									"end": 2462,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2454,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2444,
									"end": 2485,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2444,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2555,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2546,
									"end": 2551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2543,
									"end": 2556,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2598,
									"end": 2614,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2598,
									"end": 2614,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2580,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2568,
									"end": 2581,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2535,
									"end": 2616,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2539,
									"end": 2542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2539,
									"end": 2542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2205,
									"end": 2626,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2205,
									"end": 2626,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2114,
									"end": 2632,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2114,
									"end": 2632,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2114,
									"end": 2632,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2114,
									"end": 2632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2808,
									"end": 4107,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2808,
									"end": 4107,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2928,
									"end": 2938,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2928,
									"end": 2938,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2950,
									"end": 2980,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2950,
									"end": 2980,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2947,
									"end": 3003,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2947,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2947,
									"end": 3003,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2983,
									"end": 3001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3012,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3102,
									"end": 3108,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3062,
									"end": 3100,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3094,
									"end": 3098,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3099,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3062,
									"end": 3100,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3062,
									"end": 3100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3062,
									"end": 3100,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3062,
									"end": 3100,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3056,
									"end": 3060,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3012,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3012,
									"end": 3109,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3012,
									"end": 3109,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3012,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3158,
									"end": 3162,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3189,
									"end": 3191,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3178,
									"end": 3192,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3192,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3206,
									"end": 3207,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3201,
									"end": 3850,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3850,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3201,
									"end": 3850,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 3895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3911,
									"end": 3917,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3908,
									"end": 3997,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3908,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3908,
									"end": 3997,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3963,
									"end": 3982,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3963,
									"end": 3982,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3963,
									"end": 3982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3957,
									"end": 3983,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3908,
									"end": 3997,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3908,
									"end": 3997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2761,
									"end": 2772,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2761,
									"end": 2772,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2761,
									"end": 2772,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2757,
									"end": 2781,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2753,
									"end": 2782,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2743,
									"end": 2783,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2789,
									"end": 2790,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2785,
									"end": 2796,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2796,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2740,
									"end": 2797,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4010,
									"end": 4091,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4010,
									"end": 4091,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3171,
									"end": 4101,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3171,
									"end": 4101,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3850,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3201,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2102,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3237,
									"end": 3257,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3257,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3257,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3369,
									"end": 3376,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3366,
									"end": 3367,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3363,
									"end": 3377,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3445,
									"end": 3471,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3430,
									"end": 3472,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3430,
									"end": 3472,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3563,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3543,
									"end": 3563,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3543,
									"end": 3563,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3543,
									"end": 3563,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3512,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3499,
									"end": 3513,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3513,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3513,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3513,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3385,
									"end": 3397,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3355,
									"end": 3577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3362,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3605,
									"end": 3611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3596,
									"end": 3603,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3593,
									"end": 3612,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3590,
									"end": 3791,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3590,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3590,
									"end": 3791,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3660,
									"end": 3686,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3749,
									"end": 3750,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3745,
									"end": 3759,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3759,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3759,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3764,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 3741,
									"end": 3765,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3737,
									"end": 3774,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3733,
									"end": 3775,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3718,
									"end": 3776,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3703,
									"end": 3777,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3703,
									"end": 3777,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3590,
									"end": 3791,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3590,
									"end": 3791,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3837,
									"end": 3838,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3821,
									"end": 3835,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3835,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3835,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3817,
									"end": 3839,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 3840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 3840,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2808,
									"end": 4107,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4112,
									"end": 4315,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 4112,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 168,
									"end": 469,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 469,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 469,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 469,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 469,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034947ef06eabc88d56bcadb108e1f26ff8b9d82a360a265704a2da3945308b0664736f6c634300081a0033",
									".code": [
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 366,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 366,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 366,
											"end": 467,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 366,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 366,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 366,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 366,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2189,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 366,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 445,
											"end": 451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 453,
											"end": 459,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 439,
											"end": 444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 439,
											"end": 460,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 439,
											"end": 460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 439,
											"end": 460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 366,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2393,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2429,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2477,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2780,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3409,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3390,
											"end": 3410,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3467,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/JVCToken.sol",
								"contracts/bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JVCToken.sol\":\"JVCToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/JVCToken.sol\":{\"keccak256\":\"0xc14901455fdcb8f56ed1f7b72745a283353ee84cb139a6470601ae9be1414ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50c31466fea10d0e7eaa6322ad2a1cf432384a7073d2b77bc48c964ad324fb6f\",\"dweb:/ipfs/QmVRfEKjgt1tkDPmcmoRsc7e73kawmQ6PcSLqaUBSEQ8pW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/JVCToken.sol:JVCToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/JVCToken.sol:JVCToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/JVCToken.sol:JVCToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/JVCToken.sol:JVCToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/JVCToken.sol:JVCToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/JVCToken.sol:JVCToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bank.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "DepositFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositSuccessful",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "WithdrawalFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalSuccessful",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserByAddress",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "uAddr",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "uName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										}
									],
									"internalType": "struct Bank.User",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "Uname",
									"type": "string"
								}
							],
							"name": "getUserByName",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "uAddr",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "uName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										}
									],
									"internalType": "struct Bank.User",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uname",
									"type": "string"
								},
								{
									"internalType": "address payable",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "registerUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "enum Bank.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract JVCToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "address",
									"name": "uAddr",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bank.sol\":156:5881  contract Bank is Owner, Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/bank.sol\":416:429  0.00038 ether */\n  0x01599ba503c000\n    /* \"contracts/bank.sol\":388:429  uint256 private minDepAmt = 0.00038 ether */\n  0x03\n  sstore\n    /* \"contracts/bank.sol\":465:472  1 ether */\n  0x0de0b6b3a7640000\n    /* \"contracts/bank.sol\":435:472  uint256 private maxWithdAmt = 1 ether */\n  0x04\n  sstore\n    /* \"contracts/bank.sol\":2166:2422  constructor(address _tokenAddress, address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/bank.sol\":2237:2242  token */\n  0x00\n    /* \"contracts/bank.sol\":2237:2268  token = JVCToken(_tokenAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/bank.sol\":2283:2309  initialOwner == address(0) */\n  dup2\n  and\n    /* \"contracts/bank.sol\":2279:2374  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"contracts/bank.sol\":2332:2363  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/bank.sol\":2360:2361  0 */\n  0x00\n    /* \"contracts/bank.sol\":2332:2363  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"contracts/bank.sol\":2332:2363  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/bank.sol\":2279:2374  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"contracts/bank.sol\":2383:2415  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"contracts/bank.sol\":2402:2414  initialOwner */\n  dup2\n    /* \"contracts/bank.sol\":2383:2401  _transferOwnership */\n  tag_10\n    /* \"contracts/bank.sol\":2383:2415  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_9:\n    /* \"contracts/bank.sol\":2166:2422  constructor(address _tokenAddress, address initialOwner)... */\n  pop\n  pop\n    /* \"contracts/bank.sol\":156:5881  contract Bank is Owner, Context {... */\n  jump(tag_14)\n    /* \"contracts/bank.sol\":3722:3909  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/bank.sol\":3814:3820  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/bank.sol\":3830:3847  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/bank.sol\":3862:3902  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/bank.sol\":3814:3820  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/bank.sol\":3830:3847  _owner = newOwner */\n  swap1\n    /* \"contracts/bank.sol\":3814:3820  _owner */\n  dup3\n  swap1\n    /* \"contracts/bank.sol\":3862:3902  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/bank.sol\":3795:3811  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/bank.sol\":3862:3902  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/bank.sol\":3785:3909  {... */\n  pop\n    /* \"contracts/bank.sol\":3722:3909  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_13:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_16\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_16:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_18:\n    /* \"#utility.yul\":375:415   */\n  tag_19\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_20\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_13\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_14:\n    /* \"contracts/bank.sol\":156:5881  contract Bank is Owner, Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bank.sol\":156:5881  contract Bank is Owner, Context {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0xf714ce\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0e54b872\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4bff5009\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x69c212f6\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/bank.sol\":5188:5664  function withdraw(uint256 amount, address payable addr)... */\n    tag_2:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/bank.sol\":3937:4199  function registerUser(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_14\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n        /* \"contracts/bank.sol\":974:994  Status public status */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sload(0x05)\n      tag_24\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bank.sol\":4453:4631  function getUserByName(string memory Uname)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n        /* \"contracts/bank.sol\":4234:4417  function getUserByAddress(address userAddress)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_29\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/bank.sol\":3114:3215  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_14\n      tag_43\n      jump\t// in\n        /* \"contracts/bank.sol\":2481:2566  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n        /* \"contracts/bank.sol\":2553:2559  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/bank.sol\":2481:2566  function owner() public view virtual returns (address) {... */\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3870:3902   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3852:3903   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3840:3842   */\n      0x20\n        /* \"#utility.yul\":3825:3843   */\n      add\n        /* \"contracts/bank.sol\":2481:2566  function owner() public view virtual returns (address) {... */\n      tag_26\n        /* \"#utility.yul\":3706:3909   */\n      jump\n        /* \"contracts/bank.sol\":345:382  mapping(address => User) public users */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_26\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"contracts/bank.sol\":4673:5143  function deposit()... */\n    tag_10:\n      tag_14\n      tag_56\n      jump\t// in\n        /* \"contracts/bank.sol\":3359:3574  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_14\n      tag_59\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"contracts/bank.sol\":256:277  JVCToken public token */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      sload(0x00)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/bank.sol\":5188:5664  function withdraw(uint256 amount, address payable addr)... */\n    tag_17:\n        /* \"contracts/bank.sol\":5294:5304  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":5851:5868  addr_.code.length */\n      dup1\n      extcodesize\n        /* \"contracts/bank.sol\":5851:5872  addr_.code.length > 0 */\n      iszero\n        /* \"contracts/bank.sol\":1831:1927  require(... */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":5351:5362  users[addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":5351:5356  users */\n      0x02\n        /* \"contracts/bank.sol\":5351:5362  users[addr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/bank.sol\":5351:5370  users[addr].balance */\n      add\n      sload\n        /* \"contracts/bank.sol\":5341:5370  amount <= users[addr].balance */\n      dup4\n      gt\n      iszero\n        /* \"contracts/bank.sol\":5320:5416  require(... */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5089:5091   */\n      0x20\n        /* \"contracts/bank.sol\":5320:5416  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5071:5092   */\n      mstore\n        /* \"#utility.yul\":5128:5130   */\n      0x14\n        /* \"#utility.yul\":5108:5126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5101:5131   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":5147:5165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5140:5190   */\n      mstore\n        /* \"#utility.yul\":5207:5225   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":5320:5416  require(... */\n      tag_70\n        /* \"#utility.yul\":4887:5231   */\n      jump\n        /* \"contracts/bank.sol\":5320:5416  require(... */\n    tag_73:\n        /* \"contracts/bank.sol\":5457:5468  maxWithdAmt */\n      sload(0x04)\n        /* \"contracts/bank.sol\":5447:5453  amount */\n      dup4\n        /* \"contracts/bank.sol\":5447:5468  amount <= maxWithdAmt */\n      gt\n      iszero\n        /* \"contracts/bank.sol\":5426:5525  require(... */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5438:5440   */\n      0x20\n        /* \"contracts/bank.sol\":5426:5525  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5420:5441   */\n      mstore\n        /* \"#utility.yul\":5477:5479   */\n      0x1f\n        /* \"#utility.yul\":5457:5475   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5450:5480   */\n      mstore\n        /* \"#utility.yul\":5516:5549   */\n      0x5769746864726177616c20616d6f756e742065786365656473206c696d697400\n        /* \"#utility.yul\":5496:5514   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5489:5550   */\n      mstore\n        /* \"#utility.yul\":5567:5585   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":5426:5525  require(... */\n      tag_70\n        /* \"#utility.yul\":5236:5591   */\n      jump\n        /* \"contracts/bank.sol\":5426:5525  require(... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":5536:5547  users[addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":5536:5541  users */\n      0x02\n        /* \"contracts/bank.sol\":5536:5547  users[addr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/bank.sol\":5536:5555  users[addr].balance */\n      add\n        /* \"contracts/bank.sol\":5536:5565  users[addr].balance -= amount */\n      dup1\n      sload\n        /* \"contracts/bank.sol\":5559:5565  amount */\n      dup6\n      swap3\n        /* \"contracts/bank.sol\":5536:5547  users[addr] */\n      swap1\n        /* \"contracts/bank.sol\":5536:5565  users[addr].balance -= amount */\n      tag_79\n      swap1\n        /* \"contracts/bank.sol\":5559:5565  amount */\n      dup5\n      swap1\n        /* \"contracts/bank.sol\":5536:5565  users[addr].balance -= amount */\n      tag_80\n      jump\t// in\n    tag_79:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/bank.sol\":5575:5596  addr.transfer(amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":5575:5588  addr.transfer */\n      dup4\n      and\n      swap1\n        /* \"contracts/bank.sol\":5575:5596  addr.transfer(amount) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/bank.sol\":5589:5595  amount */\n      dup6\n      swap1\n        /* \"contracts/bank.sol\":5575:5596  addr.transfer(amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/bank.sol\":5589:5595  amount */\n      dup6\n        /* \"contracts/bank.sol\":5575:5588  addr.transfer */\n      dup9\n        /* \"contracts/bank.sol\":5575:5596  addr.transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n        /* \"contracts/bank.sol\":5611:5657  WithdrawalSuccessful(addr, msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6007:6032   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":5638:5648  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":5611:5657  WithdrawalSuccessful(addr, msg.sender, amount) */\n      dup5\n      and\n      swap1\n      0x46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d\n      swap1\n        /* \"#utility.yul\":5995:5997   */\n      0x20\n        /* \"#utility.yul\":5980:5998   */\n      add\n        /* \"contracts/bank.sol\":5611:5657  WithdrawalSuccessful(addr, msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/bank.sol\":5188:5664  function withdraw(uint256 amount, address payable addr)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":3937:4199  function registerUser(... */\n    tag_22:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":4068:4079  users[addr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":4068:4073  users */\n      0x02\n        /* \"contracts/bank.sol\":4068:4079  users[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":4068:4085  users[addr].uName */\n      0x01\n      add\n        /* \"contracts/bank.sol\":4062:4093  bytes(users[addr].uName).length */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/bank.sol\":4062:4098  bytes(users[addr].uName).length == 0 */\n      iszero\n      swap1\n      pop\n        /* \"contracts/bank.sol\":4041:4148  require(... */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6630:6632   */\n      0x20\n        /* \"contracts/bank.sol\":4041:4148  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6612:6633   */\n      mstore\n        /* \"#utility.yul\":6669:6671   */\n      0x18\n        /* \"#utility.yul\":6649:6667   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6642:6672   */\n      mstore\n        /* \"#utility.yul\":6708:6734   */\n      0x5573657220616c72656164792072656769737465726564210000000000000000\n        /* \"#utility.yul\":6688:6706   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6681:6735   */\n      mstore\n        /* \"#utility.yul\":6752:6770   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":4041:4148  require(... */\n      tag_70\n        /* \"#utility.yul\":6428:6776   */\n      jump\n        /* \"contracts/bank.sol\":4041:4148  require(... */\n    tag_88:\n        /* \"contracts/bank.sol\":4172:4192  User(addr, uname, 0) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup8\n      dup2\n      mstore\n      0x00\n      dup6\n      dup8\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/bank.sol\":4158:4169  users[addr] */\n      swap3\n      dup4\n      mstore\n        /* \"contracts/bank.sol\":4158:4163  users */\n      0x02\n        /* \"contracts/bank.sol\":4158:4169  users[addr] */\n      swap1\n      swap2\n      mstore\n      swap4\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":4158:4192  users[addr] = User(addr, uname, 0) */\n      dup3\n      mload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      swap2\n      mload\n        /* \"contracts/bank.sol\":4172:4192  User(addr, uname, 0) */\n      swap1\n      swap2\n        /* \"contracts/bank.sol\":4158:4169  users[addr] */\n      swap1\n      0x01\n        /* \"contracts/bank.sol\":4158:4192  users[addr] = User(addr, uname, 0) */\n      dup3\n      add\n      swap1\n      tag_91\n      swap1\n      dup3\n      tag_92\n      jump\t// in\n    tag_91:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/bank.sol\":3937:4199  function registerUser(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":4453:4631  function getUserByName(string memory Uname)... */\n    tag_32:\n        /* \"contracts/bank.sol\":4573:4584  User memory */\n      tag_93\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_93:\n        /* \"contracts/bank.sol\":2071:2081  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":2065:2082  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":2065:2070  users */\n      0x02\n        /* \"contracts/bank.sol\":2065:2082  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":2065:2088  users[msg.sender].uName */\n      0x01\n      add\n        /* \"contracts/bank.sol\":2059:2096  bytes(users[msg.sender].uName).length */\n      dup1\n      sload\n        /* \"contracts/bank.sol\":4549:4554  Uname */\n      dup4\n      swap2\n        /* \"contracts/bank.sol\":2065:2088  users[msg.sender].uName */\n      swap1\n        /* \"contracts/bank.sol\":2059:2096  bytes(users[msg.sender].uName).length */\n      tag_96\n      swap1\n      tag_87\n      jump\t// in\n    tag_96:\n      swap1\n      pop\n        /* \"contracts/bank.sol\":2100:2101  0 */\n      0x00\n        /* \"contracts/bank.sol\":2059:2101  bytes(users[msg.sender].uName).length != 0 */\n      sub\n        /* \"contracts/bank.sol\":2038:2142  require(... */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9107:9109   */\n      0x20\n        /* \"contracts/bank.sol\":2038:2142  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9089:9110   */\n      mstore\n        /* \"#utility.yul\":9146:9148   */\n      0x0f\n        /* \"#utility.yul\":9126:9144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9119:9149   */\n      mstore\n      shl(0x88, 0x55736572206e6f7420666f756e6421)\n        /* \"#utility.yul\":9165:9183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9158:9203   */\n      mstore\n        /* \"#utility.yul\":9220:9238   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":2038:2142  require(... */\n      tag_70\n        /* \"#utility.yul\":8905:9244   */\n      jump\n        /* \"contracts/bank.sol\":2038:2142  require(... */\n    tag_97:\n        /* \"contracts/bank.sol\":4613:4623  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":4607:4624  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":4607:4612  users */\n      0x02\n        /* \"contracts/bank.sol\":4607:4624  users[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":4600:4624  return users[msg.sender] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      dup1\n      sload\n        /* \"contracts/bank.sol\":4607:4624  users[msg.sender] */\n      swap2\n      swap3\n        /* \"contracts/bank.sol\":4600:4624  return users[msg.sender] */\n      dup5\n      add\n      swap2\n      tag_101\n      swap1\n      tag_87\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_87\n      jump\t// in\n    tag_102:\n      dup1\n      iszero\n      tag_103\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_104\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_103)\n    tag_104:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_105:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_105\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap2\n      pop\n        /* \"contracts/bank.sol\":2152:2153  _ */\n    tag_100:\n        /* \"contracts/bank.sol\":4453:4631  function getUserByName(string memory Uname)... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":4234:4417  function getUserByAddress(address userAddress)... */\n    tag_39:\n        /* \"contracts/bank.sol\":4358:4369  User memory */\n      tag_106\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_106:\n        /* \"contracts/bank.sol\":4328:4339  userAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":5851:5868  addr_.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"contracts/bank.sol\":5851:5872  addr_.code.length > 0 */\n      iszero\n        /* \"contracts/bank.sol\":1831:1927  require(... */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":4392:4410  users[userAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":4392:4397  users */\n      0x02\n        /* \"contracts/bank.sol\":4392:4410  users[userAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":4385:4410  return users[userAddress] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      dup1\n      sload\n      swap3\n      swap4\n        /* \"contracts/bank.sol\":4392:4410  users[userAddress] */\n      swap3\n        /* \"contracts/bank.sol\":4385:4410  return users[userAddress] */\n      swap2\n      dup5\n      add\n      swap2\n      tag_101\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/bank.sol\":3114:3215  function renounceOwnership() public virtual onlyOwner {... */\n    tag_43:\n        /* \"contracts/bank.sol\":1650:1663  _checkOwner() */\n      tag_118\n        /* \"contracts/bank.sol\":1650:1661  _checkOwner */\n      tag_119\n        /* \"contracts/bank.sol\":1650:1663  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/bank.sol\":3178:3208  _transferOwnership(address(0)) */\n      tag_121\n        /* \"contracts/bank.sol\":3205:3206  0 */\n      0x00\n        /* \"contracts/bank.sol\":3178:3196  _transferOwnership */\n      tag_122\n        /* \"contracts/bank.sol\":3178:3208  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/bank.sol\":3114:3215  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bank.sol\":345:382  mapping(address => User) public users */\n    tag_52:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_124\n      swap1\n      tag_87\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_87\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/bank.sol\":4673:5143  function deposit()... */\n    tag_56:\n        /* \"contracts/bank.sol\":4742:4752  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":5851:5868  addr_.code.length */\n      dup1\n      extcodesize\n        /* \"contracts/bank.sol\":5851:5872  addr_.code.length > 0 */\n      iszero\n        /* \"contracts/bank.sol\":1831:1927  require(... */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_131:\n        /* \"contracts/bank.sol\":4784:4793  minDepAmt */\n      sload(0x03)\n        /* \"contracts/bank.sol\":4772:4781  msg.value */\n      callvalue\n        /* \"contracts/bank.sol\":4772:4793  msg.value < minDepAmt */\n      lt\n        /* \"contracts/bank.sol\":4768:5137  if (msg.value < minDepAmt) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/bank.sol\":4809:4815  status */\n      0x05\n        /* \"contracts/bank.sol\":4809:4831  status = Status.Failed */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/bank.sol\":4818:4831  Status.Failed */\n      0x01\n        /* \"contracts/bank.sol\":4809:4831  status = Status.Failed */\n      or\n      swap1\n      sstore\n        /* \"contracts/bank.sol\":4850:4958  DepositFailed(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9451:9453   */\n      0x20\n        /* \"#utility.yul\":9433:9454   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9490:9492   */\n      0x21\n        /* \"#utility.yul\":9470:9488   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9463:9493   */\n      mstore\n        /* \"#utility.yul\":9529:9563   */\n      0x4d696e696d756d206465706f73697420616d6f756e7420697320302e30303033\n        /* \"#utility.yul\":9509:9527   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":9502:9564   */\n      swap2\n      swap1\n      swap2\n      mstore\n      shl(0xfb, 0x07)\n        /* \"#utility.yul\":9595:9597   */\n      0x60\n        /* \"#utility.yul\":9580:9598   */\n      dup3\n      add\n        /* \"#utility.yul\":9573:9604   */\n      mstore\n        /* \"contracts/bank.sol\":4881:4891  msg.sender */\n      caller\n      swap1\n        /* \"contracts/bank.sol\":4850:4958  DepositFailed(... */\n      0xa8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5\n      swap1\n        /* \"#utility.yul\":9636:9639   */\n      0x80\n        /* \"#utility.yul\":9621:9640   */\n      add\n        /* \"contracts/bank.sol\":4850:4958  DepositFailed(... */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bank.sol\":4673:5143  function deposit()... */\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":4768:5137  if (msg.value < minDepAmt) {... */\n    tag_134:\n        /* \"contracts/bank.sol\":4995:5005  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":4989:5006  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":4989:4994  users */\n      0x02\n        /* \"contracts/bank.sol\":4989:5006  users[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/bank.sol\":4989:5014  users[msg.sender].balance */\n      add\n        /* \"contracts/bank.sol\":4989:5027  users[msg.sender].balance += msg.value */\n      dup1\n      sload\n        /* \"contracts/bank.sol\":5018:5027  msg.value */\n      callvalue\n      swap3\n        /* \"contracts/bank.sol\":4989:5006  users[msg.sender] */\n      swap1\n        /* \"contracts/bank.sol\":4989:5027  users[msg.sender].balance += msg.value */\n      tag_141\n      swap1\n        /* \"contracts/bank.sol\":5018:5027  msg.value */\n      dup5\n      swap1\n        /* \"contracts/bank.sol\":4989:5027  users[msg.sender].balance += msg.value */\n      tag_142\n      jump\t// in\n    tag_141:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/bank.sol\":5041:5047  status */\n      0x05\n        /* \"contracts/bank.sol\":5041:5067  status = Status.Successful */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/bank.sol\":5050:5067  Status.Successful */\n      0x02\n        /* \"contracts/bank.sol\":5041:5067  status = Status.Successful */\n      or\n      swap1\n      sstore\n        /* \"contracts/bank.sol\":5086:5126  DepositSuccessful(msg.sender, msg.value) */\n      mload(0x40)\n        /* \"contracts/bank.sol\":5116:5125  msg.value */\n      callvalue\n        /* \"#utility.yul\":6007:6032   */\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":5104:5114  msg.sender */\n      caller\n      swap1\n        /* \"contracts/bank.sol\":5086:5126  DepositSuccessful(msg.sender, msg.value) */\n      0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5\n      swap1\n        /* \"#utility.yul\":5995:5997   */\n      0x20\n        /* \"#utility.yul\":5980:5998   */\n      add\n        /* \"contracts/bank.sol\":5086:5126  DepositSuccessful(msg.sender, msg.value) */\n      tag_138\n        /* \"#utility.yul\":5861:6038   */\n      jump\n        /* \"contracts/bank.sol\":4768:5137  if (msg.value < minDepAmt) {... */\n    tag_140:\n        /* \"contracts/bank.sol\":4673:5143  function deposit()... */\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":3359:3574  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_60:\n        /* \"contracts/bank.sol\":1650:1663  _checkOwner() */\n      tag_147\n        /* \"contracts/bank.sol\":1650:1661  _checkOwner */\n      tag_119\n        /* \"contracts/bank.sol\":1650:1663  _checkOwner() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":3443:3465  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/bank.sol\":3439:3530  if (newOwner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"contracts/bank.sol\":3488:3519  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":3516:3517  0 */\n      0x00\n        /* \"contracts/bank.sol\":3488:3519  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3852:3903   */\n      mstore\n        /* \"#utility.yul\":3825:3843   */\n      0x24\n      add\n        /* \"contracts/bank.sol\":3488:3519  OwnableInvalidOwner(address(0)) */\n      tag_70\n        /* \"#utility.yul\":3706:3909   */\n      jump\n        /* \"contracts/bank.sol\":3439:3530  if (newOwner == address(0)) {... */\n    tag_149:\n        /* \"contracts/bank.sol\":3539:3567  _transferOwnership(newOwner) */\n      tag_140\n        /* \"contracts/bank.sol\":3558:3566  newOwner */\n      dup2\n        /* \"contracts/bank.sol\":3539:3557  _transferOwnership */\n      tag_122\n        /* \"contracts/bank.sol\":3539:3567  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/bank.sol\":2622:2784  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"contracts/bank.sol\":2553:2559  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":2681:2704  owner() != _msgSender() */\n      eq\n        /* \"contracts/bank.sol\":2677:2778  if (owner() != _msgSender()) {... */\n      tag_121\n      jumpi\n        /* \"contracts/bank.sol\":2727:2767  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":2727:2767  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3852:3903   */\n      mstore\n        /* \"#utility.yul\":3825:3843   */\n      0x24\n      add\n        /* \"contracts/bank.sol\":2727:2767  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_70\n        /* \"#utility.yul\":3706:3909   */\n      jump\n        /* \"contracts/bank.sol\":3722:3909  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_122:\n        /* \"contracts/bank.sol\":3814:3820  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":3830:3847  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/bank.sol\":3862:3902  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/bank.sol\":3814:3820  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/bank.sol\":3830:3847  _owner = newOwner */\n      swap1\n        /* \"contracts/bank.sol\":3814:3820  _owner */\n      dup3\n      swap1\n        /* \"contracts/bank.sol\":3862:3902  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/bank.sol\":3795:3811  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/bank.sol\":3862:3902  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/bank.sol\":3785:3909  {... */\n      pop\n        /* \"contracts/bank.sol\":3722:3909  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:153   */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":97:128   */\n      dup2\n      and\n        /* \"#utility.yul\":87:129   */\n      dup2\n      eq\n        /* \"#utility.yul\":77:147   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":143:144   */\n      0x00\n        /* \"#utility.yul\":140:141   */\n      dup1\n        /* \"#utility.yul\":133:145   */\n      revert\n        /* \"#utility.yul\":158:489   */\n    tag_16:\n        /* \"#utility.yul\":234:240   */\n      0x00\n        /* \"#utility.yul\":242:248   */\n      dup1\n        /* \"#utility.yul\":295:297   */\n      0x40\n        /* \"#utility.yul\":283:292   */\n      dup4\n        /* \"#utility.yul\":274:281   */\n      dup6\n        /* \"#utility.yul\":270:293   */\n      sub\n        /* \"#utility.yul\":266:298   */\n      slt\n        /* \"#utility.yul\":263:315   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":311:312   */\n      0x00\n        /* \"#utility.yul\":308:309   */\n      dup1\n        /* \"#utility.yul\":301:313   */\n      revert\n        /* \"#utility.yul\":263:315   */\n    tag_174:\n        /* \"#utility.yul\":347:356   */\n      dup3\n        /* \"#utility.yul\":334:357   */\n      calldataload\n        /* \"#utility.yul\":324:357   */\n      swap2\n      pop\n        /* \"#utility.yul\":407:409   */\n      0x20\n        /* \"#utility.yul\":396:405   */\n      dup4\n        /* \"#utility.yul\":392:410   */\n      add\n        /* \"#utility.yul\":379:411   */\n      calldataload\n        /* \"#utility.yul\":420:459   */\n      tag_175\n        /* \"#utility.yul\":453:458   */\n      dup2\n        /* \"#utility.yul\":420:459   */\n      tag_162\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":478:483   */\n      dup1\n        /* \"#utility.yul\":468:483   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":158:489   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":494:621   */\n    tag_163:\n        /* \"#utility.yul\":555:565   */\n      0x4e487b71\n        /* \"#utility.yul\":550:553   */\n      0xe0\n        /* \"#utility.yul\":546:566   */\n      shl\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":536:567   */\n      mstore\n        /* \"#utility.yul\":586:590   */\n      0x41\n        /* \"#utility.yul\":583:584   */\n      0x04\n        /* \"#utility.yul\":576:591   */\n      mstore\n        /* \"#utility.yul\":610:614   */\n      0x24\n        /* \"#utility.yul\":607:608   */\n      0x00\n        /* \"#utility.yul\":600:615   */\n      revert\n        /* \"#utility.yul\":626:1352   */\n    tag_164:\n        /* \"#utility.yul\":669:674   */\n      0x00\n        /* \"#utility.yul\":722:725   */\n      dup3\n        /* \"#utility.yul\":715:719   */\n      0x1f\n        /* \"#utility.yul\":707:713   */\n      dup4\n        /* \"#utility.yul\":703:720   */\n      add\n        /* \"#utility.yul\":699:726   */\n      slt\n        /* \"#utility.yul\":689:744   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":740:741   */\n      0x00\n        /* \"#utility.yul\":737:738   */\n      dup1\n        /* \"#utility.yul\":730:742   */\n      revert\n        /* \"#utility.yul\":689:744   */\n    tag_178:\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":810:828   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":802:808   */\n      dup2\n        /* \"#utility.yul\":799:829   */\n      gt\n        /* \"#utility.yul\":796:852   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":832:850   */\n      tag_180\n      tag_163\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":881:883   */\n      0x40\n        /* \"#utility.yul\":875:884   */\n      mload\n        /* \"#utility.yul\":973:975   */\n      0x1f\n        /* \"#utility.yul\":935:952   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":931:962   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":964:966   */\n      0x3f\n        /* \"#utility.yul\":927:967   */\n      add\n        /* \"#utility.yul\":923:977   */\n      and\n        /* \"#utility.yul\":911:978   */\n      dup2\n      add\n        /* \"#utility.yul\":1008:1026   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":993:1027   */\n      dup2\n      gt\n        /* \"#utility.yul\":1029:1051   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":990:1052   */\n      or\n        /* \"#utility.yul\":987:1075   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1055:1073   */\n      tag_182\n      tag_163\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1091:1093   */\n      0x40\n        /* \"#utility.yul\":1084:1106   */\n      mstore\n        /* \"#utility.yul\":1115:1137   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":1156:1175   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1177:1181   */\n      0x20\n        /* \"#utility.yul\":1152:1182   */\n      add\n        /* \"#utility.yul\":1149:1188   */\n      dup6\n      lt\n        /* \"#utility.yul\":1146:1205   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":1201:1202   */\n      0x00\n        /* \"#utility.yul\":1198:1199   */\n      dup1\n        /* \"#utility.yul\":1191:1203   */\n      revert\n        /* \"#utility.yul\":1146:1205   */\n    tag_183:\n        /* \"#utility.yul\":1265:1271   */\n      dup2\n        /* \"#utility.yul\":1258:1262   */\n      0x20\n        /* \"#utility.yul\":1250:1256   */\n      dup6\n        /* \"#utility.yul\":1246:1263   */\n      add\n        /* \"#utility.yul\":1239:1243   */\n      0x20\n        /* \"#utility.yul\":1231:1237   */\n      dup4\n        /* \"#utility.yul\":1227:1244   */\n      add\n        /* \"#utility.yul\":1214:1272   */\n      calldatacopy\n        /* \"#utility.yul\":1320:1321   */\n      0x00\n        /* \"#utility.yul\":1292:1311   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1313:1317   */\n      0x20\n        /* \"#utility.yul\":1288:1318   */\n      add\n        /* \"#utility.yul\":1281:1322   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1296:1302   */\n      swap4\n        /* \"#utility.yul\":626:1352   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1357:1830   */\n    tag_21:\n        /* \"#utility.yul\":1443:1449   */\n      0x00\n        /* \"#utility.yul\":1451:1457   */\n      dup1\n        /* \"#utility.yul\":1504:1506   */\n      0x40\n        /* \"#utility.yul\":1492:1501   */\n      dup4\n        /* \"#utility.yul\":1483:1490   */\n      dup6\n        /* \"#utility.yul\":1479:1502   */\n      sub\n        /* \"#utility.yul\":1475:1507   */\n      slt\n        /* \"#utility.yul\":1472:1524   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":1520:1521   */\n      0x00\n        /* \"#utility.yul\":1517:1518   */\n      dup1\n        /* \"#utility.yul\":1510:1522   */\n      revert\n        /* \"#utility.yul\":1472:1524   */\n    tag_185:\n        /* \"#utility.yul\":1560:1569   */\n      dup3\n        /* \"#utility.yul\":1547:1570   */\n      calldataload\n        /* \"#utility.yul\":1593:1611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1585:1591   */\n      dup2\n        /* \"#utility.yul\":1582:1612   */\n      gt\n        /* \"#utility.yul\":1579:1629   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1625:1626   */\n      0x00\n        /* \"#utility.yul\":1622:1623   */\n      dup1\n        /* \"#utility.yul\":1615:1627   */\n      revert\n        /* \"#utility.yul\":1579:1629   */\n    tag_186:\n        /* \"#utility.yul\":1648:1698   */\n      tag_187\n        /* \"#utility.yul\":1690:1697   */\n      dup6\n        /* \"#utility.yul\":1681:1687   */\n      dup3\n        /* \"#utility.yul\":1670:1679   */\n      dup7\n        /* \"#utility.yul\":1666:1688   */\n      add\n        /* \"#utility.yul\":1648:1698   */\n      tag_164\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1638:1698   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":1748:1750   */\n      0x20\n        /* \"#utility.yul\":1737:1746   */\n      dup4\n        /* \"#utility.yul\":1733:1751   */\n      add\n        /* \"#utility.yul\":1720:1752   */\n      calldataload\n        /* \"#utility.yul\":1761:1800   */\n      tag_175\n        /* \"#utility.yul\":1794:1799   */\n      dup2\n        /* \"#utility.yul\":1761:1800   */\n      tag_162\n      jump\t// in\n        /* \"#utility.yul\":1967:2306   */\n    tag_27:\n        /* \"#utility.yul\":2110:2112   */\n      0x20\n        /* \"#utility.yul\":2095:2113   */\n      dup2\n      add\n        /* \"#utility.yul\":2143:2144   */\n      0x03\n        /* \"#utility.yul\":2132:2145   */\n      dup4\n      lt\n        /* \"#utility.yul\":2122:2266   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2188:2198   */\n      0x4e487b71\n        /* \"#utility.yul\":2183:2186   */\n      0xe0\n        /* \"#utility.yul\":2179:2199   */\n      shl\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2169:2200   */\n      mstore\n        /* \"#utility.yul\":2223:2227   */\n      0x21\n        /* \"#utility.yul\":2220:2221   */\n      0x04\n        /* \"#utility.yul\":2213:2228   */\n      mstore\n        /* \"#utility.yul\":2251:2255   */\n      0x24\n        /* \"#utility.yul\":2248:2249   */\n      0x00\n        /* \"#utility.yul\":2241:2256   */\n      revert\n        /* \"#utility.yul\":2122:2266   */\n    tag_191:\n        /* \"#utility.yul\":2275:2300   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":1967:2306   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2311:2633   */\n    tag_31:\n        /* \"#utility.yul\":2380:2386   */\n      0x00\n        /* \"#utility.yul\":2433:2435   */\n      0x20\n        /* \"#utility.yul\":2421:2430   */\n      dup3\n        /* \"#utility.yul\":2412:2419   */\n      dup5\n        /* \"#utility.yul\":2408:2431   */\n      sub\n        /* \"#utility.yul\":2404:2436   */\n      slt\n        /* \"#utility.yul\":2401:2453   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2449:2450   */\n      0x00\n        /* \"#utility.yul\":2446:2447   */\n      dup1\n        /* \"#utility.yul\":2439:2451   */\n      revert\n        /* \"#utility.yul\":2401:2453   */\n    tag_193:\n        /* \"#utility.yul\":2489:2498   */\n      dup2\n        /* \"#utility.yul\":2476:2499   */\n      calldataload\n        /* \"#utility.yul\":2522:2540   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2514:2520   */\n      dup2\n        /* \"#utility.yul\":2511:2541   */\n      gt\n        /* \"#utility.yul\":2508:2558   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2554:2555   */\n      0x00\n        /* \"#utility.yul\":2551:2552   */\n      dup1\n        /* \"#utility.yul\":2544:2556   */\n      revert\n        /* \"#utility.yul\":2508:2558   */\n    tag_194:\n        /* \"#utility.yul\":2577:2627   */\n      tag_195\n        /* \"#utility.yul\":2619:2626   */\n      dup5\n        /* \"#utility.yul\":2610:2616   */\n      dup3\n        /* \"#utility.yul\":2599:2608   */\n      dup6\n        /* \"#utility.yul\":2595:2617   */\n      add\n        /* \"#utility.yul\":2577:2627   */\n      tag_164\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2567:2627   */\n      swap5\n        /* \"#utility.yul\":2311:2633   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2638:2927   */\n    tag_165:\n        /* \"#utility.yul\":2680:2683   */\n      0x00\n        /* \"#utility.yul\":2718:2723   */\n      dup2\n        /* \"#utility.yul\":2712:2724   */\n      mload\n        /* \"#utility.yul\":2745:2751   */\n      dup1\n        /* \"#utility.yul\":2740:2743   */\n      dup5\n        /* \"#utility.yul\":2733:2752   */\n      mstore\n        /* \"#utility.yul\":2801:2807   */\n      dup1\n        /* \"#utility.yul\":2794:2798   */\n      0x20\n        /* \"#utility.yul\":2787:2792   */\n      dup5\n        /* \"#utility.yul\":2783:2799   */\n      add\n        /* \"#utility.yul\":2776:2780   */\n      0x20\n        /* \"#utility.yul\":2771:2774   */\n      dup7\n        /* \"#utility.yul\":2767:2781   */\n      add\n        /* \"#utility.yul\":2761:2808   */\n      mcopy\n        /* \"#utility.yul\":2853:2854   */\n      0x00\n        /* \"#utility.yul\":2846:2850   */\n      0x20\n        /* \"#utility.yul\":2837:2843   */\n      dup3\n        /* \"#utility.yul\":2832:2835   */\n      dup7\n        /* \"#utility.yul\":2828:2844   */\n      add\n        /* \"#utility.yul\":2824:2851   */\n      add\n        /* \"#utility.yul\":2817:2855   */\n      mstore\n        /* \"#utility.yul\":2916:2920   */\n      0x20\n        /* \"#utility.yul\":2909:2911   */\n      0x1f\n        /* \"#utility.yul\":2905:2912   */\n      not\n        /* \"#utility.yul\":2900:2902   */\n      0x1f\n        /* \"#utility.yul\":2892:2898   */\n      dup4\n        /* \"#utility.yul\":2888:2903   */\n      add\n        /* \"#utility.yul\":2884:2913   */\n      and\n        /* \"#utility.yul\":2879:2882   */\n      dup6\n        /* \"#utility.yul\":2875:2914   */\n      add\n        /* \"#utility.yul\":2871:2921   */\n      add\n        /* \"#utility.yul\":2864:2921   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2638:2927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2932:3441   */\n    tag_34:\n        /* \"#utility.yul\":3105:3107   */\n      0x20\n        /* \"#utility.yul\":3087:3108   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3148:3161   */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3144:3183   */\n      and\n        /* \"#utility.yul\":3124:3142   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3117:3184   */\n      mstore\n        /* \"#utility.yul\":3219:3234   */\n      dup3\n      add\n        /* \"#utility.yul\":3213:3235   */\n      mload\n        /* \"#utility.yul\":3271:3275   */\n      0x60\n        /* \"#utility.yul\":3266:3268   */\n      0x40\n        /* \"#utility.yul\":3251:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3244:3276   */\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":3299:3351   */\n      tag_198\n        /* \"#utility.yul\":3346:3349   */\n      0x80\n        /* \"#utility.yul\":3331:3350   */\n      dup5\n      add\n        /* \"#utility.yul\":3213:3235   */\n      dup3\n        /* \"#utility.yul\":3299:3351   */\n      tag_165\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3285:3351   */\n      swap1\n      pop\n        /* \"#utility.yul\":3407:3409   */\n      0x40\n        /* \"#utility.yul\":3399:3405   */\n      dup5\n        /* \"#utility.yul\":3395:3410   */\n      add\n        /* \"#utility.yul\":3389:3411   */\n      mload\n        /* \"#utility.yul\":3382:3386   */\n      0x60\n        /* \"#utility.yul\":3371:3380   */\n      dup5\n        /* \"#utility.yul\":3367:3387   */\n      add\n        /* \"#utility.yul\":3360:3412   */\n      mstore\n        /* \"#utility.yul\":3429:3435   */\n      dup1\n        /* \"#utility.yul\":3421:3435   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2932:3441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3701   */\n    tag_38:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3558:3560   */\n      0x20\n        /* \"#utility.yul\":3546:3555   */\n      dup3\n        /* \"#utility.yul\":3537:3544   */\n      dup5\n        /* \"#utility.yul\":3533:3556   */\n      sub\n        /* \"#utility.yul\":3529:3561   */\n      slt\n        /* \"#utility.yul\":3526:3578   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":3574:3575   */\n      0x00\n        /* \"#utility.yul\":3571:3572   */\n      dup1\n        /* \"#utility.yul\":3564:3576   */\n      revert\n        /* \"#utility.yul\":3526:3578   */\n    tag_200:\n        /* \"#utility.yul\":3613:3622   */\n      dup2\n        /* \"#utility.yul\":3600:3623   */\n      calldataload\n        /* \"#utility.yul\":3632:3671   */\n      tag_201\n        /* \"#utility.yul\":3665:3670   */\n      dup2\n        /* \"#utility.yul\":3632:3671   */\n      tag_162\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3690:3695   */\n      swap4\n        /* \"#utility.yul\":3446:3701   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3914:4302   */\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4119:4151   */\n      dup5\n      and\n        /* \"#utility.yul\":4101:4152   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4188:4190   */\n      0x60\n        /* \"#utility.yul\":4183:4185   */\n      0x20\n        /* \"#utility.yul\":4168:4186   */\n      dup3\n      add\n        /* \"#utility.yul\":4161:4191   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":4208:4253   */\n      tag_204\n      swap1\n        /* \"#utility.yul\":4234:4252   */\n      dup4\n      add\n        /* \"#utility.yul\":4226:4232   */\n      dup6\n        /* \"#utility.yul\":4208:4253   */\n      tag_165\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4200:4253   */\n      swap1\n      pop\n        /* \"#utility.yul\":4289:4295   */\n      dup3\n        /* \"#utility.yul\":4284:4286   */\n      0x40\n        /* \"#utility.yul\":4273:4282   */\n      dup4\n        /* \"#utility.yul\":4269:4287   */\n      add\n        /* \"#utility.yul\":4262:4296   */\n      mstore\n        /* \"#utility.yul\":3914:4302   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4531:4882   */\n    tag_71:\n        /* \"#utility.yul\":4733:4735   */\n      0x20\n        /* \"#utility.yul\":4715:4736   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4772:4774   */\n      0x1b\n        /* \"#utility.yul\":4752:4770   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4745:4775   */\n      mstore\n        /* \"#utility.yul\":4811:4840   */\n      0x54686973206973206120636f6e74726163742061646472657373210000000000\n        /* \"#utility.yul\":4806:4808   */\n      0x40\n        /* \"#utility.yul\":4791:4809   */\n      dup3\n      add\n        /* \"#utility.yul\":4784:4841   */\n      mstore\n        /* \"#utility.yul\":4873:4875   */\n      0x60\n        /* \"#utility.yul\":4858:4876   */\n      add\n      swap1\n        /* \"#utility.yul\":4531:4882   */\n      jump\t// out\n        /* \"#utility.yul\":5596:5723   */\n    tag_166:\n        /* \"#utility.yul\":5657:5667   */\n      0x4e487b71\n        /* \"#utility.yul\":5652:5655   */\n      0xe0\n        /* \"#utility.yul\":5648:5668   */\n      shl\n        /* \"#utility.yul\":5645:5646   */\n      0x00\n        /* \"#utility.yul\":5638:5669   */\n      mstore\n        /* \"#utility.yul\":5688:5692   */\n      0x11\n        /* \"#utility.yul\":5685:5686   */\n      0x04\n        /* \"#utility.yul\":5678:5693   */\n      mstore\n        /* \"#utility.yul\":5712:5716   */\n      0x24\n        /* \"#utility.yul\":5709:5710   */\n      0x00\n        /* \"#utility.yul\":5702:5717   */\n      revert\n        /* \"#utility.yul\":5728:5856   */\n    tag_80:\n        /* \"#utility.yul\":5795:5804   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5816:5827   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5813:5850   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":5830:5848   */\n      tag_212\n      tag_166\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5728:5856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6043:6423   */\n    tag_87:\n        /* \"#utility.yul\":6122:6123   */\n      0x01\n        /* \"#utility.yul\":6118:6130   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6165:6177   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6186:6247   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":6240:6244   */\n      0x7f\n        /* \"#utility.yul\":6232:6238   */\n      dup3\n        /* \"#utility.yul\":6228:6245   */\n      and\n        /* \"#utility.yul\":6218:6245   */\n      swap2\n      pop\n        /* \"#utility.yul\":6186:6247   */\n    tag_215:\n        /* \"#utility.yul\":6293:6295   */\n      0x20\n        /* \"#utility.yul\":6285:6291   */\n      dup3\n        /* \"#utility.yul\":6282:6296   */\n      lt\n        /* \"#utility.yul\":6262:6280   */\n      dup2\n        /* \"#utility.yul\":6259:6297   */\n      sub\n        /* \"#utility.yul\":6256:6417   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":6339:6349   */\n      0x4e487b71\n        /* \"#utility.yul\":6334:6337   */\n      0xe0\n        /* \"#utility.yul\":6330:6350   */\n      shl\n        /* \"#utility.yul\":6327:6328   */\n      0x00\n        /* \"#utility.yul\":6320:6351   */\n      mstore\n        /* \"#utility.yul\":6374:6378   */\n      0x22\n        /* \"#utility.yul\":6371:6372   */\n      0x04\n        /* \"#utility.yul\":6364:6379   */\n      mstore\n        /* \"#utility.yul\":6402:6406   */\n      0x24\n        /* \"#utility.yul\":6399:6400   */\n      0x00\n        /* \"#utility.yul\":6392:6407   */\n      revert\n        /* \"#utility.yul\":6907:7425   */\n    tag_168:\n        /* \"#utility.yul\":7009:7011   */\n      0x1f\n        /* \"#utility.yul\":7004:7007   */\n      dup3\n        /* \"#utility.yul\":7001:7012   */\n      gt\n        /* \"#utility.yul\":6998:7419   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":7045:7050   */\n      dup1\n        /* \"#utility.yul\":7042:7043   */\n      0x00\n        /* \"#utility.yul\":7035:7051   */\n      mstore\n        /* \"#utility.yul\":7089:7093   */\n      0x20\n        /* \"#utility.yul\":7086:7087   */\n      0x00\n        /* \"#utility.yul\":7076:7094   */\n      keccak256\n        /* \"#utility.yul\":7159:7161   */\n      0x1f\n        /* \"#utility.yul\":7147:7157   */\n      dup5\n        /* \"#utility.yul\":7143:7162   */\n      add\n        /* \"#utility.yul\":7140:7141   */\n      0x05\n        /* \"#utility.yul\":7136:7163   */\n      shr\n        /* \"#utility.yul\":7130:7134   */\n      dup2\n        /* \"#utility.yul\":7126:7164   */\n      add\n        /* \"#utility.yul\":7195:7199   */\n      0x20\n        /* \"#utility.yul\":7183:7193   */\n      dup6\n        /* \"#utility.yul\":7180:7200   */\n      lt\n        /* \"#utility.yul\":7177:7224   */\n      iszero\n      tag_221\n      jumpi\n      pop\n        /* \"#utility.yul\":7218:7222   */\n      dup1\n        /* \"#utility.yul\":7177:7224   */\n    tag_221:\n        /* \"#utility.yul\":7273:7275   */\n      0x1f\n        /* \"#utility.yul\":7268:7271   */\n      dup5\n        /* \"#utility.yul\":7264:7276   */\n      add\n        /* \"#utility.yul\":7261:7262   */\n      0x05\n        /* \"#utility.yul\":7257:7277   */\n      shr\n        /* \"#utility.yul\":7251:7255   */\n      dup3\n        /* \"#utility.yul\":7247:7278   */\n      add\n        /* \"#utility.yul\":7237:7278   */\n      swap2\n      pop\n        /* \"#utility.yul\":7328:7409   */\n    tag_222:\n        /* \"#utility.yul\":7346:7348   */\n      dup2\n        /* \"#utility.yul\":7339:7344   */\n      dup2\n        /* \"#utility.yul\":7336:7349   */\n      lt\n        /* \"#utility.yul\":7328:7409   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":7405:7406   */\n      0x00\n        /* \"#utility.yul\":7391:7407   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7372:7373   */\n      0x01\n        /* \"#utility.yul\":7361:7374   */\n      add\n        /* \"#utility.yul\":7328:7409   */\n      jump(tag_222)\n    tag_224:\n        /* \"#utility.yul\":7332:7335   */\n      pop\n      pop\n        /* \"#utility.yul\":6998:7419   */\n    tag_220:\n        /* \"#utility.yul\":6907:7425   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7601:8900   */\n    tag_92:\n        /* \"#utility.yul\":7727:7730   */\n      dup2\n        /* \"#utility.yul\":7721:7731   */\n      mload\n        /* \"#utility.yul\":7754:7772   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7746:7752   */\n      dup2\n        /* \"#utility.yul\":7743:7773   */\n      gt\n        /* \"#utility.yul\":7740:7796   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":7776:7794   */\n      tag_228\n      tag_163\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7805:7902   */\n      tag_229\n        /* \"#utility.yul\":7895:7901   */\n      dup2\n        /* \"#utility.yul\":7855:7893   */\n      tag_230\n        /* \"#utility.yul\":7887:7891   */\n      dup5\n        /* \"#utility.yul\":7881:7892   */\n      sload\n        /* \"#utility.yul\":7855:7893   */\n      tag_87\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7849:7853   */\n      dup5\n        /* \"#utility.yul\":7805:7902   */\n      tag_168\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7951:7955   */\n      0x20\n        /* \"#utility.yul\":7982:7984   */\n      0x1f\n        /* \"#utility.yul\":7971:7985   */\n      dup3\n      gt\n        /* \"#utility.yul\":7999:8000   */\n      0x01\n        /* \"#utility.yul\":7994:8643   */\n      dup2\n      eq\n      tag_232\n      jumpi\n        /* \"#utility.yul\":8687:8688   */\n      0x00\n        /* \"#utility.yul\":8704:8710   */\n      dup4\n        /* \"#utility.yul\":8701:8790   */\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"#utility.yul\":8756:8775   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":8750:8776   */\n      mload\n        /* \"#utility.yul\":8701:8790   */\n    tag_233:\n      not(0x00)\n        /* \"#utility.yul\":7558:7559   */\n      0x03\n        /* \"#utility.yul\":7554:7565   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":7550:7574   */\n      shr\n        /* \"#utility.yul\":7546:7575   */\n      not\n        /* \"#utility.yul\":7536:7576   */\n      and\n        /* \"#utility.yul\":7582:7583   */\n      0x01\n        /* \"#utility.yul\":7578:7589   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":7533:7590   */\n      or\n        /* \"#utility.yul\":8803:8884   */\n      dup5\n      sstore\n        /* \"#utility.yul\":7964:8894   */\n      jump(tag_224)\n        /* \"#utility.yul\":7994:8643   */\n    tag_232:\n        /* \"#utility.yul\":6854:6855   */\n      0x00\n        /* \"#utility.yul\":6847:6861   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":6891:6895   */\n      0x20\n        /* \"#utility.yul\":6878:6896   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":8030:8050   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":8148:8370   */\n    tag_236:\n        /* \"#utility.yul\":8162:8169   */\n      dup3\n        /* \"#utility.yul\":8159:8160   */\n      dup2\n        /* \"#utility.yul\":8156:8170   */\n      lt\n        /* \"#utility.yul\":8148:8370   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":8244:8263   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":8238:8264   */\n      mload\n        /* \"#utility.yul\":8223:8265   */\n      dup3\n      sstore\n        /* \"#utility.yul\":8351:8355   */\n      0x20\n        /* \"#utility.yul\":8336:8356   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":8304:8305   */\n      0x01\n        /* \"#utility.yul\":8292:8306   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":8178:8190   */\n      add\n        /* \"#utility.yul\":8148:8370   */\n      jump(tag_236)\n    tag_238:\n        /* \"#utility.yul\":8152:8155   */\n      pop\n        /* \"#utility.yul\":8398:8404   */\n      dup5\n        /* \"#utility.yul\":8389:8396   */\n      dup3\n        /* \"#utility.yul\":8386:8405   */\n      lt\n        /* \"#utility.yul\":8383:8584   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":8459:8478   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":8453:8479   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":8542:8543   */\n      0x03\n        /* \"#utility.yul\":8538:8552   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":8554:8557   */\n      0xf8\n        /* \"#utility.yul\":8534:8558   */\n      and\n        /* \"#utility.yul\":8530:8567   */\n      shr\n        /* \"#utility.yul\":8526:8568   */\n      not\n        /* \"#utility.yul\":8511:8569   */\n      and\n        /* \"#utility.yul\":8496:8570   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8383:8584   */\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8630:8631   */\n      0x01\n        /* \"#utility.yul\":8614:8628   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":8610:8632   */\n      add\n        /* \"#utility.yul\":8597:8633   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":7601:8900   */\n      jump\t// out\n        /* \"#utility.yul\":9651:9776   */\n    tag_142:\n        /* \"#utility.yul\":9716:9725   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9737:9747   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9734:9770   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":9750:9768   */\n      tag_212\n      tag_166\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220ecc1ccb657a7f62546a9d1e88013d12ac1cd9285f3b1a14d6def4b262b09430d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1128": {
									"entryPoint": null,
									"id": 1128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_1216": {
									"entryPoint": 153,
									"id": 1216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:699:8",
										"nodeType": "YulBlock",
										"src": "0:699:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:8",
													"nodeType": "YulBlock",
													"src": "74:117:8",
													"statements": [
														{
															"nativeSrc": "84:22:8",
															"nodeType": "YulAssignment",
															"src": "84:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:8"
																},
																"nativeSrc": "93:13:8",
																"nodeType": "YulFunctionCall",
																"src": "93:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:8",
																"nodeType": "YulBlock",
																"src": "169:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:8",
																					"nodeType": "YulLiteral",
																					"src": "178:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:8",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:8"
																			},
																			"nativeSrc": "171:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:8"
																		},
																		"nativeSrc": "171:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:8",
																										"nodeType": "YulLiteral",
																										"src": "154:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:8",
																										"nodeType": "YulLiteral",
																										"src": "159:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:8"
																								},
																								"nativeSrc": "150:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:8",
																								"nodeType": "YulLiteral",
																								"src": "163:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:8"
																						},
																						"nativeSrc": "146:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:8"
																				},
																				"nativeSrc": "135:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:8"
																		},
																		"nativeSrc": "125:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:8"
																},
																"nativeSrc": "118:50:8",
																"nodeType": "YulFunctionCall",
																"src": "118:50:8"
															},
															"nativeSrc": "115:70:8",
															"nodeType": "YulIf",
															"src": "115:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:8",
														"nodeType": "YulTypedName",
														"src": "53:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:8",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nativeSrc": "294:195:8",
													"nodeType": "YulBlock",
													"src": "294:195:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:8",
																"nodeType": "YulBlock",
																"src": "340:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:8",
																					"nodeType": "YulLiteral",
																					"src": "349:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:8",
																					"nodeType": "YulLiteral",
																					"src": "352:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:8"
																			},
																			"nativeSrc": "342:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:8"
																		},
																		"nativeSrc": "342:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:8"
																		},
																		"nativeSrc": "311:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "336:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:8"
																},
																"nativeSrc": "307:32:8",
																"nodeType": "YulFunctionCall",
																"src": "307:32:8"
															},
															"nativeSrc": "304:52:8",
															"nodeType": "YulIf",
															"src": "304:52:8"
														},
														{
															"nativeSrc": "365:50:8",
															"nodeType": "YulAssignment",
															"src": "365:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:8"
																},
																"nativeSrc": "375:40:8",
																"nodeType": "YulFunctionCall",
																"src": "375:40:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:8"
																}
															]
														},
														{
															"nativeSrc": "424:59:8",
															"nodeType": "YulAssignment",
															"src": "424:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:8",
																				"nodeType": "YulLiteral",
																				"src": "479:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:8"
																		},
																		"nativeSrc": "464:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:8"
																},
																"nativeSrc": "434:49:8",
																"nodeType": "YulFunctionCall",
																"src": "434:49:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:8",
														"nodeType": "YulTypedName",
														"src": "252:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:8",
														"nodeType": "YulTypedName",
														"src": "263:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:8",
														"nodeType": "YulTypedName",
														"src": "275:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:8",
														"nodeType": "YulTypedName",
														"src": "283:6:8",
														"type": ""
													}
												],
												"src": "196:293:8"
											},
											{
												"body": {
													"nativeSrc": "595:102:8",
													"nodeType": "YulBlock",
													"src": "595:102:8",
													"statements": [
														{
															"nativeSrc": "605:26:8",
															"nodeType": "YulAssignment",
															"src": "605:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:8",
																		"nodeType": "YulLiteral",
																		"src": "628:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:8"
																},
																"nativeSrc": "613:18:8",
																"nodeType": "YulFunctionCall",
																"src": "613:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:8",
																								"nodeType": "YulLiteral",
																								"src": "678:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:8",
																								"nodeType": "YulLiteral",
																								"src": "683:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:8"
																						},
																						"nativeSrc": "674:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:8",
																						"nodeType": "YulLiteral",
																						"src": "687:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:8"
																				},
																				"nativeSrc": "670:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:8"
																		},
																		"nativeSrc": "658:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:8"
																},
																"nativeSrc": "640:51:8",
																"nodeType": "YulFunctionCall",
																"src": "640:51:8"
															},
															"nativeSrc": "640:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:8",
														"nodeType": "YulTypedName",
														"src": "564:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:8",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:8",
														"nodeType": "YulTypedName",
														"src": "586:4:8",
														"type": ""
													}
												],
												"src": "494:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526601599ba503c000600355670de0b6b3a7640000600455348015610026575f80fd5b50604051610e5f380380610e5f83398101604081905261004591610105565b5f80546001600160a01b0319166001600160a01b0384811691909117909155811661008957604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61009281610099565b5050610136565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b0381168114610100575f80fd5b919050565b5f8060408385031215610116575f80fd5b61011f836100ea565b915061012d602084016100ea565b90509250929050565b610d1c806101435f395ff3fe608060405260043610610099575f3560e01c8063715018a611610062578063715018a61461014b5780638da5cb5b1461015f578063a87430ba14610190578063d0e30db0146101be578063f2fde38b146101c6578063fc0c546a146101e5575f80fd5b8062f714ce1461009d5780630e54b872146100b2578063200d2ed2146100d15780634bff50091461010057806369c212f61461012c575b5f80fd5b6100b06100ab3660046108ff565b610203565b005b3480156100bd575f80fd5b506100b06100cc3660046109cc565b610388565b3480156100dc575f80fd5b506005546100ea9060ff1681565b6040516100f79190610a10565b60405180910390f35b34801561010b575f80fd5b5061011f61011a366004610a36565b61046a565b6040516100f79190610a9e565b348015610137575f80fd5b5061011f610146366004610ae1565b6105c5565b348015610156575f80fd5b506100b061065b565b34801561016a575f80fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016100f7565b34801561019b575f80fd5b506101af6101aa366004610ae1565b61066e565b6040516100f793929190610b03565b6100b0610720565b3480156101d1575f80fd5b506100b06101e0366004610ae1565b610833565b3480156101f0575f80fd5b505f54610178906001600160a01b031681565b33803b1561022c5760405162461bcd60e51b815260040161022390610b36565b60405180910390fd5b6001600160a01b0382165f908152600260208190526040909120015483111561028e5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610223565b6004548311156102e05760405162461bcd60e51b815260206004820152601f60248201527f5769746864726177616c20616d6f756e742065786365656473206c696d6974006044820152606401610223565b6001600160a01b0382165f908152600260208190526040822001805485929061030a908490610b81565b90915550506040516001600160a01b0383169084156108fc029085905f818181858888f19350505050158015610342573d5f803e3d5ffd5b5060405183815233906001600160a01b038416907f46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d9060200160405180910390a3505050565b6001600160a01b0381165f90815260026020526040902060010180546103ad90610b9a565b1590506103fc5760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642100000000000000006044820152606401610223565b604080516060810182526001600160a01b0383811680835260208084018781525f8587018190529283526002909152939020825181546001600160a01b0319169216919091178155915190919060018201906104589082610c18565b50604082015181600201559050505050565b61049560405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b335f90815260026020526040902060010180548391906104b490610b9a565b90505f036104f65760405162461bcd60e51b815260206004820152600f60248201526e55736572206e6f7420666f756e642160881b6044820152606401610223565b335f9081526002602090815260409182902082516060810190935280546001600160a01b03168352600181018054919284019161053290610b9a565b80601f016020809104026020016040519081016040528092919081815260200182805461055e90610b9a565b80156105a95780601f10610580576101008083540402835291602001916105a9565b820191905f5260205f20905b81548152906001019060200180831161058c57829003601f168201915b5050505050815260200160028201548152505091505b50919050565b6105f060405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b816001600160a01b0381163b156106195760405162461bcd60e51b815260040161022390610b36565b6001600160a01b038084165f90815260026020908152604091829020825160608101909352805490931682526001830180549293929184019161053290610b9a565b61066361086d565b61066c5f61089a565b565b60026020525f9081526040902080546001820180546001600160a01b03909216929161069990610b9a565b80601f01602080910402602001604051908101604052809291908181526020018280546106c590610b9a565b80156107105780601f106106e757610100808354040283529160200191610710565b820191905f5260205f20905b8154815290600101906020018083116106f357829003601f168201915b5050505050908060020154905083565b33803b156107405760405162461bcd60e51b815260040161022390610b36565b6003543410156107cb576005805460ff191660011790556040805160208082526021908201527f4d696e696d756d206465706f73697420616d6f756e7420697320302e3030303391810191909152600760fb1b606082015233907fa8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5906080015b60405180910390a250565b335f90815260026020819052604082200180543492906107ec908490610cd3565b90915550506005805460ff1916600217905560405134815233907fb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5906020016107c0565b50565b61083b61086d565b6001600160a01b03811661086457604051631e4fbdf760e01b81525f6004820152602401610223565b6108308161089a565b6001546001600160a01b0316331461066c5760405163118cdaa760e01b8152336004820152602401610223565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0381168114610830575f80fd5b5f8060408385031215610910575f80fd5b823591506020830135610922816108eb565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610950575f80fd5b813567ffffffffffffffff81111561096a5761096a61092d565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156109995761099961092d565b6040528181528382016020018510156109b0575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156109dd575f80fd5b823567ffffffffffffffff8111156109f3575f80fd5b6109ff85828601610941565b9250506020830135610922816108eb565b6020810160038310610a3057634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215610a46575f80fd5b813567ffffffffffffffff811115610a5c575f80fd5b610a6884828501610941565b949350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602080825282516001600160a01b031682820152820151606060408301525f90610acb6080840182610a70565b9050604084015160608401528091505092915050565b5f60208284031215610af1575f80fd5b8135610afc816108eb565b9392505050565b6001600160a01b03841681526060602082018190525f90610b2690830185610a70565b9050826040830152949350505050565b6020808252601b908201527f54686973206973206120636f6e74726163742061646472657373210000000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610b9457610b94610b6d565b92915050565b600181811c90821680610bae57607f821691505b6020821081036105bf57634e487b7160e01b5f52602260045260245ffd5b601f821115610c1357805f5260205f20601f840160051c81016020851015610bf15750805b601f840160051c820191505b81811015610c10575f8155600101610bfd565b50505b505050565b815167ffffffffffffffff811115610c3257610c3261092d565b610c4681610c408454610b9a565b84610bcc565b6020601f821160018114610c78575f8315610c615750848201515b5f19600385901b1c1916600184901b178455610c10565b5f84815260208120601f198516915b82811015610ca75787850151825560209485019460019092019101610c87565b5084821015610cc457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b80820180821115610b9457610b94610b6d56fea2646970667358221220ecc1ccb657a7f62546a9d1e88013d12ac1cd9285f3b1a14d6def4b262b09430d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x1599BA503C000 PUSH1 0x3 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE5F CODESIZE SUB DUP1 PUSH2 0xE5F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x45 SWAP2 PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND PUSH2 0x89 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x92 DUP2 PUSH2 0x99 JUMP JUMPDEST POP POP PUSH2 0x136 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11F DUP4 PUSH2 0xEA JUMP JUMPDEST SWAP2 POP PUSH2 0x12D PUSH1 0x20 DUP5 ADD PUSH2 0xEA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1C DUP1 PUSH2 0x143 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xE54B872 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4BFF5009 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x69C212F6 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x203 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0xEA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x65B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x178 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 GT ISZERO PUSH2 0x28E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E742065786365656473206C696D697400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x30A SWAP1 DUP5 SWAP1 PUSH2 0xB81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x46B6C03A6ED8406EDA01806AB6D408E07129555FDA5275B7F67E3A255F2D7A0D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0xB9A JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792072656769737465726564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH0 DUP6 DUP8 ADD DUP2 SWAP1 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x458 SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH2 0x495 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH2 0x4B4 SWAP1 PUSH2 0xB9A JUMP JUMPDEST SWAP1 POP PUSH0 SUB PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206E6F7420666F756E6421 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x532 SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x532 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x663 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x66C PUSH0 PUSH2 0x89A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x699 SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C5 SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x710 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x710 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206465706F73697420616D6F756E7420697320302E30303033 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xA8B9F7931AC94CF9850ACCD175CF4543FAC81AE93865D1670E14213829F67DE5 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x7EC SWAP1 DUP5 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xB3EF81558ED1A50072A492984535A009DA8B129C749500B387F1E5F4886BDDE5 SWAP1 PUSH1 0x20 ADD PUSH2 0x7C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x830 DUP2 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x830 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x910 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x922 DUP2 PUSH2 0x8EB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x950 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96A JUMPI PUSH2 0x96A PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x9B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9DD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FF DUP6 DUP3 DUP7 ADD PUSH2 0x941 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x922 DUP2 PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xA30 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA68 DUP5 DUP3 DUP6 ADD PUSH2 0x941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH0 SWAP1 PUSH2 0xACB PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFC DUP2 PUSH2 0x8EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xB26 SWAP1 DUP4 ADD DUP6 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206973206120636F6E74726163742061646472657373210000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0xB6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xBAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xC13 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xBF1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC10 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBFD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC32 PUSH2 0x92D JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xC40 DUP5 SLOAD PUSH2 0xB9A JUMP JUMPDEST DUP5 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC78 JUMPI PUSH0 DUP4 ISZERO PUSH2 0xC61 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xC10 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xC87 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0xCC4 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0xB6D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xC1 0xCC 0xB6 JUMPI 0xA7 0xF6 0x25 CHAINID 0xA9 0xD1 0xE8 DUP1 SGT 0xD1 0x2A 0xC1 0xCD SWAP3 DUP6 RETURN 0xB1 LOG1 0x4D PUSH14 0xEF4B262B09430D64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "156:5725:7:-:0;;;416:13;388:41;;465:7;435:37;;2166:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2237:5;:31;;-1:-1:-1;;;;;;2237:31:7;-1:-1:-1;;;;;2237:31:7;;;;;;;;;;2283:26;;2279:95;;2332:31;;-1:-1:-1;;;2332:31:7;;2360:1;2332:31;;;640:51:8;613:18;;2332:31:7;;;;;;;2279:95;2383:32;2402:12;2383:18;:32::i;:::-;2166:256;;156:5725;;3722:187;3814:6;;;-1:-1:-1;;;;;3830:17:7;;;-1:-1:-1;;;;;;3830:17:7;;;;;;;3862:40;;3814:6;;;3830:17;3814:6;;3862:40;;3795:16;;3862:40;3785:124;3722:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;156:5725:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_1154": {
									"entryPoint": 2157,
									"id": 1154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1216": {
									"entryPoint": 2202,
									"id": 1216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1328": {
									"entryPoint": 1824,
									"id": 1328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getUserByAddress_1264": {
									"entryPoint": 1477,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserByName_1281": {
									"entryPoint": 1130,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContractAddr_1391": {
									"entryPoint": null,
									"id": 1391,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1137": {
									"entryPoint": null,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerUser_1248": {
									"entryPoint": 904,
									"id": 1248,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1168": {
									"entryPoint": 1627,
									"id": 1168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@status_1021": {
									"entryPoint": null,
									"id": 1021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_986": {
									"entryPoint": null,
									"id": 986,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1196": {
									"entryPoint": 2099,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@users_993": {
									"entryPoint": 1646,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1377": {
									"entryPoint": 515,
									"id": 1377,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 2614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address_payable": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_address_payable": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2819,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_JVCToken_$974__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$1018__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_User_$1014_memory_ptr__to_t_struct$_User_$1014_memory_ptr__fromStack_reversed": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 2283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9778:8",
										"nodeType": "YulBlock",
										"src": "0:9778:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "67:86:8",
													"nodeType": "YulBlock",
													"src": "67:86:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "131:16:8",
																"nodeType": "YulBlock",
																"src": "131:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "140:1:8",
																					"nodeType": "YulLiteral",
																					"src": "140:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "143:1:8",
																					"nodeType": "YulLiteral",
																					"src": "143:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "133:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "133:6:8"
																			},
																			"nativeSrc": "133:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "133:12:8"
																		},
																		"nativeSrc": "133:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "133:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "90:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "90:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "101:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "101:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "116:3:8",
																										"nodeType": "YulLiteral",
																										"src": "116:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "121:1:8",
																										"nodeType": "YulLiteral",
																										"src": "121:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "112:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "112:3:8"
																								},
																								"nativeSrc": "112:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "112:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "125:1:8",
																								"nodeType": "YulLiteral",
																								"src": "125:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "108:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "108:3:8"
																						},
																						"nativeSrc": "108:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "108:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "97:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "97:3:8"
																				},
																				"nativeSrc": "97:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "97:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "87:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "87:2:8"
																		},
																		"nativeSrc": "87:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "87:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "80:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "80:6:8"
																},
																"nativeSrc": "80:50:8",
																"nodeType": "YulFunctionCall",
																"src": "80:50:8"
															},
															"nativeSrc": "77:70:8",
															"nodeType": "YulIf",
															"src": "77:70:8"
														}
													]
												},
												"name": "validator_revert_address_payable",
												"nativeSrc": "14:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "56:5:8",
														"nodeType": "YulTypedName",
														"src": "56:5:8",
														"type": ""
													}
												],
												"src": "14:139:8"
											},
											{
												"body": {
													"nativeSrc": "253:236:8",
													"nodeType": "YulBlock",
													"src": "253:236:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "299:16:8",
																"nodeType": "YulBlock",
																"src": "299:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "308:1:8",
																					"nodeType": "YulLiteral",
																					"src": "308:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "311:1:8",
																					"nodeType": "YulLiteral",
																					"src": "311:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "301:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "301:6:8"
																			},
																			"nativeSrc": "301:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "301:12:8"
																		},
																		"nativeSrc": "301:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "301:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "274:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "274:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "283:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "283:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "270:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "270:3:8"
																		},
																		"nativeSrc": "270:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "270:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:2:8",
																		"nodeType": "YulLiteral",
																		"src": "295:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "266:3:8"
																},
																"nativeSrc": "266:32:8",
																"nodeType": "YulFunctionCall",
																"src": "266:32:8"
															},
															"nativeSrc": "263:52:8",
															"nodeType": "YulIf",
															"src": "263:52:8"
														},
														{
															"nativeSrc": "324:33:8",
															"nodeType": "YulAssignment",
															"src": "324:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "347:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "347:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "334:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "334:12:8"
																},
																"nativeSrc": "334:23:8",
																"nodeType": "YulFunctionCall",
																"src": "334:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "324:6:8"
																}
															]
														},
														{
															"nativeSrc": "366:45:8",
															"nodeType": "YulVariableDeclaration",
															"src": "366:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "396:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "396:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "407:2:8",
																				"nodeType": "YulLiteral",
																				"src": "407:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "392:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:8"
																		},
																		"nativeSrc": "392:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "392:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "379:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "379:12:8"
																},
																"nativeSrc": "379:32:8",
																"nodeType": "YulFunctionCall",
																"src": "379:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "370:5:8",
																	"nodeType": "YulTypedName",
																	"src": "370:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "453:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "453:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "420:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "420:32:8"
																},
																"nativeSrc": "420:39:8",
																"nodeType": "YulFunctionCall",
																"src": "420:39:8"
															},
															"nativeSrc": "420:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "420:39:8"
														},
														{
															"nativeSrc": "468:15:8",
															"nodeType": "YulAssignment",
															"src": "468:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "478:5:8",
																"nodeType": "YulIdentifier",
																"src": "478:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "468:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "468:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payable",
												"nativeSrc": "158:331:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "211:9:8",
														"nodeType": "YulTypedName",
														"src": "211:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "222:7:8",
														"nodeType": "YulTypedName",
														"src": "222:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "234:6:8",
														"nodeType": "YulTypedName",
														"src": "234:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "242:6:8",
														"nodeType": "YulTypedName",
														"src": "242:6:8",
														"type": ""
													}
												],
												"src": "158:331:8"
											},
											{
												"body": {
													"nativeSrc": "526:95:8",
													"nodeType": "YulBlock",
													"src": "526:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "543:1:8",
																		"nodeType": "YulLiteral",
																		"src": "543:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "550:3:8",
																				"nodeType": "YulLiteral",
																				"src": "550:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "555:10:8",
																				"nodeType": "YulLiteral",
																				"src": "555:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "546:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:8"
																		},
																		"nativeSrc": "546:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "546:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "536:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:8"
																},
																"nativeSrc": "536:31:8",
																"nodeType": "YulFunctionCall",
																"src": "536:31:8"
															},
															"nativeSrc": "536:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "536:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "583:1:8",
																		"nodeType": "YulLiteral",
																		"src": "583:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "586:4:8",
																		"nodeType": "YulLiteral",
																		"src": "586:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:8"
																},
																"nativeSrc": "576:15:8",
																"nodeType": "YulFunctionCall",
																"src": "576:15:8"
															},
															"nativeSrc": "576:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "576:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "607:1:8",
																		"nodeType": "YulLiteral",
																		"src": "607:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "610:4:8",
																		"nodeType": "YulLiteral",
																		"src": "610:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "600:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:8"
																},
																"nativeSrc": "600:15:8",
																"nodeType": "YulFunctionCall",
																"src": "600:15:8"
															},
															"nativeSrc": "600:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "600:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "494:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "494:127:8"
											},
											{
												"body": {
													"nativeSrc": "679:673:8",
													"nodeType": "YulBlock",
													"src": "679:673:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "728:16:8",
																"nodeType": "YulBlock",
																"src": "728:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "737:1:8",
																					"nodeType": "YulLiteral",
																					"src": "737:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "740:1:8",
																					"nodeType": "YulLiteral",
																					"src": "740:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "730:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:8"
																			},
																			"nativeSrc": "730:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "730:12:8"
																		},
																		"nativeSrc": "730:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "730:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "707:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "707:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "715:4:8",
																						"nodeType": "YulLiteral",
																						"src": "715:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "703:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "703:3:8"
																				},
																				"nativeSrc": "703:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "703:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "722:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "722:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "699:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "699:3:8"
																		},
																		"nativeSrc": "699:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "699:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "692:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "692:6:8"
																},
																"nativeSrc": "692:35:8",
																"nodeType": "YulFunctionCall",
																"src": "692:35:8"
															},
															"nativeSrc": "689:55:8",
															"nodeType": "YulIf",
															"src": "689:55:8"
														},
														{
															"nativeSrc": "753:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "753:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nativeSrc": "767:20:8",
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "757:6:8",
																	"nodeType": "YulTypedName",
																	"src": "757:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "830:22:8",
																"nodeType": "YulBlock",
																"src": "830:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "832:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "832:16:8"
																			},
																			"nativeSrc": "832:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "832:18:8"
																		},
																		"nativeSrc": "832:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "832:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "802:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "802:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "810:18:8",
																		"nodeType": "YulLiteral",
																		"src": "810:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "799:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:8"
																},
																"nativeSrc": "799:30:8",
																"nodeType": "YulFunctionCall",
																"src": "799:30:8"
															},
															"nativeSrc": "796:56:8",
															"nodeType": "YulIf",
															"src": "796:56:8"
														},
														{
															"nativeSrc": "861:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "861:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "881:2:8",
																		"nodeType": "YulLiteral",
																		"src": "881:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "875:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "875:5:8"
																},
																"nativeSrc": "875:9:8",
																"nodeType": "YulFunctionCall",
																"src": "875:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "865:6:8",
																	"nodeType": "YulTypedName",
																	"src": "865:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "893:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "893:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "915:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "915:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "939:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "939:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "947:4:8",
																										"nodeType": "YulLiteral",
																										"src": "947:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "935:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "935:3:8"
																								},
																								"nativeSrc": "935:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "935:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "958:2:8",
																										"nodeType": "YulLiteral",
																										"src": "958:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "954:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "954:3:8"
																								},
																								"nativeSrc": "954:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "954:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "931:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "931:3:8"
																						},
																						"nativeSrc": "931:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "931:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "964:2:8",
																						"nodeType": "YulLiteral",
																						"src": "964:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "927:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "927:3:8"
																				},
																				"nativeSrc": "927:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "927:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "973:2:8",
																						"nodeType": "YulLiteral",
																						"src": "973:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "969:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "969:3:8"
																				},
																				"nativeSrc": "969:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "969:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "923:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:8"
																		},
																		"nativeSrc": "923:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "923:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "911:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:8"
																},
																"nativeSrc": "911:67:8",
																"nodeType": "YulFunctionCall",
																"src": "911:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "897:10:8",
																	"nodeType": "YulTypedName",
																	"src": "897:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1053:22:8",
																"nodeType": "YulBlock",
																"src": "1053:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1055:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1055:16:8"
																			},
																			"nativeSrc": "1055:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1055:18:8"
																		},
																		"nativeSrc": "1055:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "996:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "996:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1008:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1008:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "993:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "993:2:8"
																		},
																		"nativeSrc": "993:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "993:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1032:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1032:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1044:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1029:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1029:2:8"
																		},
																		"nativeSrc": "1029:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1029:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "990:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "990:2:8"
																},
																"nativeSrc": "990:62:8",
																"nodeType": "YulFunctionCall",
																"src": "990:62:8"
															},
															"nativeSrc": "987:88:8",
															"nodeType": "YulIf",
															"src": "987:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1091:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1091:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1095:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1095:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1084:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:8"
																},
																"nativeSrc": "1084:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1084:22:8"
															},
															"nativeSrc": "1084:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1084:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1122:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1122:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1130:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1130:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1115:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1115:6:8"
																},
																"nativeSrc": "1115:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1115:22:8"
															},
															"nativeSrc": "1115:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1115:22:8"
														},
														{
															"body": {
																"nativeSrc": "1189:16:8",
																"nodeType": "YulBlock",
																"src": "1189:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1198:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1198:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1201:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1201:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1191:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1191:6:8"
																			},
																			"nativeSrc": "1191:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1191:12:8"
																		},
																		"nativeSrc": "1191:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1191:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1160:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1160:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1168:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1168:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1156:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:8"
																				},
																				"nativeSrc": "1156:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1156:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1177:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1177:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1152:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:8"
																		},
																		"nativeSrc": "1152:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1152:30:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1184:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1184:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1149:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1149:2:8"
																},
																"nativeSrc": "1149:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1149:39:8"
															},
															"nativeSrc": "1146:59:8",
															"nodeType": "YulIf",
															"src": "1146:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1231:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1231:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1239:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1239:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1227:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:8"
																		},
																		"nativeSrc": "1227:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1250:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1250:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1258:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1258:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1246:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:8"
																		},
																		"nativeSrc": "1246:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1265:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1265:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1214:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1214:12:8"
																},
																"nativeSrc": "1214:58:8",
																"nodeType": "YulFunctionCall",
																"src": "1214:58:8"
															},
															"nativeSrc": "1214:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "1214:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1296:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1296:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1304:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1304:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1292:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1292:3:8"
																				},
																				"nativeSrc": "1292:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1292:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1313:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1313:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1288:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:8"
																		},
																		"nativeSrc": "1288:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:30:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1281:6:8"
																},
																"nativeSrc": "1281:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1281:41:8"
															},
															"nativeSrc": "1281:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1281:41:8"
														},
														{
															"nativeSrc": "1331:15:8",
															"nodeType": "YulAssignment",
															"src": "1331:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1340:6:8",
																"nodeType": "YulIdentifier",
																"src": "1340:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1331:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1331:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "626:726:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "653:6:8",
														"nodeType": "YulTypedName",
														"src": "653:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "661:3:8",
														"nodeType": "YulTypedName",
														"src": "661:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "669:5:8",
														"nodeType": "YulTypedName",
														"src": "669:5:8",
														"type": ""
													}
												],
												"src": "626:726:8"
											},
											{
												"body": {
													"nativeSrc": "1462:368:8",
													"nodeType": "YulBlock",
													"src": "1462:368:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1508:16:8",
																"nodeType": "YulBlock",
																"src": "1508:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1517:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1517:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1520:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1510:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1510:6:8"
																			},
																			"nativeSrc": "1510:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1510:12:8"
																		},
																		"nativeSrc": "1510:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1510:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1492:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1492:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1479:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1479:3:8"
																		},
																		"nativeSrc": "1479:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1479:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1504:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1504:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1475:3:8"
																},
																"nativeSrc": "1475:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1475:32:8"
															},
															"nativeSrc": "1472:52:8",
															"nodeType": "YulIf",
															"src": "1472:52:8"
														},
														{
															"nativeSrc": "1533:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1533:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1560:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1560:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1547:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1547:12:8"
																},
																"nativeSrc": "1547:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1547:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1537:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1537:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1613:16:8",
																"nodeType": "YulBlock",
																"src": "1613:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1622:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1622:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1625:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1625:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1615:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1615:6:8"
																			},
																			"nativeSrc": "1615:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1615:12:8"
																		},
																		"nativeSrc": "1615:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1615:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1585:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1585:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1593:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1593:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1582:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:2:8"
																},
																"nativeSrc": "1582:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:30:8"
															},
															"nativeSrc": "1579:50:8",
															"nodeType": "YulIf",
															"src": "1579:50:8"
														},
														{
															"nativeSrc": "1638:60:8",
															"nodeType": "YulAssignment",
															"src": "1638:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1670:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1670:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1681:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1681:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1666:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:8"
																		},
																		"nativeSrc": "1666:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1690:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1690:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1648:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1648:17:8"
																},
																"nativeSrc": "1648:50:8",
																"nodeType": "YulFunctionCall",
																"src": "1648:50:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:8"
																}
															]
														},
														{
															"nativeSrc": "1707:45:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1707:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1737:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1748:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1748:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1733:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1733:3:8"
																		},
																		"nativeSrc": "1733:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1733:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1720:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1720:12:8"
																},
																"nativeSrc": "1720:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1720:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1711:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1711:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1794:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "1761:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "1761:32:8"
																},
																"nativeSrc": "1761:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1761:39:8"
															},
															"nativeSrc": "1761:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "1761:39:8"
														},
														{
															"nativeSrc": "1809:15:8",
															"nodeType": "YulAssignment",
															"src": "1809:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1819:5:8",
																"nodeType": "YulIdentifier",
																"src": "1819:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1809:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address_payable",
												"nativeSrc": "1357:473:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1420:9:8",
														"nodeType": "YulTypedName",
														"src": "1420:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1431:7:8",
														"nodeType": "YulTypedName",
														"src": "1431:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1443:6:8",
														"nodeType": "YulTypedName",
														"src": "1443:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1451:6:8",
														"nodeType": "YulTypedName",
														"src": "1451:6:8",
														"type": ""
													}
												],
												"src": "1357:473:8"
											},
											{
												"body": {
													"nativeSrc": "1867:95:8",
													"nodeType": "YulBlock",
													"src": "1867:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1884:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1884:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1891:3:8",
																				"nodeType": "YulLiteral",
																				"src": "1891:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1896:10:8",
																				"nodeType": "YulLiteral",
																				"src": "1896:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1887:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1887:3:8"
																		},
																		"nativeSrc": "1887:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:8"
																},
																"nativeSrc": "1877:31:8",
																"nodeType": "YulFunctionCall",
																"src": "1877:31:8"
															},
															"nativeSrc": "1877:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "1877:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1924:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1927:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1927:4:8",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1917:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1917:6:8"
																},
																"nativeSrc": "1917:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1917:15:8"
															},
															"nativeSrc": "1917:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1917:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1951:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1951:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1941:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:8"
																},
																"nativeSrc": "1941:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1941:15:8"
															},
															"nativeSrc": "1941:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1941:15:8"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1835:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1835:127:8"
											},
											{
												"body": {
													"nativeSrc": "2077:229:8",
													"nodeType": "YulBlock",
													"src": "2077:229:8",
													"statements": [
														{
															"nativeSrc": "2087:26:8",
															"nodeType": "YulAssignment",
															"src": "2087:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2099:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2099:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2095:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:8"
																},
																"nativeSrc": "2095:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2095:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2087:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2087:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2155:111:8",
																"nodeType": "YulBlock",
																"src": "2155:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2176:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2176:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2183:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2183:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2188:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2188:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2179:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2179:3:8"
																					},
																					"nativeSrc": "2179:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2179:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2169:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:8"
																			},
																			"nativeSrc": "2169:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2169:31:8"
																		},
																		"nativeSrc": "2169:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2223:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2223:4:8",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2213:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2213:6:8"
																			},
																			"nativeSrc": "2213:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2213:15:8"
																		},
																		"nativeSrc": "2213:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2213:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2248:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2248:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2251:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2251:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2241:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2241:6:8"
																			},
																			"nativeSrc": "2241:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2241:15:8"
																		},
																		"nativeSrc": "2241:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2241:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2135:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2135:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2143:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2143:1:8",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2132:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2132:2:8"
																		},
																		"nativeSrc": "2132:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2132:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2125:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:8"
																},
																"nativeSrc": "2125:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2125:21:8"
															},
															"nativeSrc": "2122:144:8",
															"nodeType": "YulIf",
															"src": "2122:144:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2293:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2293:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2275:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:8"
																},
																"nativeSrc": "2275:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2275:25:8"
															},
															"nativeSrc": "2275:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "2275:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$1018__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1967:339:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2046:9:8",
														"nodeType": "YulTypedName",
														"src": "2046:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2057:6:8",
														"nodeType": "YulTypedName",
														"src": "2057:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2068:4:8",
														"nodeType": "YulTypedName",
														"src": "2068:4:8",
														"type": ""
													}
												],
												"src": "1967:339:8"
											},
											{
												"body": {
													"nativeSrc": "2391:242:8",
													"nodeType": "YulBlock",
													"src": "2391:242:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2437:16:8",
																"nodeType": "YulBlock",
																"src": "2437:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2446:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2446:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2449:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2449:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2439:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2439:6:8"
																			},
																			"nativeSrc": "2439:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2439:12:8"
																		},
																		"nativeSrc": "2439:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2439:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2412:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2412:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2421:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2421:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2408:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:8"
																		},
																		"nativeSrc": "2408:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2433:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2433:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2404:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2404:3:8"
																},
																"nativeSrc": "2404:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2404:32:8"
															},
															"nativeSrc": "2401:52:8",
															"nodeType": "YulIf",
															"src": "2401:52:8"
														},
														{
															"nativeSrc": "2462:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2462:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2489:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2489:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2476:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2476:12:8"
																},
																"nativeSrc": "2476:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2476:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2466:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2466:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2542:16:8",
																"nodeType": "YulBlock",
																"src": "2542:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2551:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2551:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2554:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2554:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2544:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2544:6:8"
																			},
																			"nativeSrc": "2544:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2544:12:8"
																		},
																		"nativeSrc": "2544:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2544:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2514:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2514:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2522:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2522:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2511:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2511:2:8"
																},
																"nativeSrc": "2511:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2511:30:8"
															},
															"nativeSrc": "2508:50:8",
															"nodeType": "YulIf",
															"src": "2508:50:8"
														},
														{
															"nativeSrc": "2567:60:8",
															"nodeType": "YulAssignment",
															"src": "2567:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2599:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2599:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2610:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2595:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2595:3:8"
																		},
																		"nativeSrc": "2595:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2619:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2619:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2577:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2577:17:8"
																},
																"nativeSrc": "2577:50:8",
																"nodeType": "YulFunctionCall",
																"src": "2577:50:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2567:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2311:322:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2357:9:8",
														"nodeType": "YulTypedName",
														"src": "2357:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2368:7:8",
														"nodeType": "YulTypedName",
														"src": "2368:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2380:6:8",
														"nodeType": "YulTypedName",
														"src": "2380:6:8",
														"type": ""
													}
												],
												"src": "2311:322:8"
											},
											{
												"body": {
													"nativeSrc": "2688:239:8",
													"nodeType": "YulBlock",
													"src": "2688:239:8",
													"statements": [
														{
															"nativeSrc": "2698:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2698:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2718:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2718:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2712:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2712:5:8"
																},
																"nativeSrc": "2712:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2712:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2702:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2702:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2740:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2740:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2745:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2745:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2733:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2733:6:8"
																},
																"nativeSrc": "2733:19:8",
																"nodeType": "YulFunctionCall",
																"src": "2733:19:8"
															},
															"nativeSrc": "2733:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "2733:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2771:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2771:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2776:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2767:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:8"
																		},
																		"nativeSrc": "2767:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2787:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2787:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2794:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2794:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2783:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:8"
																		},
																		"nativeSrc": "2783:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:16:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2801:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2801:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2761:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2761:5:8"
																},
																"nativeSrc": "2761:47:8",
																"nodeType": "YulFunctionCall",
																"src": "2761:47:8"
															},
															"nativeSrc": "2761:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "2761:47:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2832:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2837:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2837:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2828:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2828:3:8"
																				},
																				"nativeSrc": "2828:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2828:16:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2846:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2846:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2824:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:8"
																		},
																		"nativeSrc": "2824:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2824:27:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2853:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2853:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2817:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:8"
																},
																"nativeSrc": "2817:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2817:38:8"
															},
															"nativeSrc": "2817:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "2817:38:8"
														},
														{
															"nativeSrc": "2864:57:8",
															"nodeType": "YulAssignment",
															"src": "2864:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2879:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2879:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2892:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "2892:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2900:2:8",
																								"nodeType": "YulLiteral",
																								"src": "2900:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2888:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2888:3:8"
																						},
																						"nativeSrc": "2888:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2888:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2909:2:8",
																								"nodeType": "YulLiteral",
																								"src": "2909:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2905:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2905:3:8"
																						},
																						"nativeSrc": "2905:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2905:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2884:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:8"
																				},
																				"nativeSrc": "2884:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2884:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2875:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:8"
																		},
																		"nativeSrc": "2875:39:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2875:39:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2916:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2916:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2871:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:8"
																},
																"nativeSrc": "2871:50:8",
																"nodeType": "YulFunctionCall",
																"src": "2871:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2864:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "2638:289:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2665:5:8",
														"nodeType": "YulTypedName",
														"src": "2665:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2672:3:8",
														"nodeType": "YulTypedName",
														"src": "2672:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2680:3:8",
														"nodeType": "YulTypedName",
														"src": "2680:3:8",
														"type": ""
													}
												],
												"src": "2638:289:8"
											},
											{
												"body": {
													"nativeSrc": "3077:364:8",
													"nodeType": "YulBlock",
													"src": "3077:364:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3094:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3094:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3105:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3105:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:8"
																},
																"nativeSrc": "3087:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3087:21:8"
															},
															"nativeSrc": "3087:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3087:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3128:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3139:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3124:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:8"
																		},
																		"nativeSrc": "3124:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3154:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3154:6:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "3148:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3148:5:8"
																				},
																				"nativeSrc": "3148:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3148:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3171:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3171:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3176:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3176:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3167:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3167:3:8"
																						},
																						"nativeSrc": "3167:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3167:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3180:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3180:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3163:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3163:3:8"
																				},
																				"nativeSrc": "3163:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3163:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3144:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:8"
																		},
																		"nativeSrc": "3144:39:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3144:39:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3117:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:8"
																},
																"nativeSrc": "3117:67:8",
																"nodeType": "YulFunctionCall",
																"src": "3117:67:8"
															},
															"nativeSrc": "3117:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "3117:67:8"
														},
														{
															"nativeSrc": "3193:42:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3193:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3223:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3223:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3231:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3231:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3219:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:8"
																		},
																		"nativeSrc": "3219:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:15:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3213:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3213:5:8"
																},
																"nativeSrc": "3213:22:8",
																"nodeType": "YulFunctionCall",
																"src": "3213:22:8"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "3197:12:8",
																	"nodeType": "YulTypedName",
																	"src": "3197:12:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3255:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3266:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3266:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3251:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:8"
																		},
																		"nativeSrc": "3251:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3251:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3271:4:8",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3244:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:8"
																},
																"nativeSrc": "3244:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3244:32:8"
															},
															"nativeSrc": "3244:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "3244:32:8"
														},
														{
															"nativeSrc": "3285:66:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3285:66:8",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nativeSrc": "3317:12:8",
																		"nodeType": "YulIdentifier",
																		"src": "3317:12:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3335:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3346:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3346:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3331:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3331:3:8"
																		},
																		"nativeSrc": "3331:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3331:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3299:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3299:17:8"
																},
																"nativeSrc": "3299:52:8",
																"nodeType": "YulFunctionCall",
																"src": "3299:52:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3289:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3289:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3371:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3371:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3382:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3382:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3367:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:8"
																		},
																		"nativeSrc": "3367:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3367:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3399:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3399:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3407:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3407:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3395:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3395:3:8"
																				},
																				"nativeSrc": "3395:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3395:15:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3389:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3389:5:8"
																		},
																		"nativeSrc": "3389:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3389:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3360:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:8"
																},
																"nativeSrc": "3360:52:8",
																"nodeType": "YulFunctionCall",
																"src": "3360:52:8"
															},
															"nativeSrc": "3360:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "3360:52:8"
														},
														{
															"nativeSrc": "3421:14:8",
															"nodeType": "YulAssignment",
															"src": "3421:14:8",
															"value": {
																"name": "tail_1",
																"nativeSrc": "3429:6:8",
																"nodeType": "YulIdentifier",
																"src": "3429:6:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3421:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_User_$1014_memory_ptr__to_t_struct$_User_$1014_memory_ptr__fromStack_reversed",
												"nativeSrc": "2932:509:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3046:9:8",
														"nodeType": "YulTypedName",
														"src": "3046:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3057:6:8",
														"nodeType": "YulTypedName",
														"src": "3057:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3068:4:8",
														"nodeType": "YulTypedName",
														"src": "3068:4:8",
														"type": ""
													}
												],
												"src": "2932:509:8"
											},
											{
												"body": {
													"nativeSrc": "3516:185:8",
													"nodeType": "YulBlock",
													"src": "3516:185:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3562:16:8",
																"nodeType": "YulBlock",
																"src": "3562:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3571:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3571:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3574:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3574:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3564:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3564:6:8"
																			},
																			"nativeSrc": "3564:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3564:12:8"
																		},
																		"nativeSrc": "3564:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3564:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3533:3:8"
																		},
																		"nativeSrc": "3533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3558:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3529:3:8"
																},
																"nativeSrc": "3529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3529:32:8"
															},
															"nativeSrc": "3526:52:8",
															"nodeType": "YulIf",
															"src": "3526:52:8"
														},
														{
															"nativeSrc": "3587:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3587:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3613:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3613:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3600:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3600:12:8"
																},
																"nativeSrc": "3600:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3600:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3591:5:8",
																	"nodeType": "YulTypedName",
																	"src": "3591:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3665:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3665:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "3632:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "3632:32:8"
																},
																"nativeSrc": "3632:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3632:39:8"
															},
															"nativeSrc": "3632:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "3632:39:8"
														},
														{
															"nativeSrc": "3680:15:8",
															"nodeType": "YulAssignment",
															"src": "3680:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "3690:5:8",
																"nodeType": "YulIdentifier",
																"src": "3690:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3680:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3446:255:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3482:9:8",
														"nodeType": "YulTypedName",
														"src": "3482:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3493:7:8",
														"nodeType": "YulTypedName",
														"src": "3493:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3505:6:8",
														"nodeType": "YulTypedName",
														"src": "3505:6:8",
														"type": ""
													}
												],
												"src": "3446:255:8"
											},
											{
												"body": {
													"nativeSrc": "3807:102:8",
													"nodeType": "YulBlock",
													"src": "3807:102:8",
													"statements": [
														{
															"nativeSrc": "3817:26:8",
															"nodeType": "YulAssignment",
															"src": "3817:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3829:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3829:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3840:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3840:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3825:3:8"
																},
																"nativeSrc": "3825:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3825:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3817:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3817:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3859:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3859:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3874:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3874:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3890:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3890:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3895:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3895:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3886:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3886:3:8"
																						},
																						"nativeSrc": "3886:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3886:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3899:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3899:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3882:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3882:3:8"
																				},
																				"nativeSrc": "3882:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3882:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3870:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:8"
																		},
																		"nativeSrc": "3870:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3870:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3852:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:8"
																},
																"nativeSrc": "3852:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3852:51:8"
															},
															"nativeSrc": "3852:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3852:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3706:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3776:9:8",
														"nodeType": "YulTypedName",
														"src": "3776:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3787:6:8",
														"nodeType": "YulTypedName",
														"src": "3787:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3798:4:8",
														"nodeType": "YulTypedName",
														"src": "3798:4:8",
														"type": ""
													}
												],
												"src": "3706:203:8"
											},
											{
												"body": {
													"nativeSrc": "4091:211:8",
													"nodeType": "YulBlock",
													"src": "4091:211:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4108:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4108:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4123:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4123:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4139:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4139:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4144:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4144:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4135:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4135:3:8"
																						},
																						"nativeSrc": "4135:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4135:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4148:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4148:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4131:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4131:3:8"
																				},
																				"nativeSrc": "4131:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4131:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4119:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4119:3:8"
																		},
																		"nativeSrc": "4119:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4119:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4101:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:8"
																},
																"nativeSrc": "4101:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4101:51:8"
															},
															"nativeSrc": "4101:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4101:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4172:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4172:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4183:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4183:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4168:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:8"
																		},
																		"nativeSrc": "4168:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4188:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4188:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4161:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:6:8"
																},
																"nativeSrc": "4161:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:30:8"
															},
															"nativeSrc": "4161:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4161:30:8"
														},
														{
															"nativeSrc": "4200:53:8",
															"nodeType": "YulAssignment",
															"src": "4200:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4226:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4226:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4238:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4238:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4249:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4249:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4234:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:8"
																		},
																		"nativeSrc": "4234:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "4208:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4208:17:8"
																},
																"nativeSrc": "4208:45:8",
																"nodeType": "YulFunctionCall",
																"src": "4208:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4200:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4200:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4273:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4273:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4284:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4284:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4269:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4269:3:8"
																		},
																		"nativeSrc": "4269:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4269:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4289:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4289:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4262:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4262:6:8"
																},
																"nativeSrc": "4262:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4262:34:8"
															},
															"nativeSrc": "4262:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4262:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "3914:388:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4044:9:8",
														"nodeType": "YulTypedName",
														"src": "4044:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4055:6:8",
														"nodeType": "YulTypedName",
														"src": "4055:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4063:6:8",
														"nodeType": "YulTypedName",
														"src": "4063:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4071:6:8",
														"nodeType": "YulTypedName",
														"src": "4071:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4082:4:8",
														"nodeType": "YulTypedName",
														"src": "4082:4:8",
														"type": ""
													}
												],
												"src": "3914:388:8"
											},
											{
												"body": {
													"nativeSrc": "4424:102:8",
													"nodeType": "YulBlock",
													"src": "4424:102:8",
													"statements": [
														{
															"nativeSrc": "4434:26:8",
															"nodeType": "YulAssignment",
															"src": "4434:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4446:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4446:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4457:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4457:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4442:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:8"
																},
																"nativeSrc": "4442:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4442:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4434:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4434:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4476:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4476:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4491:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4491:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4507:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4507:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4512:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4512:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4503:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4503:3:8"
																						},
																						"nativeSrc": "4503:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4503:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4516:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4516:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4499:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4499:3:8"
																				},
																				"nativeSrc": "4499:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4499:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4487:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4487:3:8"
																		},
																		"nativeSrc": "4487:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4487:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4469:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4469:6:8"
																},
																"nativeSrc": "4469:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4469:51:8"
															},
															"nativeSrc": "4469:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4469:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_JVCToken_$974__to_t_address__fromStack_reversed",
												"nativeSrc": "4307:219:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4393:9:8",
														"nodeType": "YulTypedName",
														"src": "4393:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4404:6:8",
														"nodeType": "YulTypedName",
														"src": "4404:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4415:4:8",
														"nodeType": "YulTypedName",
														"src": "4415:4:8",
														"type": ""
													}
												],
												"src": "4307:219:8"
											},
											{
												"body": {
													"nativeSrc": "4705:177:8",
													"nodeType": "YulBlock",
													"src": "4705:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4722:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4722:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4733:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4733:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4715:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:8"
																},
																"nativeSrc": "4715:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4715:21:8"
															},
															"nativeSrc": "4715:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4715:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4756:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4767:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4767:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4752:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:8"
																		},
																		"nativeSrc": "4752:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4772:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4772:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4745:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:8"
																},
																"nativeSrc": "4745:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4745:30:8"
															},
															"nativeSrc": "4745:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4745:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4795:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4795:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4806:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4806:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4791:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4791:3:8"
																		},
																		"nativeSrc": "4791:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4791:18:8"
																	},
																	{
																		"hexValue": "54686973206973206120636f6e7472616374206164647265737321",
																		"kind": "string",
																		"nativeSrc": "4811:29:8",
																		"nodeType": "YulLiteral",
																		"src": "4811:29:8",
																		"type": "",
																		"value": "This is a contract address!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4784:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:8"
																},
																"nativeSrc": "4784:57:8",
																"nodeType": "YulFunctionCall",
																"src": "4784:57:8"
															},
															"nativeSrc": "4784:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "4784:57:8"
														},
														{
															"nativeSrc": "4850:26:8",
															"nodeType": "YulAssignment",
															"src": "4850:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4862:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4862:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4873:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4873:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4858:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:8"
																},
																"nativeSrc": "4858:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4858:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4850:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4850:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4531:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4682:9:8",
														"nodeType": "YulTypedName",
														"src": "4682:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4696:4:8",
														"nodeType": "YulTypedName",
														"src": "4696:4:8",
														"type": ""
													}
												],
												"src": "4531:351:8"
											},
											{
												"body": {
													"nativeSrc": "5061:170:8",
													"nodeType": "YulBlock",
													"src": "5061:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5078:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5078:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5089:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5089:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5071:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:8"
																},
																"nativeSrc": "5071:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5071:21:8"
															},
															"nativeSrc": "5071:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5071:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5112:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5112:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5123:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5123:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5108:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5108:3:8"
																		},
																		"nativeSrc": "5108:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5108:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5128:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5128:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5101:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5101:6:8"
																},
																"nativeSrc": "5101:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5101:30:8"
															},
															"nativeSrc": "5101:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5101:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5151:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5151:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5162:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5162:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5147:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5147:3:8"
																		},
																		"nativeSrc": "5147:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5147:18:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5167:22:8",
																		"nodeType": "YulLiteral",
																		"src": "5167:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5140:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:8"
																},
																"nativeSrc": "5140:50:8",
																"nodeType": "YulFunctionCall",
																"src": "5140:50:8"
															},
															"nativeSrc": "5140:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "5140:50:8"
														},
														{
															"nativeSrc": "5199:26:8",
															"nodeType": "YulAssignment",
															"src": "5199:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5211:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5211:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5222:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5222:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5207:3:8"
																},
																"nativeSrc": "5207:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5207:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5199:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5199:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4887:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5038:9:8",
														"nodeType": "YulTypedName",
														"src": "5038:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5052:4:8",
														"nodeType": "YulTypedName",
														"src": "5052:4:8",
														"type": ""
													}
												],
												"src": "4887:344:8"
											},
											{
												"body": {
													"nativeSrc": "5410:181:8",
													"nodeType": "YulBlock",
													"src": "5410:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5427:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5427:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5438:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5438:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5420:6:8"
																},
																"nativeSrc": "5420:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5420:21:8"
															},
															"nativeSrc": "5420:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5420:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5461:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5461:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5472:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5472:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5457:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5457:3:8"
																		},
																		"nativeSrc": "5457:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5457:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5477:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5477:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5450:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5450:6:8"
																},
																"nativeSrc": "5450:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5450:30:8"
															},
															"nativeSrc": "5450:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5450:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5500:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5500:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5511:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5511:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5496:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:8"
																		},
																		"nativeSrc": "5496:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5496:18:8"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e742065786365656473206c696d6974",
																		"kind": "string",
																		"nativeSrc": "5516:33:8",
																		"nodeType": "YulLiteral",
																		"src": "5516:33:8",
																		"type": "",
																		"value": "Withdrawal amount exceeds limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5489:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:8"
																},
																"nativeSrc": "5489:61:8",
																"nodeType": "YulFunctionCall",
																"src": "5489:61:8"
															},
															"nativeSrc": "5489:61:8",
															"nodeType": "YulExpressionStatement",
															"src": "5489:61:8"
														},
														{
															"nativeSrc": "5559:26:8",
															"nodeType": "YulAssignment",
															"src": "5559:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5571:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5582:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5567:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5567:3:8"
																},
																"nativeSrc": "5567:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5567:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5559:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5559:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5236:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5387:9:8",
														"nodeType": "YulTypedName",
														"src": "5387:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5401:4:8",
														"nodeType": "YulTypedName",
														"src": "5401:4:8",
														"type": ""
													}
												],
												"src": "5236:355:8"
											},
											{
												"body": {
													"nativeSrc": "5628:95:8",
													"nodeType": "YulBlock",
													"src": "5628:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5645:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5645:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5652:3:8",
																				"nodeType": "YulLiteral",
																				"src": "5652:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5657:10:8",
																				"nodeType": "YulLiteral",
																				"src": "5657:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5648:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5648:3:8"
																		},
																		"nativeSrc": "5648:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5648:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:8"
																},
																"nativeSrc": "5638:31:8",
																"nodeType": "YulFunctionCall",
																"src": "5638:31:8"
															},
															"nativeSrc": "5638:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "5638:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5685:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5685:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5688:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5688:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5678:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:8"
																},
																"nativeSrc": "5678:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5678:15:8"
															},
															"nativeSrc": "5678:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5678:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5709:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5709:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5712:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5702:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:8"
																},
																"nativeSrc": "5702:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5702:15:8"
															},
															"nativeSrc": "5702:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5702:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5596:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5596:127:8"
											},
											{
												"body": {
													"nativeSrc": "5777:79:8",
													"nodeType": "YulBlock",
													"src": "5777:79:8",
													"statements": [
														{
															"nativeSrc": "5787:17:8",
															"nodeType": "YulAssignment",
															"src": "5787:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5799:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5799:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5802:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5802:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5795:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5795:3:8"
																},
																"nativeSrc": "5795:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5795:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5787:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5787:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5828:22:8",
																"nodeType": "YulBlock",
																"src": "5828:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5830:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5830:16:8"
																			},
																			"nativeSrc": "5830:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5830:18:8"
																		},
																		"nativeSrc": "5830:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5830:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5819:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5819:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5825:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5825:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5816:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5816:2:8"
																},
																"nativeSrc": "5816:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5816:11:8"
															},
															"nativeSrc": "5813:37:8",
															"nodeType": "YulIf",
															"src": "5813:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5728:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5759:1:8",
														"nodeType": "YulTypedName",
														"src": "5759:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5762:1:8",
														"nodeType": "YulTypedName",
														"src": "5762:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5768:4:8",
														"nodeType": "YulTypedName",
														"src": "5768:4:8",
														"type": ""
													}
												],
												"src": "5728:128:8"
											},
											{
												"body": {
													"nativeSrc": "5962:76:8",
													"nodeType": "YulBlock",
													"src": "5962:76:8",
													"statements": [
														{
															"nativeSrc": "5972:26:8",
															"nodeType": "YulAssignment",
															"src": "5972:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5984:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5984:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5995:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5995:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5980:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5980:3:8"
																},
																"nativeSrc": "5980:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5980:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5972:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5972:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6014:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6014:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6025:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6025:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6007:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:8"
																},
																"nativeSrc": "6007:25:8",
																"nodeType": "YulFunctionCall",
																"src": "6007:25:8"
															},
															"nativeSrc": "6007:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "6007:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5861:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5931:9:8",
														"nodeType": "YulTypedName",
														"src": "5931:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5942:6:8",
														"nodeType": "YulTypedName",
														"src": "5942:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5953:4:8",
														"nodeType": "YulTypedName",
														"src": "5953:4:8",
														"type": ""
													}
												],
												"src": "5861:177:8"
											},
											{
												"body": {
													"nativeSrc": "6098:325:8",
													"nodeType": "YulBlock",
													"src": "6098:325:8",
													"statements": [
														{
															"nativeSrc": "6108:22:8",
															"nodeType": "YulAssignment",
															"src": "6108:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6122:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6122:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6125:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6125:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6118:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:8"
																},
																"nativeSrc": "6118:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6118:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6108:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:8"
																}
															]
														},
														{
															"nativeSrc": "6139:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6139:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6169:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6169:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6175:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6175:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6165:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6165:3:8"
																},
																"nativeSrc": "6165:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6165:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6143:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6143:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6216:31:8",
																"nodeType": "YulBlock",
																"src": "6216:31:8",
																"statements": [
																	{
																		"nativeSrc": "6218:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6218:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6232:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6232:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6240:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6240:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6228:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6228:3:8"
																			},
																			"nativeSrc": "6228:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6228:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6218:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6196:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6196:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6189:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6189:6:8"
																},
																"nativeSrc": "6189:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6189:26:8"
															},
															"nativeSrc": "6186:61:8",
															"nodeType": "YulIf",
															"src": "6186:61:8"
														},
														{
															"body": {
																"nativeSrc": "6306:111:8",
																"nodeType": "YulBlock",
																"src": "6306:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6327:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6327:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6334:3:8",
																							"nodeType": "YulLiteral",
																							"src": "6334:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6339:10:8",
																							"nodeType": "YulLiteral",
																							"src": "6339:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6330:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6330:3:8"
																					},
																					"nativeSrc": "6330:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6330:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6320:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6320:6:8"
																			},
																			"nativeSrc": "6320:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6320:31:8"
																		},
																		"nativeSrc": "6320:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6320:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6371:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6371:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6374:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6374:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6364:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:8"
																			},
																			"nativeSrc": "6364:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6364:15:8"
																		},
																		"nativeSrc": "6364:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6364:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6399:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6402:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6402:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6392:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6392:6:8"
																			},
																			"nativeSrc": "6392:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6392:15:8"
																		},
																		"nativeSrc": "6392:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6392:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6262:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6262:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6285:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6285:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6293:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6293:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6282:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6282:2:8"
																		},
																		"nativeSrc": "6282:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6282:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6259:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6259:2:8"
																},
																"nativeSrc": "6259:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6259:38:8"
															},
															"nativeSrc": "6256:161:8",
															"nodeType": "YulIf",
															"src": "6256:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6043:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6078:4:8",
														"nodeType": "YulTypedName",
														"src": "6078:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6087:6:8",
														"nodeType": "YulTypedName",
														"src": "6087:6:8",
														"type": ""
													}
												],
												"src": "6043:380:8"
											},
											{
												"body": {
													"nativeSrc": "6602:174:8",
													"nodeType": "YulBlock",
													"src": "6602:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6619:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6619:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6630:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6630:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6612:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6612:6:8"
																},
																"nativeSrc": "6612:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6612:21:8"
															},
															"nativeSrc": "6612:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6612:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6653:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6653:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6664:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6664:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6649:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:8"
																		},
																		"nativeSrc": "6649:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6649:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6669:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6669:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6642:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6642:6:8"
																},
																"nativeSrc": "6642:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6642:30:8"
															},
															"nativeSrc": "6642:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6642:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6692:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6692:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6703:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6703:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6688:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6688:3:8"
																		},
																		"nativeSrc": "6688:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6688:18:8"
																	},
																	{
																		"hexValue": "5573657220616c7265616479207265676973746572656421",
																		"kind": "string",
																		"nativeSrc": "6708:26:8",
																		"nodeType": "YulLiteral",
																		"src": "6708:26:8",
																		"type": "",
																		"value": "User already registered!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6681:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:8"
																},
																"nativeSrc": "6681:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6681:54:8"
															},
															"nativeSrc": "6681:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "6681:54:8"
														},
														{
															"nativeSrc": "6744:26:8",
															"nodeType": "YulAssignment",
															"src": "6744:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6756:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6756:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6767:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6767:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6752:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6752:3:8"
																},
																"nativeSrc": "6752:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6752:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6744:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6744:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6428:348:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6579:9:8",
														"nodeType": "YulTypedName",
														"src": "6579:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6593:4:8",
														"nodeType": "YulTypedName",
														"src": "6593:4:8",
														"type": ""
													}
												],
												"src": "6428:348:8"
											},
											{
												"body": {
													"nativeSrc": "6837:65:8",
													"nodeType": "YulBlock",
													"src": "6837:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6857:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6857:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:8"
																},
																"nativeSrc": "6847:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6847:14:8"
															},
															"nativeSrc": "6847:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "6847:14:8"
														},
														{
															"nativeSrc": "6870:26:8",
															"nodeType": "YulAssignment",
															"src": "6870:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6888:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6888:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6891:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6891:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6878:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6878:9:8"
																},
																"nativeSrc": "6878:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6878:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6870:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6870:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "6781:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6820:3:8",
														"nodeType": "YulTypedName",
														"src": "6820:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6828:4:8",
														"nodeType": "YulTypedName",
														"src": "6828:4:8",
														"type": ""
													}
												],
												"src": "6781:121:8"
											},
											{
												"body": {
													"nativeSrc": "6988:437:8",
													"nodeType": "YulBlock",
													"src": "6988:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7021:398:8",
																"nodeType": "YulBlock",
																"src": "7021:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7042:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7042:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "7045:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7045:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7035:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7035:6:8"
																			},
																			"nativeSrc": "7035:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7035:16:8"
																		},
																		"nativeSrc": "7035:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7035:16:8"
																	},
																	{
																		"nativeSrc": "7064:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7064:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7086:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7086:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7089:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7089:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "7076:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7076:9:8"
																			},
																			"nativeSrc": "7076:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7076:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "7068:4:8",
																				"nodeType": "YulTypedName",
																				"src": "7068:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7107:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7107:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "7130:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7130:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7140:1:8",
																							"nodeType": "YulLiteral",
																							"src": "7140:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "7147:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "7147:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7159:2:8",
																									"nodeType": "YulLiteral",
																									"src": "7159:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7143:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "7143:3:8"
																							},
																							"nativeSrc": "7143:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7143:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "7136:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7136:3:8"
																					},
																					"nativeSrc": "7136:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7136:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7126:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7126:3:8"
																			},
																			"nativeSrc": "7126:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7126:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7111:11:8",
																				"nodeType": "YulTypedName",
																				"src": "7111:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7201:23:8",
																			"nodeType": "YulBlock",
																			"src": "7201:23:8",
																			"statements": [
																				{
																					"nativeSrc": "7203:19:8",
																					"nodeType": "YulAssignment",
																					"src": "7203:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "7218:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "7218:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7203:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "7203:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7183:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "7183:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7195:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7195:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7180:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7180:2:8"
																			},
																			"nativeSrc": "7180:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7180:20:8"
																		},
																		"nativeSrc": "7177:47:8",
																		"nodeType": "YulIf",
																		"src": "7177:47:8"
																	},
																	{
																		"nativeSrc": "7237:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7237:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "7251:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7251:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7261:1:8",
																							"nodeType": "YulLiteral",
																							"src": "7261:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7268:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7268:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7273:2:8",
																									"nodeType": "YulLiteral",
																									"src": "7273:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7264:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "7264:3:8"
																							},
																							"nativeSrc": "7264:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7264:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "7257:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7257:3:8"
																					},
																					"nativeSrc": "7257:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7257:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7247:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7247:3:8"
																			},
																			"nativeSrc": "7247:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7247:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "7241:2:8",
																				"nodeType": "YulTypedName",
																				"src": "7241:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7291:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7291:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "7304:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "7304:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "7295:5:8",
																				"nodeType": "YulTypedName",
																				"src": "7295:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7389:20:8",
																			"nodeType": "YulBlock",
																			"src": "7389:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "7398:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "7398:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7405:1:8",
																								"nodeType": "YulLiteral",
																								"src": "7405:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "7391:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "7391:6:8"
																						},
																						"nativeSrc": "7391:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7391:16:8"
																					},
																					"nativeSrc": "7391:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "7391:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7339:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7339:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "7346:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7346:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7336:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7336:2:8"
																			},
																			"nativeSrc": "7336:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7336:13:8"
																		},
																		"nativeSrc": "7328:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "7350:26:8",
																			"nodeType": "YulBlock",
																			"src": "7350:26:8",
																			"statements": [
																				{
																					"nativeSrc": "7352:22:8",
																					"nodeType": "YulAssignment",
																					"src": "7352:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "7365:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "7365:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7372:1:8",
																								"nodeType": "YulLiteral",
																								"src": "7372:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7361:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7361:3:8"
																						},
																						"nativeSrc": "7361:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7361:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "7352:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "7352:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "7332:3:8",
																			"nodeType": "YulBlock",
																			"src": "7332:3:8",
																			"statements": []
																		},
																		"src": "7328:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7004:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7004:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7009:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7009:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7001:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7001:2:8"
																},
																"nativeSrc": "7001:11:8",
																"nodeType": "YulFunctionCall",
																"src": "7001:11:8"
															},
															"nativeSrc": "6998:421:8",
															"nodeType": "YulIf",
															"src": "6998:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "6907:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6960:5:8",
														"nodeType": "YulTypedName",
														"src": "6960:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6967:3:8",
														"nodeType": "YulTypedName",
														"src": "6967:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6972:10:8",
														"nodeType": "YulTypedName",
														"src": "6972:10:8",
														"type": ""
													}
												],
												"src": "6907:518:8"
											},
											{
												"body": {
													"nativeSrc": "7515:81:8",
													"nodeType": "YulBlock",
													"src": "7515:81:8",
													"statements": [
														{
															"nativeSrc": "7525:65:8",
															"nodeType": "YulAssignment",
															"src": "7525:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7540:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7540:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7558:1:8",
																										"nodeType": "YulLiteral",
																										"src": "7558:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "7561:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "7561:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "7554:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7554:3:8"
																								},
																								"nativeSrc": "7554:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7554:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7571:1:8",
																										"nodeType": "YulLiteral",
																										"src": "7571:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "7567:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7567:3:8"
																								},
																								"nativeSrc": "7567:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7567:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7550:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7550:3:8"
																						},
																						"nativeSrc": "7550:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7550:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7546:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7546:3:8"
																				},
																				"nativeSrc": "7546:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7546:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7536:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7536:3:8"
																		},
																		"nativeSrc": "7536:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7582:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7582:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7585:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7585:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7578:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7578:3:8"
																		},
																		"nativeSrc": "7578:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7578:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7533:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7533:2:8"
																},
																"nativeSrc": "7533:57:8",
																"nodeType": "YulFunctionCall",
																"src": "7533:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7525:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7525:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7430:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7492:4:8",
														"nodeType": "YulTypedName",
														"src": "7492:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7498:3:8",
														"nodeType": "YulTypedName",
														"src": "7498:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7506:4:8",
														"nodeType": "YulTypedName",
														"src": "7506:4:8",
														"type": ""
													}
												],
												"src": "7430:166:8"
											},
											{
												"body": {
													"nativeSrc": "7697:1203:8",
													"nodeType": "YulBlock",
													"src": "7697:1203:8",
													"statements": [
														{
															"nativeSrc": "7707:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7707:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7727:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7727:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7721:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7721:5:8"
																},
																"nativeSrc": "7721:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7721:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7711:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7711:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7774:22:8",
																"nodeType": "YulBlock",
																"src": "7774:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7776:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7776:16:8"
																			},
																			"nativeSrc": "7776:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7776:18:8"
																		},
																		"nativeSrc": "7776:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7776:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7746:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7746:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7754:18:8",
																		"nodeType": "YulLiteral",
																		"src": "7754:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7743:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7743:2:8"
																},
																"nativeSrc": "7743:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7743:30:8"
															},
															"nativeSrc": "7740:56:8",
															"nodeType": "YulIf",
															"src": "7740:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7849:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7849:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7887:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "7887:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7881:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7881:5:8"
																				},
																				"nativeSrc": "7881:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7881:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "7855:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "7855:25:8"
																		},
																		"nativeSrc": "7855:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7855:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7895:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7895:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "7805:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7805:43:8"
																},
																"nativeSrc": "7805:97:8",
																"nodeType": "YulFunctionCall",
																"src": "7805:97:8"
															},
															"nativeSrc": "7805:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "7805:97:8"
														},
														{
															"nativeSrc": "7911:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7911:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7928:1:8",
																"nodeType": "YulLiteral",
																"src": "7928:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7915:9:8",
																	"nodeType": "YulTypedName",
																	"src": "7915:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7938:17:8",
															"nodeType": "YulAssignment",
															"src": "7938:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7951:4:8",
																"nodeType": "YulLiteral",
																"src": "7951:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7938:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7938:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8001:642:8",
																		"nodeType": "YulBlock",
																		"src": "8001:642:8",
																		"statements": [
																			{
																				"nativeSrc": "8015:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8015:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8034:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8034:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8046:2:8",
																									"nodeType": "YulLiteral",
																									"src": "8046:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8042:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8042:3:8"
																							},
																							"nativeSrc": "8042:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8042:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8030:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8030:3:8"
																					},
																					"nativeSrc": "8030:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8030:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8019:7:8",
																						"nodeType": "YulTypedName",
																						"src": "8019:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8063:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8063:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8107:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8107:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "8077:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "8077:29:8"
																					},
																					"nativeSrc": "8077:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8077:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8067:6:8",
																						"nodeType": "YulTypedName",
																						"src": "8067:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8125:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8125:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8134:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8134:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8129:1:8",
																						"nodeType": "YulTypedName",
																						"src": "8129:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8205:165:8",
																					"nodeType": "YulBlock",
																					"src": "8205:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8230:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8230:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8248:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "8248:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8253:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "8253:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8244:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8244:3:8"
																												},
																												"nativeSrc": "8244:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8244:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8238:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "8238:5:8"
																										},
																										"nativeSrc": "8238:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8238:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8223:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8223:6:8"
																								},
																								"nativeSrc": "8223:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8223:42:8"
																							},
																							"nativeSrc": "8223:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8223:42:8"
																						},
																						{
																							"nativeSrc": "8282:24:8",
																							"nodeType": "YulAssignment",
																							"src": "8282:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8296:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8296:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8304:1:8",
																										"nodeType": "YulLiteral",
																										"src": "8304:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8292:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8292:3:8"
																								},
																								"nativeSrc": "8292:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8292:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8282:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8282:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8323:33:8",
																							"nodeType": "YulAssignment",
																							"src": "8323:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8340:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "8340:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8351:4:8",
																										"nodeType": "YulLiteral",
																										"src": "8351:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8336:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8336:3:8"
																								},
																								"nativeSrc": "8336:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8336:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8323:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "8323:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8159:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "8159:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8162:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8162:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8156:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8156:2:8"
																					},
																					"nativeSrc": "8156:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8156:14:8"
																				},
																				"nativeSrc": "8148:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8171:21:8",
																					"nodeType": "YulBlock",
																					"src": "8171:21:8",
																					"statements": [
																						{
																							"nativeSrc": "8173:17:8",
																							"nodeType": "YulAssignment",
																							"src": "8173:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8182:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "8182:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8185:4:8",
																										"nodeType": "YulLiteral",
																										"src": "8185:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8178:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8178:3:8"
																								},
																								"nativeSrc": "8178:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8178:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8173:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "8173:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8152:3:8",
																					"nodeType": "YulBlock",
																					"src": "8152:3:8",
																					"statements": []
																				},
																				"src": "8148:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "8418:166:8",
																					"nodeType": "YulBlock",
																					"src": "8418:166:8",
																					"statements": [
																						{
																							"nativeSrc": "8436:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8436:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8463:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8463:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8468:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8468:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8459:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8459:3:8"
																										},
																										"nativeSrc": "8459:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8459:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8453:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8453:5:8"
																								},
																								"nativeSrc": "8453:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8453:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8440:9:8",
																									"nodeType": "YulTypedName",
																									"src": "8440:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8503:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8503:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8515:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8515:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "8542:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "8542:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "8545:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "8545:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "8538:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "8538:3:8"
																																		},
																																		"nativeSrc": "8538:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "8538:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "8554:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "8554:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "8534:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "8534:3:8"
																																},
																																"nativeSrc": "8534:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "8534:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "8564:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "8564:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "8560:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "8560:3:8"
																																},
																																"nativeSrc": "8560:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "8560:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "8530:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "8530:3:8"
																														},
																														"nativeSrc": "8530:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "8530:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "8526:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8526:3:8"
																												},
																												"nativeSrc": "8526:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8526:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "8511:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8511:3:8"
																										},
																										"nativeSrc": "8511:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8511:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8496:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8496:6:8"
																								},
																								"nativeSrc": "8496:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8496:74:8"
																							},
																							"nativeSrc": "8496:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8496:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8389:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8389:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8398:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8398:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8386:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8386:2:8"
																					},
																					"nativeSrc": "8386:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8386:19:8"
																				},
																				"nativeSrc": "8383:201:8",
																				"nodeType": "YulIf",
																				"src": "8383:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8604:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8604:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8618:1:8",
																											"nodeType": "YulLiteral",
																											"src": "8618:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "8621:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "8621:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "8614:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "8614:3:8"
																									},
																									"nativeSrc": "8614:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "8614:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8630:1:8",
																									"nodeType": "YulLiteral",
																									"src": "8630:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8610:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8610:3:8"
																							},
																							"nativeSrc": "8610:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8610:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8597:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8597:6:8"
																					},
																					"nativeSrc": "8597:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8597:36:8"
																				},
																				"nativeSrc": "8597:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8597:36:8"
																			}
																		]
																	},
																	"nativeSrc": "7994:649:8",
																	"nodeType": "YulCase",
																	"src": "7994:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7999:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7999:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8660:234:8",
																		"nodeType": "YulBlock",
																		"src": "8660:234:8",
																		"statements": [
																			{
																				"nativeSrc": "8674:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8674:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8687:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8687:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8678:5:8",
																						"nodeType": "YulTypedName",
																						"src": "8678:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8723:67:8",
																					"nodeType": "YulBlock",
																					"src": "8723:67:8",
																					"statements": [
																						{
																							"nativeSrc": "8741:35:8",
																							"nodeType": "YulAssignment",
																							"src": "8741:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8760:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8760:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8765:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8765:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8756:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8756:3:8"
																										},
																										"nativeSrc": "8756:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8756:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8750:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8750:5:8"
																								},
																								"nativeSrc": "8750:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8750:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8741:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8741:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8704:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8704:6:8"
																				},
																				"nativeSrc": "8701:89:8",
																				"nodeType": "YulIf",
																				"src": "8701:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8810:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8810:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8869:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8869:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8876:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8876:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8816:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "8816:52:8"
																							},
																							"nativeSrc": "8816:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8816:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8803:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8803:6:8"
																					},
																					"nativeSrc": "8803:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8803:81:8"
																				},
																				"nativeSrc": "8803:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8803:81:8"
																			}
																		]
																	},
																	"nativeSrc": "8652:242:8",
																	"nodeType": "YulCase",
																	"src": "8652:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7974:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7974:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7982:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7982:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7971:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7971:2:8"
																},
																"nativeSrc": "7971:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7971:14:8"
															},
															"nativeSrc": "7964:930:8",
															"nodeType": "YulSwitch",
															"src": "7964:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7601:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7682:4:8",
														"nodeType": "YulTypedName",
														"src": "7682:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7688:3:8",
														"nodeType": "YulTypedName",
														"src": "7688:3:8",
														"type": ""
													}
												],
												"src": "7601:1299:8"
											},
											{
												"body": {
													"nativeSrc": "9079:165:8",
													"nodeType": "YulBlock",
													"src": "9079:165:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9096:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9096:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9107:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9107:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9089:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:8"
																},
																"nativeSrc": "9089:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9089:21:8"
															},
															"nativeSrc": "9089:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9089:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9130:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9130:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9141:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9141:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9126:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9126:3:8"
																		},
																		"nativeSrc": "9126:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9146:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9119:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9119:6:8"
																},
																"nativeSrc": "9119:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9119:30:8"
															},
															"nativeSrc": "9119:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9119:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9169:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9169:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9180:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9180:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9165:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9165:3:8"
																		},
																		"nativeSrc": "9165:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9165:18:8"
																	},
																	{
																		"hexValue": "55736572206e6f7420666f756e6421",
																		"kind": "string",
																		"nativeSrc": "9185:17:8",
																		"nodeType": "YulLiteral",
																		"src": "9185:17:8",
																		"type": "",
																		"value": "User not found!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9158:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9158:6:8"
																},
																"nativeSrc": "9158:45:8",
																"nodeType": "YulFunctionCall",
																"src": "9158:45:8"
															},
															"nativeSrc": "9158:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "9158:45:8"
														},
														{
															"nativeSrc": "9212:26:8",
															"nodeType": "YulAssignment",
															"src": "9212:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9224:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9224:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9235:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9235:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9220:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9220:3:8"
																},
																"nativeSrc": "9220:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9220:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9212:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9212:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8905:339:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9056:9:8",
														"nodeType": "YulTypedName",
														"src": "9056:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9070:4:8",
														"nodeType": "YulTypedName",
														"src": "9070:4:8",
														"type": ""
													}
												],
												"src": "8905:339:8"
											},
											{
												"body": {
													"nativeSrc": "9423:223:8",
													"nodeType": "YulBlock",
													"src": "9423:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9440:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9440:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9451:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9451:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9433:6:8"
																},
																"nativeSrc": "9433:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9433:21:8"
															},
															"nativeSrc": "9433:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9433:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9474:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9474:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9485:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9485:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9470:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9470:3:8"
																		},
																		"nativeSrc": "9470:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9470:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9490:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9490:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9463:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9463:6:8"
																},
																"nativeSrc": "9463:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9463:30:8"
															},
															"nativeSrc": "9463:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9463:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9513:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9513:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9524:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9509:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9509:3:8"
																		},
																		"nativeSrc": "9509:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9509:18:8"
																	},
																	{
																		"hexValue": "4d696e696d756d206465706f73697420616d6f756e7420697320302e30303033",
																		"kind": "string",
																		"nativeSrc": "9529:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9529:34:8",
																		"type": "",
																		"value": "Minimum deposit amount is 0.0003"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9502:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9502:6:8"
																},
																"nativeSrc": "9502:62:8",
																"nodeType": "YulFunctionCall",
																"src": "9502:62:8"
															},
															"nativeSrc": "9502:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "9502:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9584:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9584:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9595:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9595:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9580:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9580:3:8"
																		},
																		"nativeSrc": "9580:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9580:18:8"
																	},
																	{
																		"hexValue": "38",
																		"kind": "string",
																		"nativeSrc": "9600:3:8",
																		"nodeType": "YulLiteral",
																		"src": "9600:3:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9573:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9573:6:8"
																},
																"nativeSrc": "9573:31:8",
																"nodeType": "YulFunctionCall",
																"src": "9573:31:8"
															},
															"nativeSrc": "9573:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "9573:31:8"
														},
														{
															"nativeSrc": "9613:27:8",
															"nodeType": "YulAssignment",
															"src": "9613:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9625:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9625:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9636:3:8",
																		"nodeType": "YulLiteral",
																		"src": "9636:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9621:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:8"
																},
																"nativeSrc": "9621:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9621:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9613:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9613:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9249:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9400:9:8",
														"nodeType": "YulTypedName",
														"src": "9400:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9414:4:8",
														"nodeType": "YulTypedName",
														"src": "9414:4:8",
														"type": ""
													}
												],
												"src": "9249:397:8"
											},
											{
												"body": {
													"nativeSrc": "9699:77:8",
													"nodeType": "YulBlock",
													"src": "9699:77:8",
													"statements": [
														{
															"nativeSrc": "9709:16:8",
															"nodeType": "YulAssignment",
															"src": "9709:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9720:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9720:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9723:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9723:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9716:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:8"
																},
																"nativeSrc": "9716:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9716:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9709:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9709:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9748:22:8",
																"nodeType": "YulBlock",
																"src": "9748:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9750:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9750:16:8"
																			},
																			"nativeSrc": "9750:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9750:18:8"
																		},
																		"nativeSrc": "9750:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9750:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9740:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9740:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9743:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9743:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9737:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9737:2:8"
																},
																"nativeSrc": "9737:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9737:10:8"
															},
															"nativeSrc": "9734:36:8",
															"nodeType": "YulIf",
															"src": "9734:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9651:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9682:1:8",
														"nodeType": "YulTypedName",
														"src": "9682:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9685:1:8",
														"nodeType": "YulTypedName",
														"src": "9685:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9691:3:8",
														"nodeType": "YulTypedName",
														"src": "9691:3:8",
														"type": ""
													}
												],
												"src": "9651:125:8"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value)\n        value1 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Status_$1018__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_User_$1014_memory_ptr__to_t_struct$_User_$1014_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), and(mload(value0), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value0, 32))\n        mstore(add(headStart, 64), 0x60)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 128))\n        mstore(add(headStart, 0x60), mload(add(value0, 64)))\n        tail := tail_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_JVCToken_$974__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"This is a contract address!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Withdrawal amount exceeds limit\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"User already registered!\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"User not found!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Minimum deposit amount is 0.0003\")\n        mstore(add(headStart, 96), \"8\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610099575f3560e01c8063715018a611610062578063715018a61461014b5780638da5cb5b1461015f578063a87430ba14610190578063d0e30db0146101be578063f2fde38b146101c6578063fc0c546a146101e5575f80fd5b8062f714ce1461009d5780630e54b872146100b2578063200d2ed2146100d15780634bff50091461010057806369c212f61461012c575b5f80fd5b6100b06100ab3660046108ff565b610203565b005b3480156100bd575f80fd5b506100b06100cc3660046109cc565b610388565b3480156100dc575f80fd5b506005546100ea9060ff1681565b6040516100f79190610a10565b60405180910390f35b34801561010b575f80fd5b5061011f61011a366004610a36565b61046a565b6040516100f79190610a9e565b348015610137575f80fd5b5061011f610146366004610ae1565b6105c5565b348015610156575f80fd5b506100b061065b565b34801561016a575f80fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016100f7565b34801561019b575f80fd5b506101af6101aa366004610ae1565b61066e565b6040516100f793929190610b03565b6100b0610720565b3480156101d1575f80fd5b506100b06101e0366004610ae1565b610833565b3480156101f0575f80fd5b505f54610178906001600160a01b031681565b33803b1561022c5760405162461bcd60e51b815260040161022390610b36565b60405180910390fd5b6001600160a01b0382165f908152600260208190526040909120015483111561028e5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610223565b6004548311156102e05760405162461bcd60e51b815260206004820152601f60248201527f5769746864726177616c20616d6f756e742065786365656473206c696d6974006044820152606401610223565b6001600160a01b0382165f908152600260208190526040822001805485929061030a908490610b81565b90915550506040516001600160a01b0383169084156108fc029085905f818181858888f19350505050158015610342573d5f803e3d5ffd5b5060405183815233906001600160a01b038416907f46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d9060200160405180910390a3505050565b6001600160a01b0381165f90815260026020526040902060010180546103ad90610b9a565b1590506103fc5760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642100000000000000006044820152606401610223565b604080516060810182526001600160a01b0383811680835260208084018781525f8587018190529283526002909152939020825181546001600160a01b0319169216919091178155915190919060018201906104589082610c18565b50604082015181600201559050505050565b61049560405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b335f90815260026020526040902060010180548391906104b490610b9a565b90505f036104f65760405162461bcd60e51b815260206004820152600f60248201526e55736572206e6f7420666f756e642160881b6044820152606401610223565b335f9081526002602090815260409182902082516060810190935280546001600160a01b03168352600181018054919284019161053290610b9a565b80601f016020809104026020016040519081016040528092919081815260200182805461055e90610b9a565b80156105a95780601f10610580576101008083540402835291602001916105a9565b820191905f5260205f20905b81548152906001019060200180831161058c57829003601f168201915b5050505050815260200160028201548152505091505b50919050565b6105f060405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b816001600160a01b0381163b156106195760405162461bcd60e51b815260040161022390610b36565b6001600160a01b038084165f90815260026020908152604091829020825160608101909352805490931682526001830180549293929184019161053290610b9a565b61066361086d565b61066c5f61089a565b565b60026020525f9081526040902080546001820180546001600160a01b03909216929161069990610b9a565b80601f01602080910402602001604051908101604052809291908181526020018280546106c590610b9a565b80156107105780601f106106e757610100808354040283529160200191610710565b820191905f5260205f20905b8154815290600101906020018083116106f357829003601f168201915b5050505050908060020154905083565b33803b156107405760405162461bcd60e51b815260040161022390610b36565b6003543410156107cb576005805460ff191660011790556040805160208082526021908201527f4d696e696d756d206465706f73697420616d6f756e7420697320302e3030303391810191909152600760fb1b606082015233907fa8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5906080015b60405180910390a250565b335f90815260026020819052604082200180543492906107ec908490610cd3565b90915550506005805460ff1916600217905560405134815233907fb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5906020016107c0565b50565b61083b61086d565b6001600160a01b03811661086457604051631e4fbdf760e01b81525f6004820152602401610223565b6108308161089a565b6001546001600160a01b0316331461066c5760405163118cdaa760e01b8152336004820152602401610223565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0381168114610830575f80fd5b5f8060408385031215610910575f80fd5b823591506020830135610922816108eb565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610950575f80fd5b813567ffffffffffffffff81111561096a5761096a61092d565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156109995761099961092d565b6040528181528382016020018510156109b0575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156109dd575f80fd5b823567ffffffffffffffff8111156109f3575f80fd5b6109ff85828601610941565b9250506020830135610922816108eb565b6020810160038310610a3057634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215610a46575f80fd5b813567ffffffffffffffff811115610a5c575f80fd5b610a6884828501610941565b949350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602080825282516001600160a01b031682820152820151606060408301525f90610acb6080840182610a70565b9050604084015160608401528091505092915050565b5f60208284031215610af1575f80fd5b8135610afc816108eb565b9392505050565b6001600160a01b03841681526060602082018190525f90610b2690830185610a70565b9050826040830152949350505050565b6020808252601b908201527f54686973206973206120636f6e74726163742061646472657373210000000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610b9457610b94610b6d565b92915050565b600181811c90821680610bae57607f821691505b6020821081036105bf57634e487b7160e01b5f52602260045260245ffd5b601f821115610c1357805f5260205f20601f840160051c81016020851015610bf15750805b601f840160051c820191505b81811015610c10575f8155600101610bfd565b50505b505050565b815167ffffffffffffffff811115610c3257610c3261092d565b610c4681610c408454610b9a565b84610bcc565b6020601f821160018114610c78575f8315610c615750848201515b5f19600385901b1c1916600184901b178455610c10565b5f84815260208120601f198516915b82811015610ca75787850151825560209485019460019092019101610c87565b5084821015610cc457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b80820180821115610b9457610b94610b6d56fea2646970667358221220ecc1ccb657a7f62546a9d1e88013d12ac1cd9285f3b1a14d6def4b262b09430d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xE54B872 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4BFF5009 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x69C212F6 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x203 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0xEA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x65B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x178 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 GT ISZERO PUSH2 0x28E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E742065786365656473206C696D697400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x30A SWAP1 DUP5 SWAP1 PUSH2 0xB81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x46B6C03A6ED8406EDA01806AB6D408E07129555FDA5275B7F67E3A255F2D7A0D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0xB9A JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792072656769737465726564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH0 DUP6 DUP8 ADD DUP2 SWAP1 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x458 SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH2 0x495 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH2 0x4B4 SWAP1 PUSH2 0xB9A JUMP JUMPDEST SWAP1 POP PUSH0 SUB PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206E6F7420666F756E6421 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x532 SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x532 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x663 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x66C PUSH0 PUSH2 0x89A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x699 SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C5 SWAP1 PUSH2 0xB9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x710 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x710 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206465706F73697420616D6F756E7420697320302E30303033 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xA8B9F7931AC94CF9850ACCD175CF4543FAC81AE93865D1670E14213829F67DE5 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x7EC SWAP1 DUP5 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xB3EF81558ED1A50072A492984535A009DA8B129C749500B387F1E5F4886BDDE5 SWAP1 PUSH1 0x20 ADD PUSH2 0x7C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x830 DUP2 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x830 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x910 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x922 DUP2 PUSH2 0x8EB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x950 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96A JUMPI PUSH2 0x96A PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x9B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9DD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FF DUP6 DUP3 DUP7 ADD PUSH2 0x941 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x922 DUP2 PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xA30 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA68 DUP5 DUP3 DUP6 ADD PUSH2 0x941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH0 SWAP1 PUSH2 0xACB PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFC DUP2 PUSH2 0x8EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xB26 SWAP1 DUP4 ADD DUP6 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206973206120636F6E74726163742061646472657373210000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0xB6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xBAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xC13 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xBF1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC10 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBFD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC32 PUSH2 0x92D JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xC40 DUP5 SLOAD PUSH2 0xB9A JUMP JUMPDEST DUP5 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC78 JUMPI PUSH0 DUP4 ISZERO PUSH2 0xC61 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xC10 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xC87 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0xCC4 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0xB6D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xC1 0xCC 0xB6 JUMPI 0xA7 0xF6 0x25 CHAINID 0xA9 0xD1 0xE8 DUP1 SGT 0xD1 0x2A 0xC1 0xCD SWAP3 DUP6 RETURN 0xB1 LOG1 0x4D PUSH14 0xEF4B262B09430D64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "156:5725:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5188:476;;;;;;:::i;:::-;;:::i;:::-;;3937:262;;;;;;;;;;-1:-1:-1;3937:262:7;;;;;:::i;:::-;;:::i;974:20::-;;;;;;;;;;-1:-1:-1;974:20:7;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4453:178;;;;;;;;;;-1:-1:-1;4453:178:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4234:183::-;;;;;;;;;;-1:-1:-1;4234:183:7;;;;;:::i;:::-;;:::i;3114:101::-;;;;;;;;;;;;;:::i;2481:85::-;;;;;;;;;;-1:-1:-1;2553:6:7;;-1:-1:-1;;;;;2553:6:7;2481:85;;;-1:-1:-1;;;;;3870:32:8;;;3852:51;;3840:2;3825:18;2481:85:7;3706:203:8;345:37:7;;;;;;;;;;-1:-1:-1;345:37:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;4673:470::-;;;:::i;3359:215::-;;;;;;;;;;-1:-1:-1;3359:215:7;;;;;:::i;:::-;;:::i;256:21::-;;;;;;;;;;-1:-1:-1;256:21:7;;;;-1:-1:-1;;;;;256:21:7;;;5188:476;5294:10;5851:17;;:21;1831:96;;;;-1:-1:-1;;;1831:96:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;5351:11:7;::::1;;::::0;;;:5:::1;:11;::::0;;;;;;;:19:::1;::::0;5341:29;::::1;;5320:96;;;::::0;-1:-1:-1;;;5320:96:7;;5089:2:8;5320:96:7::1;::::0;::::1;5071:21:8::0;5128:2;5108:18;;;5101:30;-1:-1:-1;;;5147:18:8;;;5140:50;5207:18;;5320:96:7::1;4887:344:8::0;5320:96:7::1;5457:11;;5447:6;:21;;5426:99;;;::::0;-1:-1:-1;;;5426:99:7;;5438:2:8;5426:99:7::1;::::0;::::1;5420:21:8::0;5477:2;5457:18;;;5450:30;5516:33;5496:18;;;5489:61;5567:18;;5426:99:7::1;5236:355:8::0;5426:99:7::1;-1:-1:-1::0;;;;;5536:11:7;::::1;;::::0;;;:5:::1;:11;::::0;;;;;;:19:::1;:29:::0;;5559:6;;5536:11;:29:::1;::::0;5559:6;;5536:29:::1;:::i;:::-;::::0;;;-1:-1:-1;;5575:21:7::1;::::0;-1:-1:-1;;;;;5575:13:7;::::1;::::0;:21;::::1;;;::::0;5589:6;;5575:21:::1;::::0;;;5589:6;5575:13;:21;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5611:46:7::1;::::0;6007:25:8;;;5638:10:7::1;::::0;-1:-1:-1;;;;;5611:46:7;::::1;::::0;::::1;::::0;5995:2:8;5980:18;5611:46:7::1;;;;;;;5188:476:::0;;;:::o;3937:262::-;-1:-1:-1;;;;;4068:11:7;;;;;;:5;:11;;;;;:17;;4062:31;;;;;:::i;:::-;:36;;-1:-1:-1;4041:107:7;;;;-1:-1:-1;;;4041:107:7;;6630:2:8;4041:107:7;;;6612:21:8;6669:2;6649:18;;;6642:30;6708:26;6688:18;;;6681:54;6752:18;;4041:107:7;6428:348:8;4041:107:7;4172:20;;;;;;;;-1:-1:-1;;;;;4172:20:7;;;;;;;;;;;;;-1:-1:-1;4172:20:7;;;;;;4158:11;;;:5;:11;;;;;;:34;;;;-1:-1:-1;;;;;;4158:34:7;;;;;;;;;;;4172:20;;4158:11;-1:-1:-1;4158:34:7;;;;;;;:::i;:::-;;;;;;;;;;;;;3937:262;;:::o;4453:178::-;4573:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4573:11:7;2071:10;2065:17;;;;:5;:17;;;;;:23;;2059:37;;4549:5;;2065:23;2059:37;;;:::i;:::-;;;2100:1;2059:42;2038:104;;;;-1:-1:-1;;;2038:104:7;;9107:2:8;2038:104:7;;;9089:21:8;9146:2;9126:18;;;9119:30;-1:-1:-1;;;9165:18:8;;;9158:45;9220:18;;2038:104:7;8905:339:8;2038:104:7;4613:10:::1;4607:17;::::0;;;:5:::1;:17;::::0;;;;;;;;4600:24;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;4600:24:7::1;::::0;;;;::::1;::::0;;4607:17;;4600:24;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2152:1;4453:178:::0;;;;:::o;4234:183::-;4358:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4358:11:7;4328;-1:-1:-1;;;;;5851:17:7;;;:21;1831:96;;;;-1:-1:-1;;;1831:96:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;4392:18:7;;::::1;;::::0;;;:5:::1;:18;::::0;;;;;;;;4385:25;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;;;4392:18;4385:25;;::::1;::::0;::::1;::::0;::::1;:::i;3114:101::-:0;1650:13;:11;:13::i;:::-;3178:30:::1;3205:1;3178:18;:30::i;:::-;3114:101::o:0;345:37::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;345:37:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4673:470::-;4742:10;5851:17;;:21;1831:96;;;;-1:-1:-1;;;1831:96:7;;;;;;;:::i;:::-;4784:9:::1;;4772;:21;4768:369;;;4809:6;:22:::0;;-1:-1:-1;;4809:22:7::1;4818:13;4809:22;::::0;;4850:108:::1;::::0;;9451:2:8;9433:21;;;9490:2;9470:18;;;9463:30;9529:34;9509:18;;;9502:62;;;;-1:-1:-1;;;9595:2:8;9580:18;;9573:31;4881:10:7::1;::::0;4850:108:::1;::::0;9636:3:8;9621:19;4850:108:7::1;;;;;;;;4673:470:::0;:::o;4768:369::-:1;4995:10;4989:17;::::0;;;:5:::1;:17;::::0;;;;;;:25:::1;:38:::0;;5018:9:::1;::::0;4989:17;:38:::1;::::0;5018:9;;4989:38:::1;:::i;:::-;::::0;;;-1:-1:-1;;5041:6:7::1;:26:::0;;-1:-1:-1;;5041:26:7::1;5050:17;5041:26;::::0;;5086:40:::1;::::0;5116:9:::1;6007:25:8::0;;5104:10:7::1;::::0;5086:40:::1;::::0;5995:2:8;5980:18;5086:40:7::1;5861:177:8::0;4768:369:7::1;4673:470:::0;:::o;3359:215::-;1650:13;:11;:13::i;:::-;-1:-1:-1;;;;;3443:22:7;::::1;3439:91;;3488:31;::::0;-1:-1:-1;;;3488:31:7;;3516:1:::1;3488:31;::::0;::::1;3852:51:8::0;3825:18;;3488:31:7::1;3706:203:8::0;3439:91:7::1;3539:28;3558:8;3539:18;:28::i;2622:162::-:0;2553:6;;-1:-1:-1;;;;;2553:6:7;735:10:5;2681:23:7;2677:101;;2727:40;;-1:-1:-1;;;2727:40:7;;735:10:5;2727:40:7;;;3852:51:8;3825:18;;2727:40:7;3706:203:8;3722:187:7;3814:6;;;-1:-1:-1;;;;;3830:17:7;;;-1:-1:-1;;;;;;3830:17:7;;;;;;;3862:40;;3814:6;;;3830:17;3814:6;;3862:40;;3795:16;;3862:40;3785:124;3722:187;:::o;14:139:8:-;-1:-1:-1;;;;;97:31:8;;87:42;;77:70;;143:1;140;133:12;158:331;234:6;242;295:2;283:9;274:7;270:23;266:32;263:52;;;311:1;308;301:12;263:52;347:9;334:23;324:33;;407:2;396:9;392:18;379:32;420:39;453:5;420:39;:::i;:::-;478:5;468:15;;;158:331;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:726;669:5;722:3;715:4;707:6;703:17;699:27;689:55;;740:1;737;730:12;689:55;780:6;767:20;810:18;802:6;799:30;796:56;;;832:18;;:::i;:::-;881:2;875:9;973:2;935:17;;-1:-1:-1;;931:31:8;;;964:2;927:40;923:54;911:67;;1008:18;993:34;;1029:22;;;990:62;987:88;;;1055:18;;:::i;:::-;1091:2;1084:22;1115;;;1156:19;;;1177:4;1152:30;1149:39;-1:-1:-1;1146:59:8;;;1201:1;1198;1191:12;1146:59;1265:6;1258:4;1250:6;1246:17;1239:4;1231:6;1227:17;1214:58;1320:1;1292:19;;;1313:4;1288:30;1281:41;;;;1296:6;626:726;-1:-1:-1;;;626:726:8:o;1357:473::-;1443:6;1451;1504:2;1492:9;1483:7;1479:23;1475:32;1472:52;;;1520:1;1517;1510:12;1472:52;1560:9;1547:23;1593:18;1585:6;1582:30;1579:50;;;1625:1;1622;1615:12;1579:50;1648;1690:7;1681:6;1670:9;1666:22;1648:50;:::i;:::-;1638:60;;;1748:2;1737:9;1733:18;1720:32;1761:39;1794:5;1761:39;:::i;1967:339::-;2110:2;2095:18;;2143:1;2132:13;;2122:144;;2188:10;2183:3;2179:20;2176:1;2169:31;2223:4;2220:1;2213:15;2251:4;2248:1;2241:15;2122:144;2275:25;;;1967:339;:::o;2311:322::-;2380:6;2433:2;2421:9;2412:7;2408:23;2404:32;2401:52;;;2449:1;2446;2439:12;2401:52;2489:9;2476:23;2522:18;2514:6;2511:30;2508:50;;;2554:1;2551;2544:12;2508:50;2577;2619:7;2610:6;2599:9;2595:22;2577:50;:::i;:::-;2567:60;2311:322;-1:-1:-1;;;;2311:322:8:o;2638:289::-;2680:3;2718:5;2712:12;2745:6;2740:3;2733:19;2801:6;2794:4;2787:5;2783:16;2776:4;2771:3;2767:14;2761:47;2853:1;2846:4;2837:6;2832:3;2828:16;2824:27;2817:38;2916:4;2909:2;2905:7;2900:2;2892:6;2888:15;2884:29;2879:3;2875:39;2871:50;2864:57;;;2638:289;;;;:::o;2932:509::-;3105:2;3087:21;;;3148:13;;-1:-1:-1;;;;;3144:39:8;3124:18;;;3117:67;3219:15;;3213:22;3271:4;3266:2;3251:18;;3244:32;-1:-1:-1;;3299:52:8;3346:3;3331:19;;3213:22;3299:52;:::i;:::-;3285:66;;3407:2;3399:6;3395:15;3389:22;3382:4;3371:9;3367:20;3360:52;3429:6;3421:14;;;2932:509;;;;:::o;3446:255::-;3505:6;3558:2;3546:9;3537:7;3533:23;3529:32;3526:52;;;3574:1;3571;3564:12;3526:52;3613:9;3600:23;3632:39;3665:5;3632:39;:::i;:::-;3690:5;3446:255;-1:-1:-1;;;3446:255:8:o;3914:388::-;-1:-1:-1;;;;;4119:32:8;;4101:51;;4188:2;4183;4168:18;;4161:30;;;-1:-1:-1;;4208:45:8;;4234:18;;4226:6;4208:45;:::i;:::-;4200:53;;4289:6;4284:2;4273:9;4269:18;4262:34;3914:388;;;;;;:::o;4531:351::-;4733:2;4715:21;;;4772:2;4752:18;;;4745:30;4811:29;4806:2;4791:18;;4784:57;4873:2;4858:18;;4531:351::o;5596:127::-;5657:10;5652:3;5648:20;5645:1;5638:31;5688:4;5685:1;5678:15;5712:4;5709:1;5702:15;5728:128;5795:9;;;5816:11;;;5813:37;;;5830:18;;:::i;:::-;5728:128;;;;:::o;6043:380::-;6122:1;6118:12;;;;6165;;;6186:61;;6240:4;6232:6;6228:17;6218:27;;6186:61;6293:2;6285:6;6282:14;6262:18;6259:38;6256:161;;6339:10;6334:3;6330:20;6327:1;6320:31;6374:4;6371:1;6364:15;6402:4;6399:1;6392:15;6907:518;7009:2;7004:3;7001:11;6998:421;;;7045:5;7042:1;7035:16;7089:4;7086:1;7076:18;7159:2;7147:10;7143:19;7140:1;7136:27;7130:4;7126:38;7195:4;7183:10;7180:20;7177:47;;;-1:-1:-1;7218:4:8;7177:47;7273:2;7268:3;7264:12;7261:1;7257:20;7251:4;7247:31;7237:41;;7328:81;7346:2;7339:5;7336:13;7328:81;;;7405:1;7391:16;;7372:1;7361:13;7328:81;;;7332:3;;6998:421;6907:518;;;:::o;7601:1299::-;7727:3;7721:10;7754:18;7746:6;7743:30;7740:56;;;7776:18;;:::i;:::-;7805:97;7895:6;7855:38;7887:4;7881:11;7855:38;:::i;:::-;7849:4;7805:97;:::i;:::-;7951:4;7982:2;7971:14;;7999:1;7994:649;;;;8687:1;8704:6;8701:89;;;-1:-1:-1;8756:19:8;;;8750:26;8701:89;-1:-1:-1;;7558:1:8;7554:11;;;7550:24;7546:29;7536:40;7582:1;7578:11;;;7533:57;8803:81;;7964:930;;7994:649;6854:1;6847:14;;;6891:4;6878:18;;-1:-1:-1;;8030:20:8;;;8148:222;8162:7;8159:1;8156:14;8148:222;;;8244:19;;;8238:26;8223:42;;8351:4;8336:20;;;;8304:1;8292:14;;;;8178:12;8148:222;;;8152:3;8398:6;8389:7;8386:19;8383:201;;;8459:19;;;8453:26;-1:-1:-1;;8542:1:8;8538:14;;;8554:3;8534:24;8530:37;8526:42;8511:58;8496:74;;8383:201;-1:-1:-1;;;;8630:1:8;8614:14;;;8610:22;8597:36;;-1:-1:-1;7601:1299:8:o;9651:125::-;9716:9;;;9737:10;;;9734:36;;;9750:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "671200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit()": "54984",
								"getUserByAddress(address)": "infinite",
								"getUserByName(string)": "infinite",
								"owner()": "2341",
								"registerUser(string,address)": "infinite",
								"renounceOwnership()": "infinite",
								"status()": "2395",
								"token()": "2445",
								"transferOwnership(address)": "infinite",
								"users(address)": "infinite",
								"withdraw(uint256,address)": "infinite"
							},
							"internal": {
								"_checkOwner()": "infinite",
								"_transferOwnership(address)": "25823",
								"isContractAddr(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 156,
									"end": 5881,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 416,
									"end": 429,
									"name": "PUSH",
									"source": 7,
									"value": "1599BA503C000"
								},
								{
									"begin": 388,
									"end": 429,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 388,
									"end": 429,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 465,
									"end": 472,
									"name": "PUSH",
									"source": 7,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 435,
									"end": 472,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 435,
									"end": 472,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2166,
									"end": 2422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2279,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2279,
									"end": 2374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2361,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2363,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2279,
									"end": 2374,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2279,
									"end": 2374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2402,
									"end": 2414,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2383,
									"end": 2415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2415,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2383,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3722,
									"end": 3909,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 3722,
									"end": 3909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 3902,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3862,
									"end": 3902,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3847,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 3902,
									"name": "PUSH",
									"source": 7,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3862,
									"end": 3902,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3795,
									"end": 3811,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3795,
									"end": 3811,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 3902,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3722,
									"end": 3909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3722,
									"end": 3909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 5881,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ecc1ccb657a7f62546a9d1e88013d12ac1cd9285f3b1a14d6def4b262b09430d64736f6c634300081a0033",
									".code": [
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "A87430BA"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "D0E30DB0"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "F714CE"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "E54B872"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "200D2ED2"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "4BFF5009"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "69C212F6"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 156,
											"end": 5881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 5188,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5188,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3937,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3937,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 974,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 974,
											"end": 994,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 994,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4234,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4234,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3114,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3840,
											"end": 3842,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2481,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3706,
											"end": 3909,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 345,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 345,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 345,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4673,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3359,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3359,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 256,
											"end": 277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 256,
											"end": 277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 256,
											"end": 277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 277,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 256,
											"end": 277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 256,
											"end": 277,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5294,
											"end": 5304,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5868,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5872,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1831,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5351,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5370,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5370,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5370,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5370,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5370,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5416,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5320,
											"end": 5416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5091,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5320,
											"end": 5416,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5092,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5130,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 5108,
											"end": 5126,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5108,
											"end": 5126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5190,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4887,
											"end": 5231,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 5320,
											"end": 5416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5457,
											"end": 5468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5453,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5468,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5468,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5426,
											"end": 5525,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5426,
											"end": 5525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5440,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5426,
											"end": 5525,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5477,
											"end": 5479,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5450,
											"end": 5480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5549,
											"name": "PUSH",
											"source": 8,
											"value": "5769746864726177616C20616D6F756E742065786365656473206C696D697400"
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5550,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5236,
											"end": 5591,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5426,
											"end": 5525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5536,
											"end": 5547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5555,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5536,
											"end": 5565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5536,
											"end": 5565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5565,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5575,
											"end": 5588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5588,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5575,
											"end": 5596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5657,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6032,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5648,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5611,
											"end": 5657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "46B6C03A6ED8406EDA01806AB6D408E07129555FDA5275B7F67E3A255F2D7A0D"
										},
										{
											"begin": 5611,
											"end": 5657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5657,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4079,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4062,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4098,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6671,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "5573657220616C72656164792072656769737465726564210000000000000000"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6681,
											"end": 6735,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6752,
											"end": 6770,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6752,
											"end": 6770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6428,
											"end": 6776,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4041,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4163,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4158,
											"end": 4192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4573,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4573,
											"end": 4584,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4573,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2059,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2101,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9109,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9110,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9119,
											"end": 9149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206E6F7420666F756E6421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9158,
											"end": 9203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9220,
											"end": 9238,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9220,
											"end": 9238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 8905,
											"end": 9244,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4623,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4607,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4600,
											"end": 4624,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4600,
											"end": 4624,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2152,
											"end": 2153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4234,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5851,
											"end": 5868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5868,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5868,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5872,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1831,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4392,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4385,
											"end": 4410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4385,
											"end": 4410,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3114,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1650,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1650,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3205,
											"end": 3206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 3178,
											"end": 3208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 345,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 345,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 345,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4752,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5868,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5872,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1831,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1831,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4784,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4784,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4772,
											"end": 4781,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4772,
											"end": 4793,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 5137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 5137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4768,
											"end": 5137,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4809,
											"end": 4831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4831,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4809,
											"end": 4831,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4958,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9433,
											"end": 9454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9433,
											"end": 9454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9433,
											"end": 9454,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9490,
											"end": 9492,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 9470,
											"end": 9488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9470,
											"end": 9488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9470,
											"end": 9488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9463,
											"end": 9493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9563,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E696D756D206465706F73697420616D6F756E7420697320302E30303033"
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9564,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9595,
											"end": 9597,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9580,
											"end": 9598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9580,
											"end": 9598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9573,
											"end": 9604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4891,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4881,
											"end": 4891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A8B9F7931AC94CF9850ACCD175CF4543FAC81AE93865D1670E14213829F67DE5"
										},
										{
											"begin": 4850,
											"end": 4958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9636,
											"end": 9639,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9621,
											"end": 9640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4958,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 5137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4768,
											"end": 5137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5005,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4989,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5014,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5027,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4989,
											"end": 5027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4989,
											"end": 5027,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4989,
											"end": 5027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5027,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5041,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5041,
											"end": 5067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5067,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5041,
											"end": 5067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5041,
											"end": 5067,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5067,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5086,
											"end": 5126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5125,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5114,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5086,
											"end": 5126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B3EF81558ED1A50072A492984535A009DA8B129C749500B387F1E5F4886BDDE5"
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5861,
											"end": 6038,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 5137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4768,
											"end": 5137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3359,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1650,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1650,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3443,
											"end": 3465,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3439,
											"end": 3530,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3519,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3488,
											"end": 3519,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3706,
											"end": 3909,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3439,
											"end": 3530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3558,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 3539,
											"end": 3567,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2622,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2704,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2677,
											"end": 2778,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2727,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3706,
											"end": 3909,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3722,
											"end": 3909,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 3722,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3795,
											"end": 3811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 153,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 14,
											"end": 153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 97,
											"end": 128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 97,
											"end": 128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 87,
											"end": 129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 129,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 77,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 77,
											"end": 147,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 143,
											"end": 144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 141,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 133,
											"end": 145,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 158,
											"end": 489,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 158,
											"end": 489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 234,
											"end": 240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 292,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 274,
											"end": 281,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 270,
											"end": 293,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 266,
											"end": 298,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 263,
											"end": 315,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 263,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 263,
											"end": 315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 311,
											"end": 312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 313,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 263,
											"end": 315,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 263,
											"end": 315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 347,
											"end": 356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 334,
											"end": 357,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 324,
											"end": 357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 324,
											"end": 357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 392,
											"end": 410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 379,
											"end": 411,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 453,
											"end": 458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 420,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 420,
											"end": 459,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 478,
											"end": 483,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 468,
											"end": 483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 468,
											"end": 483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 468,
											"end": 483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 489,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 158,
											"end": 489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 489,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 158,
											"end": 489,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 621,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 494,
											"end": 621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 555,
											"end": 565,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 550,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 546,
											"end": 566,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 586,
											"end": 590,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 610,
											"end": 614,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 607,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 615,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 626,
											"end": 1352,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 626,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 669,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 715,
											"end": 719,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 707,
											"end": 713,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 703,
											"end": 720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 689,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 689,
											"end": 744,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 730,
											"end": 742,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 689,
											"end": 744,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 689,
											"end": 744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 810,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 799,
											"end": 829,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 796,
											"end": 852,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 796,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 796,
											"end": 852,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 832,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 832,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 832,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 850,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 832,
											"end": 850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 935,
											"end": 952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 935,
											"end": 952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 931,
											"end": 962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 931,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 931,
											"end": 962,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 964,
											"end": 966,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 927,
											"end": 967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 923,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 911,
											"end": 978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 911,
											"end": 978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 993,
											"end": 1027,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1029,
											"end": 1051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1029,
											"end": 1051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1029,
											"end": 1051,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1052,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 987,
											"end": 1075,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 987,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 987,
											"end": 1075,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 1055,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1055,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1073,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 1055,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1175,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1188,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1146,
											"end": 1205,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1146,
											"end": 1205,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1199,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1203,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1205,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1146,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1272,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1322,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 626,
											"end": 1352,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 626,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1830,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1357,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1457,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1501,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1490,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1502,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1507,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1522,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1612,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1623,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1627,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1690,
											"end": 1697,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1648,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1698,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1648,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1698,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1761,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2306,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1967,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2110,
											"end": 2112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2132,
											"end": 2145,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2145,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2122,
											"end": 2266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2198,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2183,
											"end": 2186,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2179,
											"end": 2199,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2200,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2223,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2122,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2311,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2421,
											"end": 2430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2436,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2453,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2401,
											"end": 2453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2451,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2453,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2401,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2514,
											"end": 2520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2541,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2577,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2627,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2577,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2627,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2633,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2311,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2927,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2638,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2792,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2771,
											"end": 2774,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2767,
											"end": 2781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2837,
											"end": 2843,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2905,
											"end": 2912,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2900,
											"end": 2902,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2892,
											"end": 2898,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 2903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2913,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2921,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2927,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3441,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2932,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3107,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3108,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3087,
											"end": 3108,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3087,
											"end": 3108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3148,
											"end": 3161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3148,
											"end": 3161,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3144,
											"end": 3183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3219,
											"end": 3234,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3219,
											"end": 3234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3235,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3346,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3331,
											"end": 3350,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3299,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3407,
											"end": 3409,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3405,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3386,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3412,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3446,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3578,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3526,
											"end": 3578,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3564,
											"end": 3576,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3578,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3526,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3623,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3665,
											"end": 3670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3632,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3701,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3446,
											"end": 3701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4119,
											"end": 4151,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4151,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4188,
											"end": 4190,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4208,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 4208,
											"end": 4253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4208,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 4208,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4273,
											"end": 4282,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 4302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4882,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4531,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4733,
											"end": 4735,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4715,
											"end": 4736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4736,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4772,
											"end": 4774,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4811,
											"end": 4840,
											"name": "PUSH",
											"source": 8,
											"value": "54686973206973206120636F6E74726163742061646472657373210000000000"
										},
										{
											"begin": 4806,
											"end": 4808,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4784,
											"end": 4841,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4875,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5723,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5596,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5657,
											"end": 5667,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5652,
											"end": 5655,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5648,
											"end": 5668,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5685,
											"end": 5686,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5678,
											"end": 5693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5716,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5717,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5856,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5728,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5827,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5850,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5813,
											"end": 5850,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5830,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5856,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6043,
											"end": 6423,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6043,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6123,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 6186,
											"end": 6247,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6244,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6228,
											"end": 6245,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6218,
											"end": 6245,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6218,
											"end": 6245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6247,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 6186,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6285,
											"end": 6291,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6296,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6259,
											"end": 6297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6256,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6256,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6339,
											"end": 6349,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6334,
											"end": 6337,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6330,
											"end": 6350,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6328,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6320,
											"end": 6351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6378,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6371,
											"end": 6372,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6364,
											"end": 6379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6406,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6407,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7425,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 6907,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7004,
											"end": 7007,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6998,
											"end": 7419,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6998,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6998,
											"end": 7419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7042,
											"end": 7043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7089,
											"end": 7093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7086,
											"end": 7087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7161,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7147,
											"end": 7157,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7136,
											"end": 7163,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7134,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7126,
											"end": 7164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7195,
											"end": 7199,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7183,
											"end": 7193,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7200,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7224,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 7177,
											"end": 7224,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7218,
											"end": 7222,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7224,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 7177,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7257,
											"end": 7277,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 7251,
											"end": 7255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7247,
											"end": 7278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7237,
											"end": 7278,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7237,
											"end": 7278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7391,
											"end": 7407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7407,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7372,
											"end": 7373,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7328,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6998,
											"end": 7419,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6998,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 8900,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 7601,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7727,
											"end": 7730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7731,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7743,
											"end": 7773,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7796,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7740,
											"end": 7796,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 7776,
											"end": 7794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7805,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7895,
											"end": 7901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 7887,
											"end": 7891,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7892,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 7855,
											"end": 7893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7893,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 7855,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7805,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7805,
											"end": 7902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7805,
											"end": 7902,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7805,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7955,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 7984,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7971,
											"end": 7985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 7985,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7994,
											"end": 8643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8643,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 7994,
											"end": 8643,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8701,
											"end": 8790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8701,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 8701,
											"end": 8790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8756,
											"end": 8775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 8775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 8775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 8776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8701,
											"end": 8790,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 8701,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7558,
											"end": 7559,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7554,
											"end": 7565,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7554,
											"end": 7565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7554,
											"end": 7565,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7575,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7576,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7578,
											"end": 7589,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7589,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7533,
											"end": 7590,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8884,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8884,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7964,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7964,
											"end": 8894,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8643,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 7994,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 6895,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8030,
											"end": 8050,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8050,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8162,
											"end": 8169,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8170,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8244,
											"end": 8263,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8244,
											"end": 8263,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8244,
											"end": 8263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8223,
											"end": 8265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8223,
											"end": 8265,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8351,
											"end": 8355,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8356,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8356,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8356,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8292,
											"end": 8306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8292,
											"end": 8306,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8292,
											"end": 8306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8292,
											"end": 8306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8148,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8152,
											"end": 8155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8398,
											"end": 8404,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8389,
											"end": 8396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8405,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8584,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 8383,
											"end": 8584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8478,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8478,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8453,
											"end": 8479,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8542,
											"end": 8543,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8538,
											"end": 8552,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8538,
											"end": 8552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8538,
											"end": 8552,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8554,
											"end": 8557,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 8534,
											"end": 8558,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8567,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 8526,
											"end": 8568,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8569,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8496,
											"end": 8570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8496,
											"end": 8570,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8584,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 8383,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8630,
											"end": 8631,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8614,
											"end": 8628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8614,
											"end": 8628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8614,
											"end": 8628,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8597,
											"end": 8633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8597,
											"end": 8633,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9651,
											"end": 9776,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 9651,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9725,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9747,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9747,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9747,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9734,
											"end": 9770,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9734,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 9734,
											"end": 9770,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 9750,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 9750,
											"end": 9768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/JVCToken.sol",
								"contracts/bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"getUserByAddress(address)": "69c212f6",
							"getUserByName(string)": "4bff5009",
							"owner()": "8da5cb5b",
							"registerUser(string,address)": "0e54b872",
							"renounceOwnership()": "715018a6",
							"status()": "200d2ed2",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"users(address)": "a87430ba",
							"withdraw(uint256,address)": "00f714ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"DepositFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"WithdrawalFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalSuccessful\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"uAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct Bank.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Uname\",\"type\":\"string\"}],\"name\":\"getUserByName\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"uAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct Bank.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uname\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum Bank.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract JVCToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"uAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Returns the address of the current owner. \"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bank.sol\":\"Bank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/JVCToken.sol\":{\"keccak256\":\"0xc14901455fdcb8f56ed1f7b72745a283353ee84cb139a6470601ae9be1414ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50c31466fea10d0e7eaa6322ad2a1cf432384a7073d2b77bc48c964ad324fb6f\",\"dweb:/ipfs/QmVRfEKjgt1tkDPmcmoRsc7e73kawmQ6PcSLqaUBSEQ8pW\"]},\"contracts/bank.sol\":{\"keccak256\":\"0xa49534ba040195be150c860e22f47ca9d2fc1560ad63b68e6ce713db32e528c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb33a5bcedacc526fc88131993656be7bbd0caea04ed3f103d853867c1f951d9\",\"dweb:/ipfs/QmY2epcMMSbx5ru1YEYdn2ZbFVmsLLWDqpv3phJUzFJ5f8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 986,
								"contract": "contracts/bank.sol:Bank",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(JVCToken)974"
							},
							{
								"astId": 988,
								"contract": "contracts/bank.sol:Bank",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 993,
								"contract": "contracts/bank.sol:Bank",
								"label": "users",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(User)1014_storage)"
							},
							{
								"astId": 996,
								"contract": "contracts/bank.sol:Bank",
								"label": "minDepAmt",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 999,
								"contract": "contracts/bank.sol:Bank",
								"label": "maxWithdAmt",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1021,
								"contract": "contracts/bank.sol:Bank",
								"label": "status",
								"offset": 0,
								"slot": "5",
								"type": "t_enum(Status)1018"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(JVCToken)974": {
								"encoding": "inplace",
								"label": "contract JVCToken",
								"numberOfBytes": "20"
							},
							"t_enum(Status)1018": {
								"encoding": "inplace",
								"label": "enum Bank.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(User)1014_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Bank.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1014_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(User)1014_storage": {
								"encoding": "inplace",
								"label": "struct Bank.User",
								"members": [
									{
										"astId": 1009,
										"contract": "contracts/bank.sol:Bank",
										"label": "uAddr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1011,
										"contract": "contracts/bank.sol:Bank",
										"label": "uName",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1013,
										"contract": "contracts/bank.sol:Bank",
										"label": "balance",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "Returns the address of the current owner. "
							},
							"renounceOwnership()": {
								"notice": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"notice": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					}
				},
				"Owner": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bank.sol\":\"Owner\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/JVCToken.sol\":{\"keccak256\":\"0xc14901455fdcb8f56ed1f7b72745a283353ee84cb139a6470601ae9be1414ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50c31466fea10d0e7eaa6322ad2a1cf432384a7073d2b77bc48c964ad324fb6f\",\"dweb:/ipfs/QmVRfEKjgt1tkDPmcmoRsc7e73kawmQ6PcSLqaUBSEQ8pW\"]},\"contracts/bank.sol\":{\"keccak256\":\"0xa49534ba040195be150c860e22f47ca9d2fc1560ad63b68e6ce713db32e528c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb33a5bcedacc526fc88131993656be7bbd0caea04ed3f103d853867c1f951d9\",\"dweb:/ipfs/QmY2epcMMSbx5ru1YEYdn2ZbFVmsLLWDqpv3phJUzFJ5f8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/JVCToken.sol": {
				"ast": {
					"absolutePath": "contracts/JVCToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"JVCToken": [
							974
						],
						"Ownable": [
							147
						]
					},
					"id": 975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"189:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "189:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "189:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"196:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "196:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "196:7:6"
								}
							],
							"canonicalName": "JVCToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 974,
							"linearizedBaseContracts": [
								974,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "JVCToken",
							"nameLocation": "177:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "358:2:6",
										"statements": []
									},
									"id": 958,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 950,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "322:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 951,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "328:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 952,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 949,
												"name": "ERC20",
												"nameLocations": [
													"316:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "316:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "316:19:6"
										},
										{
											"arguments": [
												{
													"id": 954,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "344:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 955,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 953,
												"name": "Ownable",
												"nameLocations": [
													"336:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "336:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "336:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "239:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "231:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "275:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "261:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "261:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "303:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "289:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:94:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:0:6"
									},
									"scope": 974,
									"src": "210:150:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "429:38:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "445:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "453:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 967,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "439:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "439:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "439:21:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 964,
												"name": "onlyOwner",
												"nameLocations": [
													"419:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "419:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "419:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "375:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "388:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "380:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "404:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "396:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:32:6"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:6"
									},
									"scope": 974,
									"src": "366:101:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 975,
							"src": "168:301:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:438:6"
				},
				"id": 6
			},
			"contracts/bank.sol": {
				"ast": {
					"absolutePath": "contracts/bank.sol",
					"exportedSymbols": {
						"Bank": [
							1392
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"JVCToken": [
							974
						],
						"Ownable": [
							147
						],
						"Owner": [
							979
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 976,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 934,
							"src": "58:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/JVCToken.sol",
							"file": "./JVCToken.sol",
							"id": 978,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 975,
							"src": "110:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Owner",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Owner",
							"nameLocation": "146:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1393,
							"src": "136:18:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 980,
										"name": "Owner",
										"nameLocations": [
											"173:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "173:5:7"
									},
									"id": 981,
									"nodeType": "InheritanceSpecifier",
									"src": "173:5:7"
								},
								{
									"baseName": {
										"id": 982,
										"name": "Context",
										"nameLocations": [
											"180:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "180:7:7"
									},
									"id": 983,
									"nodeType": "InheritanceSpecifier",
									"src": "180:7:7"
								}
							],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392,
								933,
								979
							],
							"name": "Bank",
							"nameLocation": "165:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 986,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "272:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "256:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_JVCToken_$974",
										"typeString": "contract JVCToken"
									},
									"typeName": {
										"id": 985,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 984,
											"name": "JVCToken",
											"nameLocations": [
												"256:8:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 974,
											"src": "256:8:7"
										},
										"referencedDeclaration": 974,
										"src": "256:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_JVCToken_$974",
											"typeString": "contract JVCToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 988,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "333:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "317:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 987,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 993,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "377:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "345:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
										"typeString": "mapping(address => struct Bank.User)"
									},
									"typeName": {
										"id": 992,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 989,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "353:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "345:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
											"typeString": "mapping(address => struct Bank.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 991,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 990,
												"name": "User",
												"nameLocations": [
													"364:4:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1014,
												"src": "364:4:7"
											},
											"referencedDeclaration": 1014,
											"src": "364:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$1014_storage_ptr",
												"typeString": "struct Bank.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 996,
									"mutability": "mutable",
									"name": "minDepAmt",
									"nameLocation": "404:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "388:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 994,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "388:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3030303338",
										"id": 995,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "416:13:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_380000000000000_by_1",
											"typeString": "int_const 380000000000000"
										},
										"value": "0.00038"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 999,
									"mutability": "mutable",
									"name": "maxWithdAmt",
									"nameLocation": "451:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "435:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 997,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 998,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "465:7:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "1e4fbdf7",
									"id": 1003,
									"name": "OwnableInvalidOwner",
									"nameLocation": "551:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "579:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "571:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:15:7"
									},
									"src": "545:41:7"
								},
								{
									"errorSelector": "118cdaa7",
									"id": 1007,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "666:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "701:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "693:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:17:7"
									},
									"src": "660:50:7"
								},
								{
									"canonicalName": "Bank.User",
									"id": 1014,
									"members": [
										{
											"constant": false,
											"id": 1009,
											"mutability": "mutable",
											"name": "uAddr",
											"nameLocation": "769:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1014,
											"src": "761:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1008,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1011,
											"mutability": "mutable",
											"name": "uName",
											"nameLocation": "791:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1014,
											"src": "784:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1010,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "784:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1013,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "814:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1014,
											"src": "806:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "806:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "746:4:7",
									"nodeType": "StructDefinition",
									"scope": 1392,
									"src": "739:89:7",
									"visibility": "public"
								},
								{
									"canonicalName": "Bank.Status",
									"id": 1018,
									"members": [
										{
											"id": 1015,
											"name": "Pending",
											"nameLocation": "920:7:7",
											"nodeType": "EnumValue",
											"src": "920:7:7"
										},
										{
											"id": 1016,
											"name": "Failed",
											"nameLocation": "937:6:7",
											"nodeType": "EnumValue",
											"src": "937:6:7"
										},
										{
											"id": 1017,
											"name": "Successful",
											"nameLocation": "953:10:7",
											"nodeType": "EnumValue",
											"src": "953:10:7"
										}
									],
									"name": "Status",
									"nameLocation": "903:6:7",
									"nodeType": "EnumDefinition",
									"src": "898:71:7"
								},
								{
									"constant": false,
									"functionSelector": "200d2ed2",
									"id": 1021,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "988:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "974:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$1018",
										"typeString": "enum Bank.Status"
									},
									"typeName": {
										"id": 1020,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1019,
											"name": "Status",
											"nameLocations": [
												"974:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1018,
											"src": "974:6:7"
										},
										"referencedDeclaration": 1018,
										"src": "974:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$1018",
											"typeString": "enum Bank.Status"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5",
									"id": 1027,
									"name": "DepositSuccessful",
									"nameLocation": "1068:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1111:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1095:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1133:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1125:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:60:7"
									},
									"src": "1062:84:7"
								},
								{
									"anonymous": false,
									"eventSelector": "a8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5",
									"id": 1033,
									"name": "DepositFailed",
									"nameLocation": "1157:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1196:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "1180:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1217:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "1210:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1210:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:60:7"
									},
									"src": "1151:80:7"
								},
								{
									"anonymous": false,
									"eventSelector": "46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d",
									"id": 1041,
									"name": "WithdrawalSuccessful",
									"nameLocation": "1242:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"indexed": true,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1288:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1272:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1318:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1302:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1340:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1332:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:90:7"
									},
									"src": "1236:117:7"
								},
								{
									"anonymous": false,
									"eventSelector": "e6f929185a164b69900aded735a0dde72fc0fcc419233880e26d0e55d8bf3fde",
									"id": 1047,
									"name": "WithdrawalFailed",
									"nameLocation": "1364:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1406:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1390:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1427:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1420:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1044,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1420:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:60:7"
									},
									"src": "1358:83:7"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1053,
									"name": "OwnershipTransferred",
									"nameLocation": "1452:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1498:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1482:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1537:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1521:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:79:7"
									},
									"src": "1446:106:7"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "1640:41:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1055,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "1650:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1650:13:7"
											},
											{
												"id": 1058,
												"nodeType": "PlaceholderStatement",
												"src": "1673:1:7"
											}
										]
									},
									"id": 1060,
									"name": "onlyOwner",
									"nameLocation": "1628:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:2:7"
									},
									"src": "1619:62:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "1821:124:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1852:22:7",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1066,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "1868:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1065,
																	"name": "isContractAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "1853:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1853:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206973206120636f6e7472616374206164647265737321",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1888:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d",
																"typeString": "literal_string \"This is a contract address!\""
															},
															"value": "This is a contract address!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d",
																"typeString": "literal_string \"This is a contract address!\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1831:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1831:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "1831:96:7"
											},
											{
												"id": 1072,
												"nodeType": "PlaceholderStatement",
												"src": "1937:1:7"
											}
										]
									},
									"id": 1074,
									"name": "verifyAddr",
									"nameLocation": "1795:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1814:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1806:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:15:7"
									},
									"src": "1786:159:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "2028:132:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1081,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "2065:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
																						"typeString": "mapping(address => struct Bank.User storage ref)"
																					}
																				},
																				"id": 1084,
																				"indexExpression": {
																					"expression": {
																						"id": 1082,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2071:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2075:6:7",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2071:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2065:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1014_storage",
																					"typeString": "struct Bank.User storage ref"
																				}
																			},
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2083:5:7",
																			"memberName": "uName",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1011,
																			"src": "2065:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2059:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1079,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2059:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2059:30:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2090:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2059:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2059:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f7420666f756e6421",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2115:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8",
																"typeString": "literal_string \"User not found!\""
															},
															"value": "User not found!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8",
																"typeString": "literal_string \"User not found!\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2038:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:104:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "2038:104:7"
											},
											{
												"id": 1093,
												"nodeType": "PlaceholderStatement",
												"src": "2152:1:7"
											}
										]
									},
									"id": 1095,
									"name": "findUserByUname",
									"nameLocation": "1991:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "uname",
												"nameLocation": "2021:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2007:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2007:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:21:7"
									},
									"src": "1982:178:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "2227:195:7",
										"statements": [
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2237:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_JVCToken_$974",
															"typeString": "contract JVCToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1104,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "2254:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1103,
															"name": "JVCToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "2245:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_JVCToken_$974_$",
																"typeString": "type(contract JVCToken)"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2245:23:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_JVCToken_$974",
															"typeString": "contract JVCToken"
														}
													},
													"src": "2237:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_JVCToken_$974",
														"typeString": "contract JVCToken"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2237:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "2283:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2307:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2299:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1109,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2299:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2299:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2283:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1122,
												"nodeType": "IfStatement",
												"src": "2279:95:7",
												"trueBody": {
													"id": 1121,
													"nodeType": "Block",
													"src": "2311:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2360:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2352:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1115,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2352:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2352:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1114,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "2332:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2332:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1120,
															"nodeType": "RevertStatement",
															"src": "2325:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "2402:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1123,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2383:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2383:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "2383:32:7"
											}
										]
									},
									"id": 1128,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "2186:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2178:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2209:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2201:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:45:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2227:0:7"
									},
									"scope": 1392,
									"src": "2166:256:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2536:30:7",
										"statements": [
											{
												"expression": {
													"id": 1134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 988,
													"src": "2553:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1135,
												"nodeType": "Return",
												"src": "2546:13:7"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "2428:48:7",
										"text": "Returns the address of the current owner. "
									},
									"functionSelector": "8da5cb5b",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2490:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:2:7"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2527:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:9:7"
									},
									"scope": 1392,
									"src": "2481:85:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "2667:117:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1141,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "2681:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2681:7:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1143,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "2692:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2692:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2681:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "2677:101:7",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "2706:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1147,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "2754:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2754:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1146,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "2727:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2727:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1150,
															"nodeType": "RevertStatement",
															"src": "2720:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "2572:45:7",
										"text": "Throws if the sender is not the owner.*"
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2631:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:7"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:7"
									},
									"scope": 1392,
									"src": "2622:162:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "3168:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3205:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3197:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3197:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3197:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1160,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "3178:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3178:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "3178:30:7"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "2790:319:7",
										"text": " Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1157,
												"name": "onlyOwner",
												"nameLocations": [
													"3158:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1060,
												"src": "3158:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3158:9:7"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3123:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3140:2:7"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3168:0:7"
									},
									"scope": 1392,
									"src": "3114:101:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "3429:145:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1176,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "3443:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3463:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3455:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1177,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3455:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3455:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3443:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "3439:91:7",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "3467:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3516:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3508:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1183,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3508:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3508:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1182,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "3488:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3488:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1188,
															"nodeType": "RevertStatement",
															"src": "3481:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "3558:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1191,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "3539:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3539:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "3539:28:7"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "3221:133:7",
										"text": " Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1173,
												"name": "onlyOwner",
												"nameLocations": [
													"3419:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1060,
												"src": "3419:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3419:9:7"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3368:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3394:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "3386:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:18:7"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3429:0:7"
									},
									"scope": 1392,
									"src": "3359:215:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "3785:124:7",
										"statements": [
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3803:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "3795:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1202,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3795:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"id": 1204,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 988,
													"src": "3814:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3795:25:7"
											},
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1206,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3830:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1207,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3839:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3830:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "3830:17:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1211,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "3883:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "3893:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1210,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3862:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "3857:45:7"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "3580:137:7",
										"text": "Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3731:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3758:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3750:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3749:18:7"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3785:0:7"
									},
									"scope": 1392,
									"src": "3722:187:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "4031:168:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1226,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "4068:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
																						"typeString": "mapping(address => struct Bank.User storage ref)"
																					}
																				},
																				"id": 1228,
																				"indexExpression": {
																					"id": 1227,
																					"name": "addr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "4074:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4068:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1014_storage",
																					"typeString": "struct Bank.User storage ref"
																				}
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4080:5:7",
																			"memberName": "uName",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1011,
																			"src": "4068:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4062:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1224,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4062:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4062:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4087:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4062:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4097:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4062:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220616c7265616479207265676973746572656421",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4112:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3",
																"typeString": "literal_string \"User already registered!\""
															},
															"value": "User already registered!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3",
																"typeString": "literal_string \"User already registered!\""
															}
														],
														"id": 1223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4041:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4041:107:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "4041:107:7"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1237,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "4158:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
																"typeString": "mapping(address => struct Bank.User storage ref)"
															}
														},
														"id": 1239,
														"indexExpression": {
															"id": 1238,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "4164:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4158:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1014_storage",
															"typeString": "struct Bank.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1241,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "4177:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 1242,
																"name": "uname",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "4183:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "30",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4190:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1240,
															"name": "User",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "4172:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_User_$1014_storage_ptr_$",
																"typeString": "type(struct Bank.User storage pointer)"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4172:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1014_memory_ptr",
															"typeString": "struct Bank.User memory"
														}
													},
													"src": "4158:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1014_storage",
														"typeString": "struct Bank.User storage ref"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "4158:34:7"
											}
										]
									},
									"functionSelector": "0e54b872",
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerUser",
									"nameLocation": "3946:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "uname",
												"nameLocation": "3982:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3968:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1217,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "4013:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3997:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3997:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3958:65:7"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4031:0:7"
									},
									"scope": 1392,
									"src": "3937:262:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "4375:42:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1259,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "4392:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
															"typeString": "mapping(address => struct Bank.User storage ref)"
														}
													},
													"id": 1261,
													"indexExpression": {
														"id": 1260,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "4398:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4392:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1014_storage",
														"typeString": "struct Bank.User storage ref"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1262,
												"nodeType": "Return",
												"src": "4385:25:7"
											}
										]
									},
									"functionSelector": "69c212f6",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1253,
													"name": "userAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1250,
													"src": "4328:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1252,
												"name": "verifyAddr",
												"nameLocations": [
													"4317:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1074,
												"src": "4317:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4317:23:7"
										}
									],
									"name": "getUserByAddress",
									"nameLocation": "4243:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "4268:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4260:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4260:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4259:21:7"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4358:11:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$1014_memory_ptr",
													"typeString": "struct Bank.User"
												},
												"typeName": {
													"id": 1256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1255,
														"name": "User",
														"nameLocations": [
															"4358:4:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1014,
														"src": "4358:4:7"
													},
													"referencedDeclaration": 1014,
													"src": "4358:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1014_storage_ptr",
														"typeString": "struct Bank.User"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:13:7"
									},
									"scope": 1392,
									"src": "4234:183:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "4590:41:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1275,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "4607:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
															"typeString": "mapping(address => struct Bank.User storage ref)"
														}
													},
													"id": 1278,
													"indexExpression": {
														"expression": {
															"id": 1276,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4613:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4617:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4613:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4607:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1014_storage",
														"typeString": "struct Bank.User storage ref"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1279,
												"nodeType": "Return",
												"src": "4600:24:7"
											}
										]
									},
									"functionSelector": "4bff5009",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1269,
													"name": "Uname",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1266,
													"src": "4549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1268,
												"name": "findUserByUname",
												"nameLocations": [
													"4533:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "4533:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4533:22:7"
										}
									],
									"name": "getUserByName",
									"nameLocation": "4462:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "Uname",
												"nameLocation": "4490:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4476:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4476:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4475:21:7"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4573:11:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$1014_memory_ptr",
													"typeString": "struct Bank.User"
												},
												"typeName": {
													"id": 1272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1271,
														"name": "User",
														"nameLocations": [
															"4573:4:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1014,
														"src": "4573:4:7"
													},
													"referencedDeclaration": 1014,
													"src": "4573:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1014_storage_ptr",
														"typeString": "struct Bank.User"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4572:13:7"
									},
									"scope": 1392,
									"src": "4453:178:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "4758:385:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1288,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4772:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4776:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4772:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1290,
														"name": "minDepAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "4784:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4772:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "4975:162:7",
													"statements": [
														{
															"expression": {
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1304,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "4989:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
																				"typeString": "mapping(address => struct Bank.User storage ref)"
																			}
																		},
																		"id": 1307,
																		"indexExpression": {
																			"expression": {
																				"id": 1305,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4995:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4999:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4995:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4989:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1014_storage",
																			"typeString": "struct Bank.User storage ref"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5007:7:7",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1013,
																	"src": "4989:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1309,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5018:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5022:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5018:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4989:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1312,
															"nodeType": "ExpressionStatement",
															"src": "4989:38:7"
														},
														{
															"expression": {
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1313,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "5041:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1018",
																		"typeString": "enum Bank.Status"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1314,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "5050:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$1018_$",
																			"typeString": "type(enum Bank.Status)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5057:10:7",
																	"memberName": "Successful",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1017,
																	"src": "5050:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1018",
																		"typeString": "enum Bank.Status"
																	}
																},
																"src": "5041:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1018",
																	"typeString": "enum Bank.Status"
																}
															},
															"id": 1317,
															"nodeType": "ExpressionStatement",
															"src": "5041:26:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1319,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5104:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5108:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5104:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1321,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5116:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5120:5:7",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5116:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1318,
																	"name": "DepositSuccessful",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "5086:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5086:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1324,
															"nodeType": "EmitStatement",
															"src": "5081:45:7"
														}
													]
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "4768:369:7",
												"trueBody": {
													"id": 1303,
													"nodeType": "Block",
													"src": "4795:174:7",
													"statements": [
														{
															"expression": {
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1292,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "4809:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1018",
																		"typeString": "enum Bank.Status"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1293,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "4818:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$1018_$",
																			"typeString": "type(enum Bank.Status)"
																		}
																	},
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4825:6:7",
																	"memberName": "Failed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1016,
																	"src": "4818:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1018",
																		"typeString": "enum Bank.Status"
																	}
																},
																"src": "4809:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1018",
																	"typeString": "enum Bank.Status"
																}
															},
															"id": 1296,
															"nodeType": "ExpressionStatement",
															"src": "4809:22:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1298,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4881:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4885:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4881:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "4d696e696d756d206465706f73697420616d6f756e7420697320302e3030303338",
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4909:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44",
																			"typeString": "literal_string \"Minimum deposit amount is 0.00038\""
																		},
																		"value": "Minimum deposit amount is 0.00038"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44",
																			"typeString": "literal_string \"Minimum deposit amount is 0.00038\""
																		}
																	],
																	"id": 1297,
																	"name": "DepositFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "4850:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory)"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4850:108:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1302,
															"nodeType": "EmitStatement",
															"src": "4845:113:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1284,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4742:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4746:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4742:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1283,
												"name": "verifyAddr",
												"nameLocations": [
													"4731:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1074,
												"src": "4731:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4731:22:7"
										}
									],
									"name": "deposit",
									"nameLocation": "4682:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4689:2:7"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4758:0:7"
									},
									"scope": 1392,
									"src": "4673:470:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "5310:354:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1340,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "5341:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1341,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "5351:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
																			"typeString": "mapping(address => struct Bank.User storage ref)"
																		}
																	},
																	"id": 1343,
																	"indexExpression": {
																		"id": 1342,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "5357:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5351:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1014_storage",
																		"typeString": "struct Bank.User storage ref"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5363:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1013,
																"src": "5351:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5341:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5384:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5320:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "5320:96:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1350,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "5447:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1351,
																"name": "maxWithdAmt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "5457:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5447:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e742065786365656473206c696d6974",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5482:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011",
																"typeString": "literal_string \"Withdrawal amount exceeds limit\""
															},
															"value": "Withdrawal amount exceeds limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011",
																"typeString": "literal_string \"Withdrawal amount exceeds limit\""
															}
														],
														"id": 1349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5426:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5426:99:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "5426:99:7"
											},
											{
												"expression": {
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1356,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "5536:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1014_storage_$",
																	"typeString": "mapping(address => struct Bank.User storage ref)"
																}
															},
															"id": 1358,
															"indexExpression": {
																"id": 1357,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "5542:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5536:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1014_storage",
																"typeString": "struct Bank.User storage ref"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5548:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1013,
														"src": "5536:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1360,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "5559:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5536:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "5536:29:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1366,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "5589:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1363,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "5575:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5580:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5575:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5575:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "5575:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1370,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "5632:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5638:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5642:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5638:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "5650:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1369,
														"name": "WithdrawalSuccessful",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "5611:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5611:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "EmitStatement",
												"src": "5606:51:7"
											}
										]
									},
									"functionSelector": "00f714ce",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1335,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5294:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5298:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5294:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1334,
												"name": "verifyAddr",
												"nameLocations": [
													"5283:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1074,
												"src": "5283:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5283:22:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "5197:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5214:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "5206:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "5238:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "5222:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5205:38:7"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5310:0:7"
									},
									"scope": 1392,
									"src": "5188:476:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "5834:45:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1384,
																"name": "addr_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "5851:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5857:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5851:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5862:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5851:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5871:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5851:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1383,
												"id": 1389,
												"nodeType": "Return",
												"src": "5844:28:7"
											}
										]
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContractAddr",
									"nameLocation": "5747:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "addr_",
												"nameLocation": "5770:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "5762:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5761:15:7"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "5824:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5824:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5823:6:7"
									},
									"scope": 1392,
									"src": "5738:141:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1393,
							"src": "156:5725:7",
							"usedErrors": [
								1003,
								1007
							],
							"usedEvents": [
								1027,
								1033,
								1041,
								1047,
								1053
							]
						}
					],
					"src": "32:5850:7"
				},
				"id": 7
			}
		}
	}
}
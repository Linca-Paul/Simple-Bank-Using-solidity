{
	"id": "cb0a5d362adb8d9802ec37454f3b4189",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bank.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./token.sol\";\n\ncontract JVCBank is Ownable, JVCToken {\n    // Declare storage locations\n    mapping(address => User) public users;\n    uint256 private minDepAmt = 0.00038 ether;\n    uint256 private maxWithdAmt = 1 ether;\n\n    // Store user data\n    struct User {\n        address uAddr;\n        string uName;\n        uint256 balance;\n    }\n\n    // Record the state of the transaction with custom datatype\n    enum Status {\n        Pending,\n        Failed,\n        Successful\n    }\n    Status public status;\n\n    // Log the status of the deposit and withdrawal function\n    event DepositSuccessful(address indexed user, uint256 amount);\n    event DepositFailed(address indexed user, string message);\n    event WithdrawalSuccessful(address indexed addr, address indexed user, uint256 amount);\n    event WithdrawalFailed(address indexed user, string message);\n\n    // Verify that an address is not a contract address using the helper function (isContractAddr)\n    modifier verifyAddr(address _addr) {\n        require(!isContractAddr(_addr), \"This is a contract address!\");\n        _;\n    }\n    // Verify that a user exist\n    modifier findUserByUname(string memory uname) {\n        require(bytes(users[msg.sender].uName).length != 0, \"User not found!\");\n        _;\n    }\n\n    constructor(uint256 _initialSupply) JVCToken(_initialSupply){}\n\n    // Register users\n    function registerUser(string memory uname, address payable addr) public {\n        require(bytes(users[addr].uName).length == 0, \"User already registered!\");\n        users[addr] = User(addr, uname, 0);\n    }\n\n    // Get a user by Address\n    function getUserByAddress(address userAddress) public view verifyAddr(userAddress) returns (User memory) {\n        return users[userAddress];\n    }\n\n    // Get a user by Username\n    function getUserByName(string memory Uname) public view findUserByUname(Uname) returns (User memory) {\n        return users[msg.sender];\n    }\n\n    // Deposit to the users address\n    function deposit() public payable verifyAddr(msg.sender) {\n        if (msg.value < minDepAmt) {\n            status = Status.Failed;\n            emit DepositFailed(msg.sender, \"Minimum deposit amount is 0.00038\");\n            return;\n        }\n        // Transfer tokens from user to the bank\n        transferFrom(payable(msg.sender), address(this), msg.value);\n        users[msg.sender].balance += msg.value;\n        status = Status.Successful;\n        emit DepositSuccessful(msg.sender, msg.value);\n    }\n\n    // Withdraw to an external account\n    function withdraw(uint256 amount, address payable addr) public payable verifyAddr(msg.sender) {\n        require(amount <= users[addr].balance, \"Insufficient balance\");\n        require(amount <= maxWithdAmt, \"Withdrawal amount exceeds limit\");\n        users[addr].balance -= amount;\n        transfer(addr, amount);\n        emit WithdrawalSuccessful(addr, msg.sender, amount);\n    }\n\n    function mintToken(uint256 amount) public {\n        mint(address(this), amount);\n    }\n\n    function burnToken(uint256 amount) public {\n        burn(address(this), amount);\n    }\n\n    // Helper function to check if an address is a contract address\n    function isContractAddr(address addr_) internal view returns (bool) {\n        return addr_.code.length > 0;\n    }\n}\n"
			},
			"contracts/token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract JVCToken is ERC20, Ownable {\n    constructor(uint256 _initialSupply) ERC20(\"JVCToken\", \"JVC\") Ownable(msg.sender) {}\n\n    function transferOwnership_(address _newOwner) public onlyOwner {\n        transferOwnership(_newOwner);\n    }\n\n    function burn(address fromAddr, uint256 amount) internal virtual onlyOwner {\n        _burn(fromAddr, amount);\n    }\n\n    function mint(address toAddr, uint256 amount) internal virtual onlyOwner {\n        _mint(toAddr, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bank.sol": {
				"JVCBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "DepositFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositSuccessful",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "WithdrawalFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalSuccessful",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserByAddress",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "uAddr",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "uName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										}
									],
									"internalType": "struct JVCBank.User",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "Uname",
									"type": "string"
								}
							],
							"name": "getUserByName",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "uAddr",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "uName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										}
									],
									"internalType": "struct JVCBank.User",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uname",
									"type": "string"
								},
								{
									"internalType": "address payable",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "registerUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "enum JVCBank.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership_",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "address",
									"name": "uAddr",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bank.sol\":134:3392  contract JVCBank is Ownable, JVCToken {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/bank.sol\":282:295  0.00038 ether */\n  0x01599ba503c000\n    /* \"contracts/bank.sol\":254:295  uint256 private minDepAmt = 0.00038 ether */\n  0x07\n  sstore\n    /* \"contracts/bank.sol\":331:338  1 ether */\n  0x0de0b6b3a7640000\n    /* \"contracts/bank.sol\":301:338  uint256 private maxWithdAmt = 1 ether */\n  0x08\n  sstore\n    /* \"contracts/bank.sol\":1391:1453  constructor(uint256 _initialSupply) JVCToken(_initialSupply){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/bank.sol\":1436:1450  _initialSupply */\n  dup1\n    /* \"contracts/token.sol\":279:289  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x252b21aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4a5643)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2990:3041   */\n  mstore\n    /* \"#utility.yul\":2963:2981   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/token.sol\":210:293  constructor(uint256 _initialSupply) ERC20(\"JVCToken\", \"JVC\") Ownable(msg.sender) {} */\n  pop\n    /* \"contracts/bank.sol\":1391:1453  constructor(uint256 _initialSupply) JVCToken(_initialSupply){} */\n  pop\n    /* \"contracts/bank.sol\":134:3392  contract JVCBank is Ownable, JVCToken {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_29:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:330   */\ntag_22:\n    /* \"#utility.yul\":264:274   */\n  0x4e487b71\n    /* \"#utility.yul\":259:262   */\n  0xe0\n    /* \"#utility.yul\":255:275   */\n  shl\n    /* \"#utility.yul\":252:253   */\n  0x00\n    /* \"#utility.yul\":245:276   */\n  mstore\n    /* \"#utility.yul\":295:299   */\n  0x41\n    /* \"#utility.yul\":292:293   */\n  0x04\n    /* \"#utility.yul\":285:300   */\n  mstore\n    /* \"#utility.yul\":319:323   */\n  0x24\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":309:324   */\n  revert\n    /* \"#utility.yul\":335:715   */\ntag_23:\n    /* \"#utility.yul\":414:415   */\n  0x01\n    /* \"#utility.yul\":410:422   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":457:469   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":478:539   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":532:536   */\n  0x7f\n    /* \"#utility.yul\":524:530   */\n  dup3\n    /* \"#utility.yul\":520:537   */\n  and\n    /* \"#utility.yul\":510:537   */\n  swap2\n  pop\n    /* \"#utility.yul\":478:539   */\ntag_32:\n    /* \"#utility.yul\":585:587   */\n  0x20\n    /* \"#utility.yul\":577:583   */\n  dup3\n    /* \"#utility.yul\":574:588   */\n  lt\n    /* \"#utility.yul\":554:572   */\n  dup2\n    /* \"#utility.yul\":551:589   */\n  sub\n    /* \"#utility.yul\":548:709   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":631:641   */\n  0x4e487b71\n    /* \"#utility.yul\":626:629   */\n  0xe0\n    /* \"#utility.yul\":622:642   */\n  shl\n    /* \"#utility.yul\":619:620   */\n  0x00\n    /* \"#utility.yul\":612:643   */\n  mstore\n    /* \"#utility.yul\":666:670   */\n  0x22\n    /* \"#utility.yul\":663:664   */\n  0x04\n    /* \"#utility.yul\":656:671   */\n  mstore\n    /* \"#utility.yul\":694:698   */\n  0x24\n    /* \"#utility.yul\":691:692   */\n  0x00\n    /* \"#utility.yul\":684:699   */\n  revert\n    /* \"#utility.yul\":548:709   */\ntag_33:\n  pop\n    /* \"#utility.yul\":335:715   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":846:1364   */\ntag_25:\n    /* \"#utility.yul\":948:950   */\n  0x1f\n    /* \"#utility.yul\":943:946   */\n  dup3\n    /* \"#utility.yul\":940:951   */\n  gt\n    /* \"#utility.yul\":937:1358   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":984:989   */\n  dup1\n    /* \"#utility.yul\":981:982   */\n  0x00\n    /* \"#utility.yul\":974:990   */\n  mstore\n    /* \"#utility.yul\":1028:1032   */\n  0x20\n    /* \"#utility.yul\":1025:1026   */\n  0x00\n    /* \"#utility.yul\":1015:1033   */\n  keccak256\n    /* \"#utility.yul\":1098:1100   */\n  0x1f\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n    /* \"#utility.yul\":1082:1101   */\n  add\n    /* \"#utility.yul\":1079:1080   */\n  0x05\n    /* \"#utility.yul\":1075:1102   */\n  shr\n    /* \"#utility.yul\":1069:1073   */\n  dup2\n    /* \"#utility.yul\":1065:1103   */\n  add\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1122:1132   */\n  dup6\n    /* \"#utility.yul\":1119:1139   */\n  lt\n    /* \"#utility.yul\":1116:1163   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":1157:1161   */\n  dup1\n    /* \"#utility.yul\":1116:1163   */\ntag_37:\n    /* \"#utility.yul\":1212:1214   */\n  0x1f\n    /* \"#utility.yul\":1207:1210   */\n  dup5\n    /* \"#utility.yul\":1203:1215   */\n  add\n    /* \"#utility.yul\":1200:1201   */\n  0x05\n    /* \"#utility.yul\":1196:1216   */\n  shr\n    /* \"#utility.yul\":1190:1194   */\n  dup3\n    /* \"#utility.yul\":1186:1217   */\n  add\n    /* \"#utility.yul\":1176:1217   */\n  swap2\n  pop\n    /* \"#utility.yul\":1267:1348   */\ntag_38:\n    /* \"#utility.yul\":1285:1287   */\n  dup2\n    /* \"#utility.yul\":1278:1283   */\n  dup2\n    /* \"#utility.yul\":1275:1288   */\n  lt\n    /* \"#utility.yul\":1267:1348   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1344:1345   */\n  0x00\n    /* \"#utility.yul\":1330:1346   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1311:1312   */\n  0x01\n    /* \"#utility.yul\":1300:1313   */\n  add\n    /* \"#utility.yul\":1267:1348   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1271:1274   */\n  pop\n  pop\n    /* \"#utility.yul\":937:1358   */\ntag_36:\n    /* \"#utility.yul\":846:1364   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1540:2839   */\ntag_10:\n    /* \"#utility.yul\":1660:1670   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1682:1712   */\n  dup2\n  gt\n    /* \"#utility.yul\":1679:1735   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1715:1733   */\n  tag_44\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1744:1841   */\n  tag_45\n    /* \"#utility.yul\":1834:1840   */\n  dup2\n    /* \"#utility.yul\":1794:1832   */\n  tag_46\n    /* \"#utility.yul\":1826:1830   */\n  dup5\n    /* \"#utility.yul\":1820:1831   */\n  sload\n    /* \"#utility.yul\":1794:1832   */\n  tag_23\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1788:1792   */\n  dup5\n    /* \"#utility.yul\":1744:1841   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1890:1894   */\n  0x20\n    /* \"#utility.yul\":1921:1923   */\n  0x1f\n    /* \"#utility.yul\":1910:1924   */\n  dup3\n  gt\n    /* \"#utility.yul\":1938:1939   */\n  0x01\n    /* \"#utility.yul\":1933:2582   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2626:2627   */\n  0x00\n    /* \"#utility.yul\":2643:2649   */\n  dup4\n    /* \"#utility.yul\":2640:2729   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":2695:2714   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2689:2715   */\n  mload\n    /* \"#utility.yul\":2640:2729   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":1497:1498   */\n  0x03\n    /* \"#utility.yul\":1493:1504   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1489:1513   */\n  shr\n    /* \"#utility.yul\":1485:1514   */\n  not\n    /* \"#utility.yul\":1475:1515   */\n  and\n    /* \"#utility.yul\":1521:1522   */\n  0x01\n    /* \"#utility.yul\":1517:1528   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1472:1529   */\n  or\n    /* \"#utility.yul\":2742:2823   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1903:2833   */\n  jump(tag_40)\n    /* \"#utility.yul\":1933:2582   */\ntag_48:\n    /* \"#utility.yul\":793:794   */\n  0x00\n    /* \"#utility.yul\":786:800   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":817:835   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1969:1989   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2087:2309   */\ntag_52:\n    /* \"#utility.yul\":2101:2108   */\n  dup3\n    /* \"#utility.yul\":2098:2099   */\n  dup2\n    /* \"#utility.yul\":2095:2109   */\n  lt\n    /* \"#utility.yul\":2087:2309   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2183:2202   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2177:2203   */\n  mload\n    /* \"#utility.yul\":2162:2204   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2275:2295   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2243:2244   */\n  0x01\n    /* \"#utility.yul\":2231:2245   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2117:2129   */\n  add\n    /* \"#utility.yul\":2087:2309   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":2091:2094   */\n  pop\n    /* \"#utility.yul\":2337:2343   */\n  dup5\n    /* \"#utility.yul\":2328:2335   */\n  dup3\n    /* \"#utility.yul\":2325:2344   */\n  lt\n    /* \"#utility.yul\":2322:2523   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2398:2417   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2392:2418   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2481:2482   */\n  0x03\n    /* \"#utility.yul\":2477:2491   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2493:2496   */\n  0xf8\n    /* \"#utility.yul\":2473:2497   */\n  and\n    /* \"#utility.yul\":2469:2506   */\n  shr\n    /* \"#utility.yul\":2465:2507   */\n  not\n    /* \"#utility.yul\":2450:2508   */\n  and\n    /* \"#utility.yul\":2435:2509   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2322:2523   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2569:2570   */\n  0x01\n    /* \"#utility.yul\":2553:2567   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2549:2571   */\n  add\n    /* \"#utility.yul\":2536:2572   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1540:2839   */\n  jump\t// out\n    /* \"#utility.yul\":2844:3047   */\ntag_27:\n    /* \"contracts/bank.sol\":134:3392  contract JVCBank is Ownable, JVCToken {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bank.sol\":134:3392  contract JVCBank is Ownable, JVCToken {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa87430ba\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc634d032\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7b47ec1a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x200d2ed2\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4bff5009\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6281b95b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x69c212f6\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0xf714ce\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e54b872\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/bank.sol\":2639:3019  function withdraw(uint256 amount, address payable addr) public payable verifyAddr(msg.sender) {... */\n    tag_2:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1610:1624   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1603:1625   */\n      iszero\n        /* \"#utility.yul\":1585:1626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1558:1576   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_34\n        /* \"#utility.yul\":1445:1632   */\n      jump\n        /* \"contracts/bank.sol\":1481:1687  function registerUser(string memory uname, address payable addr) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":3124:3149   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3112:3114   */\n      0x20\n        /* \"#utility.yul\":3097:3115   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_34\n        /* \"#utility.yul\":2978:3155   */\n      jump\n        /* \"contracts/bank.sol\":603:623  Status public status */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      sload(0x09)\n      tag_54\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_54:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_37\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":4306:4342   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4294:4296   */\n      0x20\n        /* \"#utility.yul\":4279:4297   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_34\n        /* \"#utility.yul\":4164:4348   */\n      jump\n        /* \"contracts/bank.sol\":1905:2047  function getUserByName(string memory Uname) public view findUserByUname(Uname) returns (User memory) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"contracts/token.sol\":299:408  function transferOwnership_(address _newOwner) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_27\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"contracts/bank.sol\":1722:1869  function getUserByAddress(address userAddress) public view verifyAddr(userAddress) returns (User memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_70\n      tag_83\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_49\n      tag_88\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_27\n      tag_93\n      jump\t// in\n        /* \"contracts/bank.sol\":3117:3203  function burnToken(uint256 amount) public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_27\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5829:5880   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5817:5819   */\n      0x20\n        /* \"#utility.yul\":5802:5820   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_34\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_32\n      tag_106\n      jump\t// in\n        /* \"contracts/bank.sol\":211:248  mapping(address => User) public users */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_34\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_37\n      tag_116\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"contracts/bank.sol\":3025:3111  function mintToken(uint256 amount) public {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_27\n      tag_121\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"contracts/bank.sol\":2089:2594  function deposit() public payable verifyAddr(msg.sender) {... */\n    tag_21:\n      tag_27\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_49\n      tag_127\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_27\n      tag_133\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"contracts/bank.sol\":2639:3019  function withdraw(uint256 amount, address payable addr) public payable verifyAddr(msg.sender) {... */\n    tag_30:\n        /* \"contracts/bank.sol\":2721:2731  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":3362:3379  addr_.code.length */\n      dup1\n      extcodesize\n        /* \"contracts/bank.sol\":3362:3383  addr_.code.length > 0 */\n      iszero\n        /* \"contracts/bank.sol\":1124:1186  require(!isContractAddr(_addr), \"This is a contract address!\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":2761:2772  users[addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":2761:2766  users */\n      0x06\n        /* \"contracts/bank.sol\":2761:2772  users[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":2761:2780  users[addr].balance */\n      0x02\n      add\n      sload\n        /* \"contracts/bank.sol\":2751:2780  amount <= users[addr].balance */\n      dup4\n      gt\n      iszero\n        /* \"contracts/bank.sol\":2743:2805  require(amount <= users[addr].balance, \"Insufficient balance\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7251:7253   */\n      0x20\n        /* \"contracts/bank.sol\":2743:2805  require(amount <= users[addr].balance, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7233:7254   */\n      mstore\n        /* \"#utility.yul\":7290:7292   */\n      0x14\n        /* \"#utility.yul\":7270:7288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7263:7293   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":7309:7327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7302:7352   */\n      mstore\n        /* \"#utility.yul\":7369:7387   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":2743:2805  require(amount <= users[addr].balance, \"Insufficient balance\") */\n      tag_139\n        /* \"#utility.yul\":7049:7393   */\n      jump\n        /* \"contracts/bank.sol\":2743:2805  require(amount <= users[addr].balance, \"Insufficient balance\") */\n    tag_142:\n        /* \"contracts/bank.sol\":2833:2844  maxWithdAmt */\n      sload(0x08)\n        /* \"contracts/bank.sol\":2823:2829  amount */\n      dup4\n        /* \"contracts/bank.sol\":2823:2844  amount <= maxWithdAmt */\n      gt\n      iszero\n        /* \"contracts/bank.sol\":2815:2880  require(amount <= maxWithdAmt, \"Withdrawal amount exceeds limit\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7600:7602   */\n      0x20\n        /* \"contracts/bank.sol\":2815:2880  require(amount <= maxWithdAmt, \"Withdrawal amount exceeds limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7582:7603   */\n      mstore\n        /* \"#utility.yul\":7639:7641   */\n      0x1f\n        /* \"#utility.yul\":7619:7637   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7612:7642   */\n      mstore\n        /* \"#utility.yul\":7678:7711   */\n      0x5769746864726177616c20616d6f756e742065786365656473206c696d697400\n        /* \"#utility.yul\":7658:7676   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7651:7712   */\n      mstore\n        /* \"#utility.yul\":7729:7747   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":2815:2880  require(amount <= maxWithdAmt, \"Withdrawal amount exceeds limit\") */\n      tag_139\n        /* \"#utility.yul\":7398:7753   */\n      jump\n        /* \"contracts/bank.sol\":2815:2880  require(amount <= maxWithdAmt, \"Withdrawal amount exceeds limit\") */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":2890:2901  users[addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":2890:2895  users */\n      0x06\n        /* \"contracts/bank.sol\":2890:2901  users[addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/bank.sol\":2890:2909  users[addr].balance */\n      0x02\n      add\n        /* \"contracts/bank.sol\":2890:2919  users[addr].balance -= amount */\n      dup1\n      sload\n        /* \"contracts/bank.sol\":2913:2919  amount */\n      dup6\n      swap3\n        /* \"contracts/bank.sol\":2890:2901  users[addr] */\n      swap1\n        /* \"contracts/bank.sol\":2890:2919  users[addr].balance -= amount */\n      tag_148\n      swap1\n        /* \"contracts/bank.sol\":2913:2919  amount */\n      dup5\n      swap1\n        /* \"contracts/bank.sol\":2890:2919  users[addr].balance -= amount */\n      tag_149\n      jump\t// in\n    tag_148:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/bank.sol\":2929:2951  transfer(addr, amount) */\n      tag_150\n      swap1\n      pop\n        /* \"contracts/bank.sol\":2938:2942  addr */\n      dup3\n        /* \"contracts/bank.sol\":2944:2950  amount */\n      dup5\n        /* \"contracts/bank.sol\":2929:2937  transfer */\n      tag_117\n        /* \"contracts/bank.sol\":2929:2951  transfer(addr, amount) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"contracts/bank.sol\":2966:3012  WithdrawalSuccessful(addr, msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3124:3149   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":2993:3003  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":2966:3012  WithdrawalSuccessful(addr, msg.sender, amount) */\n      dup5\n      and\n      swap1\n      0x46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d\n      swap1\n        /* \"#utility.yul\":3112:3114   */\n      0x20\n        /* \"#utility.yul\":3097:3115   */\n      add\n        /* \"contracts/bank.sol\":2966:3012  WithdrawalSuccessful(addr, msg.sender, amount) */\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/bank.sol\":2639:3019  function withdraw(uint256 amount, address payable addr) public payable verifyAddr(msg.sender) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_154\n      jump\t// in\n    tag_155:\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_157\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_156)\n    tag_157:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_159:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":1481:1687  function registerUser(string memory uname, address payable addr) public {... */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":1577:1588  users[addr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":1577:1582  users */\n      0x06\n        /* \"contracts/bank.sol\":1577:1588  users[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":1577:1594  users[addr].uName */\n      0x01\n      add\n        /* \"contracts/bank.sol\":1571:1602  bytes(users[addr].uName).length */\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_154\n      jump\t// in\n    tag_165:\n        /* \"contracts/bank.sol\":1571:1607  bytes(users[addr].uName).length == 0 */\n      iszero\n      swap1\n      pop\n        /* \"contracts/bank.sol\":1563:1636  require(bytes(users[addr].uName).length == 0, \"User already registered!\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8610:8612   */\n      0x20\n        /* \"contracts/bank.sol\":1563:1636  require(bytes(users[addr].uName).length == 0, \"User already registered!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8592:8613   */\n      mstore\n        /* \"#utility.yul\":8649:8651   */\n      0x18\n        /* \"#utility.yul\":8629:8647   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8622:8652   */\n      mstore\n        /* \"#utility.yul\":8688:8714   */\n      0x5573657220616c72656164792072656769737465726564210000000000000000\n        /* \"#utility.yul\":8668:8686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8661:8715   */\n      mstore\n        /* \"#utility.yul\":8732:8750   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":1563:1636  require(bytes(users[addr].uName).length == 0, \"User already registered!\") */\n      tag_139\n        /* \"#utility.yul\":8408:8756   */\n      jump\n        /* \"contracts/bank.sol\":1563:1636  require(bytes(users[addr].uName).length == 0, \"User already registered!\") */\n    tag_166:\n        /* \"contracts/bank.sol\":1660:1680  User(addr, uname, 0) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup8\n      dup2\n      mstore\n      0x00\n      dup6\n      dup8\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/bank.sol\":1646:1657  users[addr] */\n      swap3\n      dup4\n      mstore\n        /* \"contracts/bank.sol\":1646:1651  users */\n      0x06\n        /* \"contracts/bank.sol\":1646:1657  users[addr] */\n      swap1\n      swap2\n      mstore\n      swap4\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":1646:1680  users[addr] = User(addr, uname, 0) */\n      dup3\n      mload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      swap2\n      mload\n        /* \"contracts/bank.sol\":1660:1680  User(addr, uname, 0) */\n      swap1\n      swap2\n        /* \"contracts/bank.sol\":1646:1657  users[addr] */\n      swap1\n      0x01\n        /* \"contracts/bank.sol\":1646:1680  users[addr] = User(addr, uname, 0) */\n      dup3\n      add\n      swap1\n      tag_169\n      swap1\n      dup3\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/bank.sol\":1481:1687  function registerUser(string memory uname, address payable addr) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":1905:2047  function getUserByName(string memory Uname) public view findUserByUname(Uname) returns (User memory) {... */\n    tag_73:\n        /* \"contracts/bank.sol\":1993:2004  User memory */\n      tag_179\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_179:\n        /* \"contracts/bank.sol\":1317:1327  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":1311:1328  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":1311:1316  users */\n      0x06\n        /* \"contracts/bank.sol\":1311:1328  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":1311:1334  users[msg.sender].uName */\n      0x01\n      add\n        /* \"contracts/bank.sol\":1305:1342  bytes(users[msg.sender].uName).length */\n      dup1\n      sload\n        /* \"contracts/bank.sol\":1977:1982  Uname */\n      dup4\n      swap2\n        /* \"contracts/bank.sol\":1311:1334  users[msg.sender].uName */\n      swap1\n        /* \"contracts/bank.sol\":1305:1342  bytes(users[msg.sender].uName).length */\n      tag_182\n      swap1\n      tag_154\n      jump\t// in\n    tag_182:\n      swap1\n      pop\n        /* \"contracts/bank.sol\":1346:1347  0 */\n      0x00\n        /* \"contracts/bank.sol\":1305:1347  bytes(users[msg.sender].uName).length != 0 */\n      sub\n        /* \"contracts/bank.sol\":1297:1367  require(bytes(users[msg.sender].uName).length != 0, \"User not found!\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11087:11089   */\n      0x20\n        /* \"contracts/bank.sol\":1297:1367  require(bytes(users[msg.sender].uName).length != 0, \"User not found!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11069:11090   */\n      mstore\n        /* \"#utility.yul\":11126:11128   */\n      0x0f\n        /* \"#utility.yul\":11106:11124   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11099:11129   */\n      mstore\n      shl(0x88, 0x55736572206e6f7420666f756e6421)\n        /* \"#utility.yul\":11145:11163   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11138:11183   */\n      mstore\n        /* \"#utility.yul\":11200:11218   */\n      0x64\n      add\n        /* \"contracts/bank.sol\":1297:1367  require(bytes(users[msg.sender].uName).length != 0, \"User not found!\") */\n      tag_139\n        /* \"#utility.yul\":10885:11224   */\n      jump\n        /* \"contracts/bank.sol\":1297:1367  require(bytes(users[msg.sender].uName).length != 0, \"User not found!\") */\n    tag_183:\n        /* \"contracts/bank.sol\":2029:2039  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":2023:2040  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":2023:2028  users */\n      0x06\n        /* \"contracts/bank.sol\":2023:2040  users[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":2016:2040  return users[msg.sender] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      dup1\n      sload\n        /* \"contracts/bank.sol\":2023:2040  users[msg.sender] */\n      swap2\n      swap3\n        /* \"contracts/bank.sol\":2016:2040  return users[msg.sender] */\n      dup5\n      add\n      swap2\n      tag_187\n      swap1\n      tag_154\n      jump\t// in\n    tag_187:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_154\n      jump\t// in\n    tag_188:\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_190\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_189)\n    tag_190:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_191:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_191\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap2\n      pop\n        /* \"contracts/bank.sol\":1377:1378  _ */\n    tag_186:\n        /* \"contracts/bank.sol\":1905:2047  function getUserByName(string memory Uname) public view findUserByUname(Uname) returns (User memory) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":299:408  function transferOwnership_(address _newOwner) public onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/token.sol\":373:401  transferOwnership(_newOwner) */\n      tag_196\n        /* \"contracts/token.sol\":391:400  _newOwner */\n      dup2\n        /* \"contracts/token.sol\":373:390  transferOwnership */\n      tag_134\n        /* \"contracts/token.sol\":373:401  transferOwnership(_newOwner) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/token.sol\":299:408  function transferOwnership_(address _newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":1722:1869  function getUserByAddress(address userAddress) public view verifyAddr(userAddress) returns (User memory) {... */\n    tag_84:\n        /* \"contracts/bank.sol\":1814:1825  User memory */\n      tag_197\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_197:\n        /* \"contracts/bank.sol\":1792:1803  userAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":3362:3379  addr_.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"contracts/bank.sol\":3362:3383  addr_.code.length > 0 */\n      iszero\n        /* \"contracts/bank.sol\":1124:1186  require(!isContractAddr(_addr), \"This is a contract address!\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/bank.sol\":1844:1862  users[userAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":1844:1849  users */\n      0x06\n        /* \"contracts/bank.sol\":1844:1862  users[userAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/bank.sol\":1837:1862  return users[userAddress] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      dup1\n      sload\n      swap3\n      swap4\n        /* \"contracts/bank.sol\":1844:1862  users[userAddress] */\n      swap3\n        /* \"contracts/bank.sol\":1837:1862  return users[userAddress] */\n      swap2\n      dup5\n      add\n      swap2\n      tag_187\n      swap1\n      tag_154\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bank.sol\":3117:3203  function burnToken(uint256 amount) public {... */\n    tag_98:\n        /* \"contracts/bank.sol\":3169:3196  burn(address(this), amount) */\n      tag_196\n        /* \"contracts/bank.sol\":3182:3186  this */\n      address\n        /* \"contracts/bank.sol\":3189:3195  amount */\n      dup3\n        /* \"contracts/bank.sol\":3169:3173  burn */\n      tag_216\n        /* \"contracts/bank.sol\":3169:3196  burn(address(this), amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n        /* \"contracts/bank.sol\":211:248  mapping(address => User) public users */\n    tag_111:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_224\n      swap1\n      tag_154\n      jump\t// in\n    tag_224:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_225\n      swap1\n      tag_154\n      jump\t// in\n    tag_225:\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_227\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_226)\n    tag_227:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_228:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_228\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/bank.sol\":3025:3111  function mintToken(uint256 amount) public {... */\n    tag_122:\n        /* \"contracts/bank.sol\":3077:3104  mint(address(this), amount) */\n      tag_196\n        /* \"contracts/bank.sol\":3090:3094  this */\n      address\n        /* \"contracts/bank.sol\":3097:3103  amount */\n      dup3\n        /* \"contracts/bank.sol\":3077:3081  mint */\n      tag_234\n        /* \"contracts/bank.sol\":3077:3104  mint(address(this), amount) */\n      jump\t// in\n        /* \"contracts/bank.sol\":2089:2594  function deposit() public payable verifyAddr(msg.sender) {... */\n    tag_124:\n        /* \"contracts/bank.sol\":2134:2144  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":3362:3379  addr_.code.length */\n      dup1\n      extcodesize\n        /* \"contracts/bank.sol\":3362:3383  addr_.code.length > 0 */\n      iszero\n        /* \"contracts/bank.sol\":1124:1186  require(!isContractAddr(_addr), \"This is a contract address!\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_237:\n        /* \"contracts/bank.sol\":2172:2181  minDepAmt */\n      sload(0x07)\n        /* \"contracts/bank.sol\":2160:2169  msg.value */\n      callvalue\n        /* \"contracts/bank.sol\":2160:2181  msg.value < minDepAmt */\n      lt\n        /* \"contracts/bank.sol\":2156:2331  if (msg.value < minDepAmt) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/bank.sol\":2197:2203  status */\n      0x09\n        /* \"contracts/bank.sol\":2197:2219  status = Status.Failed */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/bank.sol\":2206:2219  Status.Failed */\n      0x01\n        /* \"contracts/bank.sol\":2197:2219  status = Status.Failed */\n      or\n      swap1\n      sstore\n        /* \"contracts/bank.sol\":2238:2300  DepositFailed(msg.sender, \"Minimum deposit amount is 0.00038\") */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11431:11433   */\n      0x20\n        /* \"#utility.yul\":11413:11434   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11470:11472   */\n      0x21\n        /* \"#utility.yul\":11450:11468   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11443:11473   */\n      mstore\n        /* \"#utility.yul\":11509:11543   */\n      0x4d696e696d756d206465706f73697420616d6f756e7420697320302e30303033\n        /* \"#utility.yul\":11489:11507   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":11482:11544   */\n      swap2\n      swap1\n      swap2\n      mstore\n      shl(0xfb, 0x07)\n        /* \"#utility.yul\":11575:11577   */\n      0x60\n        /* \"#utility.yul\":11560:11578   */\n      dup3\n      add\n        /* \"#utility.yul\":11553:11584   */\n      mstore\n        /* \"contracts/bank.sol\":2252:2262  msg.sender */\n      caller\n      swap1\n        /* \"contracts/bank.sol\":2238:2300  DepositFailed(msg.sender, \"Minimum deposit amount is 0.00038\") */\n      0xa8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5\n      swap1\n        /* \"#utility.yul\":11616:11619   */\n      0x80\n        /* \"#utility.yul\":11601:11620   */\n      add\n        /* \"contracts/bank.sol\":2238:2300  DepositFailed(msg.sender, \"Minimum deposit amount is 0.00038\") */\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token.sol\":299:408  function transferOwnership_(address _newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/bank.sol\":2156:2331  if (msg.value < minDepAmt) {... */\n    tag_240:\n        /* \"contracts/bank.sol\":2389:2448  transferFrom(payable(msg.sender), address(this), msg.value) */\n      tag_246\n        /* \"contracts/bank.sol\":2410:2420  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":2431:2435  this */\n      address\n        /* \"contracts/bank.sol\":2438:2447  msg.value */\n      callvalue\n        /* \"contracts/bank.sol\":2389:2401  transferFrom */\n      tag_62\n        /* \"contracts/bank.sol\":2389:2448  transferFrom(payable(msg.sender), address(this), msg.value) */\n      jump\t// in\n    tag_246:\n      pop\n        /* \"contracts/bank.sol\":2464:2474  msg.sender */\n      caller\n        /* \"contracts/bank.sol\":2458:2475  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":2458:2463  users */\n      0x06\n        /* \"contracts/bank.sol\":2458:2475  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/bank.sol\":2458:2483  users[msg.sender].balance */\n      0x02\n      add\n        /* \"contracts/bank.sol\":2458:2496  users[msg.sender].balance += msg.value */\n      dup1\n      sload\n        /* \"contracts/bank.sol\":2487:2496  msg.value */\n      callvalue\n      swap3\n        /* \"contracts/bank.sol\":2458:2475  users[msg.sender] */\n      swap1\n        /* \"contracts/bank.sol\":2458:2496  users[msg.sender].balance += msg.value */\n      tag_247\n      swap1\n        /* \"contracts/bank.sol\":2487:2496  msg.value */\n      dup5\n      swap1\n        /* \"contracts/bank.sol\":2458:2496  users[msg.sender].balance += msg.value */\n      tag_248\n      jump\t// in\n    tag_247:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/bank.sol\":2506:2512  status */\n      0x09\n        /* \"contracts/bank.sol\":2506:2532  status = Status.Successful */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/bank.sol\":2515:2532  Status.Successful */\n      0x02\n        /* \"contracts/bank.sol\":2506:2532  status = Status.Successful */\n      or\n      swap1\n      sstore\n        /* \"contracts/bank.sol\":2547:2587  DepositSuccessful(msg.sender, msg.value) */\n      mload(0x40)\n        /* \"contracts/bank.sol\":2577:2586  msg.value */\n      callvalue\n        /* \"#utility.yul\":3124:3149   */\n      dup2\n      mstore\n        /* \"contracts/bank.sol\":2565:2575  msg.sender */\n      caller\n      swap1\n        /* \"contracts/bank.sol\":2547:2587  DepositSuccessful(msg.sender, msg.value) */\n      0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5\n      swap1\n        /* \"#utility.yul\":3112:3114   */\n      0x20\n        /* \"#utility.yul\":3097:3115   */\n      add\n        /* \"contracts/bank.sol\":2547:2587  DepositSuccessful(msg.sender, msg.value) */\n      tag_244\n        /* \"#utility.yul\":2978:3155   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11981:12013   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11963:12014   */\n      mstore\n        /* \"#utility.yul\":12030:12048   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12023:12057   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12073:12091   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12066:12100   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11936:11954   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_139\n        /* \"#utility.yul\":11761:12106   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":414:529  function burn(address fromAddr, uint256 amount) internal virtual onlyOwner {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_286:\n        /* \"contracts/token.sol\":499:522  _burn(fromAddr, amount) */\n      tag_288\n        /* \"contracts/token.sol\":505:513  fromAddr */\n      dup3\n        /* \"contracts/token.sol\":515:521  amount */\n      dup3\n        /* \"contracts/token.sol\":499:504  _burn */\n      tag_289\n        /* \"contracts/token.sol\":499:522  _burn(fromAddr, amount) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/token.sol\":414:529  function burn(address fromAddr, uint256 amount) internal virtual onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":535:646  function mint(address toAddr, uint256 amount) internal virtual onlyOwner {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_291:\n        /* \"contracts/token.sol\":618:639  _mint(toAddr, amount) */\n      tag_288\n        /* \"contracts/token.sol\":624:630  toAddr */\n      dup3\n        /* \"contracts/token.sol\":632:638  amount */\n      dup3\n        /* \"contracts/token.sol\":618:623  _mint */\n      tag_294\n        /* \"contracts/token.sol\":618:639  _mint(toAddr, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_301\n      swap2\n        /* \"#utility.yul\":3124:3149   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3112:3114   */\n      0x20\n        /* \"#utility.yul\":3097:3115   */\n      add\n      swap1\n        /* \"#utility.yul\":2978:3155   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_304\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_304:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_305\n      swap1\n      pop\n      jump\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11981:12013   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11963:12014   */\n      mstore\n        /* \"#utility.yul\":12030:12048   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12023:12057   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12073:12091   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12066:12100   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11936:11954   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_139\n        /* \"#utility.yul\":11761:12106   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_309)\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_151\n      swap2\n        /* \"#utility.yul\":3124:3149   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3112:3114   */\n      0x20\n        /* \"#utility.yul\":3097:3115   */\n      add\n      swap1\n        /* \"#utility.yul\":2978:3155   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_289:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5829:5880   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_139\n        /* \"#utility.yul\":5683:5886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"#utility.yul\":14:153   */\n    tag_319:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":97:128   */\n      dup2\n      and\n        /* \"#utility.yul\":87:129   */\n      dup2\n      eq\n        /* \"#utility.yul\":77:147   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":143:144   */\n      0x00\n        /* \"#utility.yul\":140:141   */\n      dup1\n        /* \"#utility.yul\":133:145   */\n      revert\n        /* \"#utility.yul\":158:541   */\n    tag_29:\n        /* \"#utility.yul\":234:240   */\n      0x00\n        /* \"#utility.yul\":242:248   */\n      dup1\n        /* \"#utility.yul\":295:297   */\n      0x40\n        /* \"#utility.yul\":283:292   */\n      dup4\n        /* \"#utility.yul\":274:281   */\n      dup6\n        /* \"#utility.yul\":270:293   */\n      sub\n        /* \"#utility.yul\":266:298   */\n      slt\n        /* \"#utility.yul\":263:315   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":311:312   */\n      0x00\n        /* \"#utility.yul\":308:309   */\n      dup1\n        /* \"#utility.yul\":301:313   */\n      revert\n        /* \"#utility.yul\":263:315   */\n    tag_331:\n        /* \"#utility.yul\":356:379   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":455:457   */\n      0x20\n        /* \"#utility.yul\":440:458   */\n      dup4\n      add\n        /* \"#utility.yul\":427:459   */\n      calldataload\n        /* \"#utility.yul\":468:509   */\n      tag_332\n        /* \"#utility.yul\":427:459   */\n      dup2\n        /* \"#utility.yul\":468:509   */\n      tag_319\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":528:535   */\n      dup1\n        /* \"#utility.yul\":518:535   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":158:541   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:835   */\n    tag_320:\n        /* \"#utility.yul\":588:591   */\n      0x00\n        /* \"#utility.yul\":626:631   */\n      dup2\n        /* \"#utility.yul\":620:632   */\n      mload\n        /* \"#utility.yul\":653:659   */\n      dup1\n        /* \"#utility.yul\":648:651   */\n      dup5\n        /* \"#utility.yul\":641:660   */\n      mstore\n        /* \"#utility.yul\":709:715   */\n      dup1\n        /* \"#utility.yul\":702:706   */\n      0x20\n        /* \"#utility.yul\":695:700   */\n      dup5\n        /* \"#utility.yul\":691:707   */\n      add\n        /* \"#utility.yul\":684:688   */\n      0x20\n        /* \"#utility.yul\":679:682   */\n      dup7\n        /* \"#utility.yul\":675:689   */\n      add\n        /* \"#utility.yul\":669:716   */\n      mcopy\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":754:758   */\n      0x20\n        /* \"#utility.yul\":745:751   */\n      dup3\n        /* \"#utility.yul\":740:743   */\n      dup7\n        /* \"#utility.yul\":736:752   */\n      add\n        /* \"#utility.yul\":732:759   */\n      add\n        /* \"#utility.yul\":725:763   */\n      mstore\n        /* \"#utility.yul\":824:828   */\n      0x20\n        /* \"#utility.yul\":817:819   */\n      0x1f\n        /* \"#utility.yul\":813:820   */\n      not\n        /* \"#utility.yul\":808:810   */\n      0x1f\n        /* \"#utility.yul\":800:806   */\n      dup4\n        /* \"#utility.yul\":796:811   */\n      add\n        /* \"#utility.yul\":792:821   */\n      and\n        /* \"#utility.yul\":787:790   */\n      dup6\n        /* \"#utility.yul\":783:822   */\n      add\n        /* \"#utility.yul\":779:829   */\n      add\n        /* \"#utility.yul\":772:829   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":546:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":840:1060   */\n    tag_35:\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":978:987   */\n      dup2\n        /* \"#utility.yul\":971:992   */\n      mstore\n        /* \"#utility.yul\":952:956   */\n      0x00\n        /* \"#utility.yul\":1009:1054   */\n      tag_335\n        /* \"#utility.yul\":1050:1052   */\n      0x20\n        /* \"#utility.yul\":1039:1048   */\n      dup4\n        /* \"#utility.yul\":1035:1053   */\n      add\n        /* \"#utility.yul\":1027:1033   */\n      dup5\n        /* \"#utility.yul\":1009:1054   */\n      tag_320\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1001:1054   */\n      swap4\n        /* \"#utility.yul\":840:1060   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1065:1440   */\n    tag_39:\n        /* \"#utility.yul\":1133:1139   */\n      0x00\n        /* \"#utility.yul\":1141:1147   */\n      dup1\n        /* \"#utility.yul\":1194:1196   */\n      0x40\n        /* \"#utility.yul\":1182:1191   */\n      dup4\n        /* \"#utility.yul\":1173:1180   */\n      dup6\n        /* \"#utility.yul\":1169:1192   */\n      sub\n        /* \"#utility.yul\":1165:1197   */\n      slt\n        /* \"#utility.yul\":1162:1214   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1162:1214   */\n    tag_337:\n        /* \"#utility.yul\":1249:1258   */\n      dup3\n        /* \"#utility.yul\":1236:1259   */\n      calldataload\n        /* \"#utility.yul\":1268:1307   */\n      tag_338\n        /* \"#utility.yul\":1301:1306   */\n      dup2\n        /* \"#utility.yul\":1268:1307   */\n      tag_319\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1326:1331   */\n      swap5\n        /* \"#utility.yul\":1404:1406   */\n      0x20\n        /* \"#utility.yul\":1389:1407   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1376:1408   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1065:1440   */\n      jump\t// out\n        /* \"#utility.yul\":1637:1764   */\n    tag_321:\n        /* \"#utility.yul\":1698:1708   */\n      0x4e487b71\n        /* \"#utility.yul\":1693:1696   */\n      0xe0\n        /* \"#utility.yul\":1689:1709   */\n      shl\n        /* \"#utility.yul\":1686:1687   */\n      0x00\n        /* \"#utility.yul\":1679:1710   */\n      mstore\n        /* \"#utility.yul\":1729:1733   */\n      0x41\n        /* \"#utility.yul\":1726:1727   */\n      0x04\n        /* \"#utility.yul\":1719:1734   */\n      mstore\n        /* \"#utility.yul\":1753:1757   */\n      0x24\n        /* \"#utility.yul\":1750:1751   */\n      0x00\n        /* \"#utility.yul\":1743:1758   */\n      revert\n        /* \"#utility.yul\":1769:2495   */\n    tag_322:\n        /* \"#utility.yul\":1812:1817   */\n      0x00\n        /* \"#utility.yul\":1865:1868   */\n      dup3\n        /* \"#utility.yul\":1858:1862   */\n      0x1f\n        /* \"#utility.yul\":1850:1856   */\n      dup4\n        /* \"#utility.yul\":1846:1863   */\n      add\n        /* \"#utility.yul\":1842:1869   */\n      slt\n        /* \"#utility.yul\":1832:1887   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":1883:1884   */\n      0x00\n        /* \"#utility.yul\":1880:1881   */\n      dup1\n        /* \"#utility.yul\":1873:1885   */\n      revert\n        /* \"#utility.yul\":1832:1887   */\n    tag_342:\n        /* \"#utility.yul\":1923:1929   */\n      dup2\n        /* \"#utility.yul\":1910:1930   */\n      calldataload\n        /* \"#utility.yul\":1953:1971   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1945:1951   */\n      dup2\n        /* \"#utility.yul\":1942:1972   */\n      gt\n        /* \"#utility.yul\":1939:1995   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":1975:1993   */\n      tag_344\n      tag_321\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2024:2026   */\n      0x40\n        /* \"#utility.yul\":2018:2027   */\n      mload\n        /* \"#utility.yul\":2116:2118   */\n      0x1f\n        /* \"#utility.yul\":2078:2095   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2074:2105   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2107:2109   */\n      0x3f\n        /* \"#utility.yul\":2070:2110   */\n      add\n        /* \"#utility.yul\":2066:2120   */\n      and\n        /* \"#utility.yul\":2054:2121   */\n      dup2\n      add\n        /* \"#utility.yul\":2151:2169   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2136:2170   */\n      dup2\n      gt\n        /* \"#utility.yul\":2172:2194   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2133:2195   */\n      or\n        /* \"#utility.yul\":2130:2218   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2198:2216   */\n      tag_346\n      tag_321\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2234:2236   */\n      0x40\n        /* \"#utility.yul\":2227:2249   */\n      mstore\n        /* \"#utility.yul\":2258:2280   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2299:2318   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2320:2324   */\n      0x20\n        /* \"#utility.yul\":2295:2325   */\n      add\n        /* \"#utility.yul\":2292:2331   */\n      dup6\n      lt\n        /* \"#utility.yul\":2289:2348   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2344:2345   */\n      0x00\n        /* \"#utility.yul\":2341:2342   */\n      dup1\n        /* \"#utility.yul\":2334:2346   */\n      revert\n        /* \"#utility.yul\":2289:2348   */\n    tag_347:\n        /* \"#utility.yul\":2408:2414   */\n      dup2\n        /* \"#utility.yul\":2401:2405   */\n      0x20\n        /* \"#utility.yul\":2393:2399   */\n      dup6\n        /* \"#utility.yul\":2389:2406   */\n      add\n        /* \"#utility.yul\":2382:2386   */\n      0x20\n        /* \"#utility.yul\":2374:2380   */\n      dup4\n        /* \"#utility.yul\":2370:2387   */\n      add\n        /* \"#utility.yul\":2357:2415   */\n      calldatacopy\n        /* \"#utility.yul\":2463:2464   */\n      0x00\n        /* \"#utility.yul\":2435:2454   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2456:2460   */\n      0x20\n        /* \"#utility.yul\":2431:2461   */\n      add\n        /* \"#utility.yul\":2424:2465   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2439:2445   */\n      swap4\n        /* \"#utility.yul\":1769:2495   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2973   */\n    tag_46:\n        /* \"#utility.yul\":2586:2592   */\n      0x00\n        /* \"#utility.yul\":2594:2600   */\n      dup1\n        /* \"#utility.yul\":2647:2649   */\n      0x40\n        /* \"#utility.yul\":2635:2644   */\n      dup4\n        /* \"#utility.yul\":2626:2633   */\n      dup6\n        /* \"#utility.yul\":2622:2645   */\n      sub\n        /* \"#utility.yul\":2618:2650   */\n      slt\n        /* \"#utility.yul\":2615:2667   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":2663:2664   */\n      0x00\n        /* \"#utility.yul\":2660:2661   */\n      dup1\n        /* \"#utility.yul\":2653:2665   */\n      revert\n        /* \"#utility.yul\":2615:2667   */\n    tag_349:\n        /* \"#utility.yul\":2703:2712   */\n      dup3\n        /* \"#utility.yul\":2690:2713   */\n      calldataload\n        /* \"#utility.yul\":2736:2754   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2728:2734   */\n      dup2\n        /* \"#utility.yul\":2725:2755   */\n      gt\n        /* \"#utility.yul\":2722:2772   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2765:2766   */\n      dup1\n        /* \"#utility.yul\":2758:2770   */\n      revert\n        /* \"#utility.yul\":2722:2772   */\n    tag_350:\n        /* \"#utility.yul\":2791:2841   */\n      tag_351\n        /* \"#utility.yul\":2833:2840   */\n      dup6\n        /* \"#utility.yul\":2824:2830   */\n      dup3\n        /* \"#utility.yul\":2813:2822   */\n      dup7\n        /* \"#utility.yul\":2809:2831   */\n      add\n        /* \"#utility.yul\":2791:2841   */\n      tag_322\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2781:2841   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2891:2893   */\n      0x20\n        /* \"#utility.yul\":2880:2889   */\n      dup4\n        /* \"#utility.yul\":2876:2894   */\n      add\n        /* \"#utility.yul\":2863:2895   */\n      calldataload\n        /* \"#utility.yul\":2904:2943   */\n      tag_332\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2904:2943   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":3292:3630   */\n    tag_57:\n        /* \"#utility.yul\":3434:3436   */\n      0x20\n        /* \"#utility.yul\":3419:3437   */\n      dup2\n      add\n        /* \"#utility.yul\":3467:3468   */\n      0x03\n        /* \"#utility.yul\":3456:3469   */\n      dup4\n      lt\n        /* \"#utility.yul\":3446:3590   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":3512:3522   */\n      0x4e487b71\n        /* \"#utility.yul\":3507:3510   */\n      0xe0\n        /* \"#utility.yul\":3503:3523   */\n      shl\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3493:3524   */\n      mstore\n        /* \"#utility.yul\":3547:3551   */\n      0x21\n        /* \"#utility.yul\":3544:3545   */\n      0x04\n        /* \"#utility.yul\":3537:3552   */\n      mstore\n        /* \"#utility.yul\":3575:3579   */\n      0x24\n        /* \"#utility.yul\":3572:3573   */\n      0x00\n        /* \"#utility.yul\":3565:3580   */\n      revert\n        /* \"#utility.yul\":3446:3590   */\n    tag_356:\n        /* \"#utility.yul\":3599:3624   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":3292:3630   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":3635:4159   */\n    tag_61:\n        /* \"#utility.yul\":3712:3718   */\n      0x00\n        /* \"#utility.yul\":3720:3726   */\n      dup1\n        /* \"#utility.yul\":3728:3734   */\n      0x00\n        /* \"#utility.yul\":3781:3783   */\n      0x60\n        /* \"#utility.yul\":3769:3778   */\n      dup5\n        /* \"#utility.yul\":3760:3767   */\n      dup7\n        /* \"#utility.yul\":3756:3779   */\n      sub\n        /* \"#utility.yul\":3752:3784   */\n      slt\n        /* \"#utility.yul\":3749:3801   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":3797:3798   */\n      0x00\n        /* \"#utility.yul\":3794:3795   */\n      dup1\n        /* \"#utility.yul\":3787:3799   */\n      revert\n        /* \"#utility.yul\":3749:3801   */\n    tag_358:\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3823:3846   */\n      calldataload\n        /* \"#utility.yul\":3855:3894   */\n      tag_359\n        /* \"#utility.yul\":3888:3893   */\n      dup2\n        /* \"#utility.yul\":3855:3894   */\n      tag_319\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3913:3918   */\n      swap3\n      pop\n        /* \"#utility.yul\":3970:3972   */\n      0x20\n        /* \"#utility.yul\":3955:3973   */\n      dup5\n      add\n        /* \"#utility.yul\":3942:3974   */\n      calldataload\n        /* \"#utility.yul\":3983:4024   */\n      tag_360\n        /* \"#utility.yul\":3942:3974   */\n      dup2\n        /* \"#utility.yul\":3983:4024   */\n      tag_319\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3635:4159   */\n      swap3\n      swap6\n        /* \"#utility.yul\":4043:4050   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4123:4125   */\n      0x40\n        /* \"#utility.yul\":4108:4126   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4095:4127   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3635:4159   */\n      jump\t// out\n        /* \"#utility.yul\":4353:4675   */\n    tag_72:\n        /* \"#utility.yul\":4422:4428   */\n      0x00\n        /* \"#utility.yul\":4475:4477   */\n      0x20\n        /* \"#utility.yul\":4463:4472   */\n      dup3\n        /* \"#utility.yul\":4454:4461   */\n      dup5\n        /* \"#utility.yul\":4450:4473   */\n      sub\n        /* \"#utility.yul\":4446:4478   */\n      slt\n        /* \"#utility.yul\":4443:4495   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4491:4492   */\n      0x00\n        /* \"#utility.yul\":4488:4489   */\n      dup1\n        /* \"#utility.yul\":4481:4493   */\n      revert\n        /* \"#utility.yul\":4443:4495   */\n    tag_363:\n        /* \"#utility.yul\":4531:4540   */\n      dup2\n        /* \"#utility.yul\":4518:4541   */\n      calldataload\n        /* \"#utility.yul\":4564:4582   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4556:4562   */\n      dup2\n        /* \"#utility.yul\":4553:4583   */\n      gt\n        /* \"#utility.yul\":4550:4600   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4596:4597   */\n      0x00\n        /* \"#utility.yul\":4593:4594   */\n      dup1\n        /* \"#utility.yul\":4586:4598   */\n      revert\n        /* \"#utility.yul\":4550:4600   */\n    tag_364:\n        /* \"#utility.yul\":4619:4669   */\n      tag_365\n        /* \"#utility.yul\":4661:4668   */\n      dup5\n        /* \"#utility.yul\":4652:4658   */\n      dup3\n        /* \"#utility.yul\":4641:4650   */\n      dup6\n        /* \"#utility.yul\":4637:4659   */\n      add\n        /* \"#utility.yul\":4619:4669   */\n      tag_322\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4609:4669   */\n      swap5\n        /* \"#utility.yul\":4353:4675   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4680:5187   */\n    tag_75:\n        /* \"#utility.yul\":4851:4853   */\n      0x20\n        /* \"#utility.yul\":4833:4854   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4894:4907   */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4890:4929   */\n      and\n        /* \"#utility.yul\":4870:4888   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4863:4930   */\n      mstore\n        /* \"#utility.yul\":4965:4980   */\n      dup3\n      add\n        /* \"#utility.yul\":4959:4981   */\n      mload\n        /* \"#utility.yul\":5017:5021   */\n      0x60\n        /* \"#utility.yul\":5012:5014   */\n      0x40\n        /* \"#utility.yul\":4997:5015   */\n      dup4\n      add\n        /* \"#utility.yul\":4990:5022   */\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":5045:5097   */\n      tag_367\n        /* \"#utility.yul\":5092:5095   */\n      0x80\n        /* \"#utility.yul\":5077:5096   */\n      dup5\n      add\n        /* \"#utility.yul\":4959:4981   */\n      dup3\n        /* \"#utility.yul\":5045:5097   */\n      tag_320\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5031:5097   */\n      swap1\n      pop\n        /* \"#utility.yul\":5153:5155   */\n      0x40\n        /* \"#utility.yul\":5145:5151   */\n      dup5\n        /* \"#utility.yul\":5141:5156   */\n      add\n        /* \"#utility.yul\":5135:5157   */\n      mload\n        /* \"#utility.yul\":5128:5132   */\n      0x60\n        /* \"#utility.yul\":5117:5126   */\n      dup5\n        /* \"#utility.yul\":5113:5133   */\n      add\n        /* \"#utility.yul\":5106:5158   */\n      mstore\n        /* \"#utility.yul\":5175:5181   */\n      dup1\n        /* \"#utility.yul\":5167:5181   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4680:5187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5192:5447   */\n    tag_79:\n        /* \"#utility.yul\":5251:5257   */\n      0x00\n        /* \"#utility.yul\":5304:5306   */\n      0x20\n        /* \"#utility.yul\":5292:5301   */\n      dup3\n        /* \"#utility.yul\":5283:5290   */\n      dup5\n        /* \"#utility.yul\":5279:5302   */\n      sub\n        /* \"#utility.yul\":5275:5307   */\n      slt\n        /* \"#utility.yul\":5272:5324   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":5320:5321   */\n      0x00\n        /* \"#utility.yul\":5317:5318   */\n      dup1\n        /* \"#utility.yul\":5310:5322   */\n      revert\n        /* \"#utility.yul\":5272:5324   */\n    tag_369:\n        /* \"#utility.yul\":5359:5368   */\n      dup2\n        /* \"#utility.yul\":5346:5369   */\n      calldataload\n        /* \"#utility.yul\":5378:5417   */\n      tag_335\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5378:5417   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":5452:5678   */\n    tag_97:\n        /* \"#utility.yul\":5511:5517   */\n      0x00\n        /* \"#utility.yul\":5564:5566   */\n      0x20\n        /* \"#utility.yul\":5552:5561   */\n      dup3\n        /* \"#utility.yul\":5543:5550   */\n      dup5\n        /* \"#utility.yul\":5539:5562   */\n      sub\n        /* \"#utility.yul\":5535:5567   */\n      slt\n        /* \"#utility.yul\":5532:5584   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":5580:5581   */\n      0x00\n        /* \"#utility.yul\":5577:5578   */\n      dup1\n        /* \"#utility.yul\":5570:5582   */\n      revert\n        /* \"#utility.yul\":5532:5584   */\n    tag_372:\n      pop\n        /* \"#utility.yul\":5625:5648   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5452:5678   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5891:6279   */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6096:6128   */\n      dup5\n      and\n        /* \"#utility.yul\":6078:6129   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6165:6167   */\n      0x60\n        /* \"#utility.yul\":6160:6162   */\n      0x20\n        /* \"#utility.yul\":6145:6163   */\n      dup3\n      add\n        /* \"#utility.yul\":6138:6168   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":6185:6230   */\n      tag_375\n      swap1\n        /* \"#utility.yul\":6211:6229   */\n      dup4\n      add\n        /* \"#utility.yul\":6203:6209   */\n      dup6\n        /* \"#utility.yul\":6185:6230   */\n      tag_320\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6177:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":6266:6272   */\n      dup3\n        /* \"#utility.yul\":6261:6263   */\n      0x40\n        /* \"#utility.yul\":6250:6259   */\n      dup4\n        /* \"#utility.yul\":6246:6264   */\n      add\n        /* \"#utility.yul\":6239:6273   */\n      mstore\n        /* \"#utility.yul\":5891:6279   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6284:6688   */\n    tag_128:\n        /* \"#utility.yul\":6352:6358   */\n      0x00\n        /* \"#utility.yul\":6360:6366   */\n      dup1\n        /* \"#utility.yul\":6413:6415   */\n      0x40\n        /* \"#utility.yul\":6401:6410   */\n      dup4\n        /* \"#utility.yul\":6392:6399   */\n      dup6\n        /* \"#utility.yul\":6388:6411   */\n      sub\n        /* \"#utility.yul\":6384:6416   */\n      slt\n        /* \"#utility.yul\":6381:6433   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6429:6430   */\n      0x00\n        /* \"#utility.yul\":6426:6427   */\n      dup1\n        /* \"#utility.yul\":6419:6431   */\n      revert\n        /* \"#utility.yul\":6381:6433   */\n    tag_377:\n        /* \"#utility.yul\":6468:6477   */\n      dup3\n        /* \"#utility.yul\":6455:6478   */\n      calldataload\n        /* \"#utility.yul\":6487:6526   */\n      tag_378\n        /* \"#utility.yul\":6520:6525   */\n      dup2\n        /* \"#utility.yul\":6487:6526   */\n      tag_319\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6545:6550   */\n      swap2\n      pop\n        /* \"#utility.yul\":6602:6604   */\n      0x20\n        /* \"#utility.yul\":6587:6605   */\n      dup4\n      add\n        /* \"#utility.yul\":6574:6606   */\n      calldataload\n        /* \"#utility.yul\":6615:6656   */\n      tag_332\n        /* \"#utility.yul\":6574:6606   */\n      dup2\n        /* \"#utility.yul\":6615:6656   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":6693:7044   */\n    tag_140:\n        /* \"#utility.yul\":6895:6897   */\n      0x20\n        /* \"#utility.yul\":6877:6898   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6934:6936   */\n      0x1b\n        /* \"#utility.yul\":6914:6932   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6907:6937   */\n      mstore\n        /* \"#utility.yul\":6973:7002   */\n      0x54686973206973206120636f6e74726163742061646472657373210000000000\n        /* \"#utility.yul\":6968:6970   */\n      0x40\n        /* \"#utility.yul\":6953:6971   */\n      dup3\n      add\n        /* \"#utility.yul\":6946:7003   */\n      mstore\n        /* \"#utility.yul\":7035:7037   */\n      0x60\n        /* \"#utility.yul\":7020:7038   */\n      add\n      swap1\n        /* \"#utility.yul\":6693:7044   */\n      jump\t// out\n        /* \"#utility.yul\":7758:7885   */\n    tag_323:\n        /* \"#utility.yul\":7819:7829   */\n      0x4e487b71\n        /* \"#utility.yul\":7814:7817   */\n      0xe0\n        /* \"#utility.yul\":7810:7830   */\n      shl\n        /* \"#utility.yul\":7807:7808   */\n      0x00\n        /* \"#utility.yul\":7800:7831   */\n      mstore\n        /* \"#utility.yul\":7850:7854   */\n      0x11\n        /* \"#utility.yul\":7847:7848   */\n      0x04\n        /* \"#utility.yul\":7840:7855   */\n      mstore\n        /* \"#utility.yul\":7874:7878   */\n      0x24\n        /* \"#utility.yul\":7871:7872   */\n      0x00\n        /* \"#utility.yul\":7864:7879   */\n      revert\n        /* \"#utility.yul\":7890:8018   */\n    tag_149:\n        /* \"#utility.yul\":7957:7966   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7978:7989   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7975:8012   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":7992:8010   */\n      tag_159\n      tag_323\n      jump\t// in\n        /* \"#utility.yul\":8023:8403   */\n    tag_154:\n        /* \"#utility.yul\":8102:8103   */\n      0x01\n        /* \"#utility.yul\":8098:8110   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8145:8157   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8166:8227   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":8220:8224   */\n      0x7f\n        /* \"#utility.yul\":8212:8218   */\n      dup3\n        /* \"#utility.yul\":8208:8225   */\n      and\n        /* \"#utility.yul\":8198:8225   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8227   */\n    tag_388:\n        /* \"#utility.yul\":8273:8275   */\n      0x20\n        /* \"#utility.yul\":8265:8271   */\n      dup3\n        /* \"#utility.yul\":8262:8276   */\n      lt\n        /* \"#utility.yul\":8242:8260   */\n      dup2\n        /* \"#utility.yul\":8239:8277   */\n      sub\n        /* \"#utility.yul\":8236:8397   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":8319:8329   */\n      0x4e487b71\n        /* \"#utility.yul\":8314:8317   */\n      0xe0\n        /* \"#utility.yul\":8310:8330   */\n      shl\n        /* \"#utility.yul\":8307:8308   */\n      0x00\n        /* \"#utility.yul\":8300:8331   */\n      mstore\n        /* \"#utility.yul\":8354:8358   */\n      0x22\n        /* \"#utility.yul\":8351:8352   */\n      0x04\n        /* \"#utility.yul\":8344:8359   */\n      mstore\n        /* \"#utility.yul\":8382:8386   */\n      0x24\n        /* \"#utility.yul\":8379:8380   */\n      0x00\n        /* \"#utility.yul\":8372:8387   */\n      revert\n        /* \"#utility.yul\":8887:9405   */\n    tag_325:\n        /* \"#utility.yul\":8989:8991   */\n      0x1f\n        /* \"#utility.yul\":8984:8987   */\n      dup3\n        /* \"#utility.yul\":8981:8992   */\n      gt\n        /* \"#utility.yul\":8978:9399   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":9025:9030   */\n      dup1\n        /* \"#utility.yul\":9022:9023   */\n      0x00\n        /* \"#utility.yul\":9015:9031   */\n      mstore\n        /* \"#utility.yul\":9069:9073   */\n      0x20\n        /* \"#utility.yul\":9066:9067   */\n      0x00\n        /* \"#utility.yul\":9056:9074   */\n      keccak256\n        /* \"#utility.yul\":9139:9141   */\n      0x1f\n        /* \"#utility.yul\":9127:9137   */\n      dup5\n        /* \"#utility.yul\":9123:9142   */\n      add\n        /* \"#utility.yul\":9120:9121   */\n      0x05\n        /* \"#utility.yul\":9116:9143   */\n      shr\n        /* \"#utility.yul\":9110:9114   */\n      dup2\n        /* \"#utility.yul\":9106:9144   */\n      add\n        /* \"#utility.yul\":9175:9179   */\n      0x20\n        /* \"#utility.yul\":9163:9173   */\n      dup6\n        /* \"#utility.yul\":9160:9180   */\n      lt\n        /* \"#utility.yul\":9157:9204   */\n      iszero\n      tag_394\n      jumpi\n      pop\n        /* \"#utility.yul\":9198:9202   */\n      dup1\n        /* \"#utility.yul\":9157:9204   */\n    tag_394:\n        /* \"#utility.yul\":9253:9255   */\n      0x1f\n        /* \"#utility.yul\":9248:9251   */\n      dup5\n        /* \"#utility.yul\":9244:9256   */\n      add\n        /* \"#utility.yul\":9241:9242   */\n      0x05\n        /* \"#utility.yul\":9237:9257   */\n      shr\n        /* \"#utility.yul\":9231:9235   */\n      dup3\n        /* \"#utility.yul\":9227:9258   */\n      add\n        /* \"#utility.yul\":9217:9258   */\n      swap2\n      pop\n        /* \"#utility.yul\":9308:9389   */\n    tag_395:\n        /* \"#utility.yul\":9326:9328   */\n      dup2\n        /* \"#utility.yul\":9319:9324   */\n      dup2\n        /* \"#utility.yul\":9316:9329   */\n      lt\n        /* \"#utility.yul\":9308:9389   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":9385:9386   */\n      0x00\n        /* \"#utility.yul\":9371:9387   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9352:9353   */\n      0x01\n        /* \"#utility.yul\":9341:9354   */\n      add\n        /* \"#utility.yul\":9308:9389   */\n      jump(tag_395)\n    tag_397:\n        /* \"#utility.yul\":9312:9315   */\n      pop\n      pop\n        /* \"#utility.yul\":8887:9405   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9581:10880   */\n    tag_170:\n        /* \"#utility.yul\":9707:9710   */\n      dup2\n        /* \"#utility.yul\":9701:9711   */\n      mload\n        /* \"#utility.yul\":9734:9752   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9726:9732   */\n      dup2\n        /* \"#utility.yul\":9723:9753   */\n      gt\n        /* \"#utility.yul\":9720:9776   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9756:9774   */\n      tag_401\n      tag_321\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9785:9882   */\n      tag_402\n        /* \"#utility.yul\":9875:9881   */\n      dup2\n        /* \"#utility.yul\":9835:9873   */\n      tag_403\n        /* \"#utility.yul\":9867:9871   */\n      dup5\n        /* \"#utility.yul\":9861:9872   */\n      sload\n        /* \"#utility.yul\":9835:9873   */\n      tag_154\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9829:9833   */\n      dup5\n        /* \"#utility.yul\":9785:9882   */\n      tag_325\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9931:9935   */\n      0x20\n        /* \"#utility.yul\":9962:9964   */\n      0x1f\n        /* \"#utility.yul\":9951:9965   */\n      dup3\n      gt\n        /* \"#utility.yul\":9979:9980   */\n      0x01\n        /* \"#utility.yul\":9974:10623   */\n      dup2\n      eq\n      tag_405\n      jumpi\n        /* \"#utility.yul\":10667:10668   */\n      0x00\n        /* \"#utility.yul\":10684:10690   */\n      dup4\n        /* \"#utility.yul\":10681:10770   */\n      iszero\n      tag_406\n      jumpi\n      pop\n        /* \"#utility.yul\":10736:10755   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":10730:10756   */\n      mload\n        /* \"#utility.yul\":10681:10770   */\n    tag_406:\n      not(0x00)\n        /* \"#utility.yul\":9538:9539   */\n      0x03\n        /* \"#utility.yul\":9534:9545   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":9530:9554   */\n      shr\n        /* \"#utility.yul\":9526:9555   */\n      not\n        /* \"#utility.yul\":9516:9556   */\n      and\n        /* \"#utility.yul\":9562:9563   */\n      0x01\n        /* \"#utility.yul\":9558:9569   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":9513:9570   */\n      or\n        /* \"#utility.yul\":10783:10864   */\n      dup5\n      sstore\n        /* \"#utility.yul\":9944:10874   */\n      jump(tag_397)\n        /* \"#utility.yul\":9974:10623   */\n    tag_405:\n        /* \"#utility.yul\":8834:8835   */\n      0x00\n        /* \"#utility.yul\":8827:8841   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":8871:8875   */\n      0x20\n        /* \"#utility.yul\":8858:8876   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":10010:10030   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":10128:10350   */\n    tag_409:\n        /* \"#utility.yul\":10142:10149   */\n      dup3\n        /* \"#utility.yul\":10139:10140   */\n      dup2\n        /* \"#utility.yul\":10136:10150   */\n      lt\n        /* \"#utility.yul\":10128:10350   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":10224:10243   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":10218:10244   */\n      mload\n        /* \"#utility.yul\":10203:10245   */\n      dup3\n      sstore\n        /* \"#utility.yul\":10331:10335   */\n      0x20\n        /* \"#utility.yul\":10316:10336   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":10284:10285   */\n      0x01\n        /* \"#utility.yul\":10272:10286   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":10158:10170   */\n      add\n        /* \"#utility.yul\":10128:10350   */\n      jump(tag_409)\n    tag_411:\n        /* \"#utility.yul\":10132:10135   */\n      pop\n        /* \"#utility.yul\":10378:10384   */\n      dup5\n        /* \"#utility.yul\":10369:10376   */\n      dup3\n        /* \"#utility.yul\":10366:10385   */\n      lt\n        /* \"#utility.yul\":10363:10564   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":10439:10458   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":10433:10459   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10522:10523   */\n      0x03\n        /* \"#utility.yul\":10518:10532   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":10534:10537   */\n      0xf8\n        /* \"#utility.yul\":10514:10538   */\n      and\n        /* \"#utility.yul\":10510:10547   */\n      shr\n        /* \"#utility.yul\":10506:10548   */\n      not\n        /* \"#utility.yul\":10491:10549   */\n      and\n        /* \"#utility.yul\":10476:10550   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10363:10564   */\n    tag_412:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10610:10611   */\n      0x01\n        /* \"#utility.yul\":10594:10608   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":10590:10612   */\n      add\n        /* \"#utility.yul\":10577:10613   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":9581:10880   */\n      jump\t// out\n        /* \"#utility.yul\":11631:11756   */\n    tag_248:\n        /* \"#utility.yul\":11696:11705   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11717:11727   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11714:11750   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":11730:11748   */\n      tag_159\n      tag_323\n      jump\t// in\n\n    auxdata: 0xa26469706673582212206ae6381d32b93ca389faf351e1f7a7359686d5cbe9cd917e25122dfd2fb52b6f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1036": {
									"entryPoint": null,
									"id": 1036,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1275": {
									"entryPoint": null,
									"id": 1275,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 225,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3049:8",
										"nodeType": "YulBlock",
										"src": "0:3049:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:103:8",
													"nodeType": "YulBlock",
													"src": "95:103:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:8",
																"nodeType": "YulBlock",
																"src": "141:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:8",
																					"nodeType": "YulLiteral",
																					"src": "150:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:8",
																					"nodeType": "YulLiteral",
																					"src": "153:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:8"
																			},
																			"nativeSrc": "143:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:8"
																		},
																		"nativeSrc": "143:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:8"
																		},
																		"nativeSrc": "112:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "137:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:8"
																},
																"nativeSrc": "108:32:8",
																"nodeType": "YulFunctionCall",
																"src": "108:32:8"
															},
															"nativeSrc": "105:52:8",
															"nodeType": "YulIf",
															"src": "105:52:8"
														},
														{
															"nativeSrc": "166:26:8",
															"nodeType": "YulAssignment",
															"src": "166:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "182:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "176:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:8"
																},
																"nativeSrc": "176:16:8",
																"nodeType": "YulFunctionCall",
																"src": "176:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:8",
														"nodeType": "YulTypedName",
														"src": "61:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:8",
														"nodeType": "YulTypedName",
														"src": "72:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:8",
														"nodeType": "YulTypedName",
														"src": "84:6:8",
														"type": ""
													}
												],
												"src": "14:184:8"
											},
											{
												"body": {
													"nativeSrc": "235:95:8",
													"nodeType": "YulBlock",
													"src": "235:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "252:1:8",
																		"nodeType": "YulLiteral",
																		"src": "252:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "259:3:8",
																				"nodeType": "YulLiteral",
																				"src": "259:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "264:10:8",
																				"nodeType": "YulLiteral",
																				"src": "264:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "255:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:8"
																		},
																		"nativeSrc": "255:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "255:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "245:6:8"
																},
																"nativeSrc": "245:31:8",
																"nodeType": "YulFunctionCall",
																"src": "245:31:8"
															},
															"nativeSrc": "245:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "245:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "292:1:8",
																		"nodeType": "YulLiteral",
																		"src": "292:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:4:8",
																		"nodeType": "YulLiteral",
																		"src": "295:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "285:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "285:6:8"
																},
																"nativeSrc": "285:15:8",
																"nodeType": "YulFunctionCall",
																"src": "285:15:8"
															},
															"nativeSrc": "285:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "285:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "316:1:8",
																		"nodeType": "YulLiteral",
																		"src": "316:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "319:4:8",
																		"nodeType": "YulLiteral",
																		"src": "319:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "309:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "309:6:8"
																},
																"nativeSrc": "309:15:8",
																"nodeType": "YulFunctionCall",
																"src": "309:15:8"
															},
															"nativeSrc": "309:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "309:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "203:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "203:127:8"
											},
											{
												"body": {
													"nativeSrc": "390:325:8",
													"nodeType": "YulBlock",
													"src": "390:325:8",
													"statements": [
														{
															"nativeSrc": "400:22:8",
															"nodeType": "YulAssignment",
															"src": "400:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "414:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "417:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "417:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "410:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "410:3:8"
																},
																"nativeSrc": "410:12:8",
																"nodeType": "YulFunctionCall",
																"src": "410:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "400:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:8"
																}
															]
														},
														{
															"nativeSrc": "431:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "431:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "461:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "461:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "467:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "457:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:8"
																},
																"nativeSrc": "457:12:8",
																"nodeType": "YulFunctionCall",
																"src": "457:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "435:18:8",
																	"nodeType": "YulTypedName",
																	"src": "435:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "508:31:8",
																"nodeType": "YulBlock",
																"src": "508:31:8",
																"statements": [
																	{
																		"nativeSrc": "510:27:8",
																		"nodeType": "YulAssignment",
																		"src": "510:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "524:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "524:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "532:4:8",
																					"nodeType": "YulLiteral",
																					"src": "532:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:3:8"
																			},
																			"nativeSrc": "520:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "520:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "510:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "510:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "488:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "488:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "481:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:8"
																},
																"nativeSrc": "481:26:8",
																"nodeType": "YulFunctionCall",
																"src": "481:26:8"
															},
															"nativeSrc": "478:61:8",
															"nodeType": "YulIf",
															"src": "478:61:8"
														},
														{
															"body": {
																"nativeSrc": "598:111:8",
																"nodeType": "YulBlock",
																"src": "598:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "619:1:8",
																					"nodeType": "YulLiteral",
																					"src": "619:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "626:3:8",
																							"nodeType": "YulLiteral",
																							"src": "626:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "631:10:8",
																							"nodeType": "YulLiteral",
																							"src": "631:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "622:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "622:3:8"
																					},
																					"nativeSrc": "622:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "622:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "612:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:8"
																			},
																			"nativeSrc": "612:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "612:31:8"
																		},
																		"nativeSrc": "612:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "612:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "663:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "666:4:8",
																					"nodeType": "YulLiteral",
																					"src": "666:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "656:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:6:8"
																			},
																			"nativeSrc": "656:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "656:15:8"
																		},
																		"nativeSrc": "656:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "656:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "691:1:8",
																					"nodeType": "YulLiteral",
																					"src": "691:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "694:4:8",
																					"nodeType": "YulLiteral",
																					"src": "694:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "684:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "684:6:8"
																			},
																			"nativeSrc": "684:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "684:15:8"
																		},
																		"nativeSrc": "684:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "684:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "554:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "554:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "577:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "585:2:8",
																				"nodeType": "YulLiteral",
																				"src": "585:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "574:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "574:2:8"
																		},
																		"nativeSrc": "574:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "574:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "551:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "551:2:8"
																},
																"nativeSrc": "551:38:8",
																"nodeType": "YulFunctionCall",
																"src": "551:38:8"
															},
															"nativeSrc": "548:161:8",
															"nodeType": "YulIf",
															"src": "548:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "335:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "370:4:8",
														"nodeType": "YulTypedName",
														"src": "370:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "379:6:8",
														"nodeType": "YulTypedName",
														"src": "379:6:8",
														"type": ""
													}
												],
												"src": "335:380:8"
											},
											{
												"body": {
													"nativeSrc": "776:65:8",
													"nodeType": "YulBlock",
													"src": "776:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "793:1:8",
																		"nodeType": "YulLiteral",
																		"src": "793:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "796:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "796:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:8"
																},
																"nativeSrc": "786:14:8",
																"nodeType": "YulFunctionCall",
																"src": "786:14:8"
															},
															"nativeSrc": "786:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "786:14:8"
														},
														{
															"nativeSrc": "809:26:8",
															"nodeType": "YulAssignment",
															"src": "809:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "827:1:8",
																		"nodeType": "YulLiteral",
																		"src": "827:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:4:8",
																		"nodeType": "YulLiteral",
																		"src": "830:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "817:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "817:9:8"
																},
																"nativeSrc": "817:18:8",
																"nodeType": "YulFunctionCall",
																"src": "817:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "720:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "759:3:8",
														"nodeType": "YulTypedName",
														"src": "759:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "767:4:8",
														"nodeType": "YulTypedName",
														"src": "767:4:8",
														"type": ""
													}
												],
												"src": "720:121:8"
											},
											{
												"body": {
													"nativeSrc": "927:437:8",
													"nodeType": "YulBlock",
													"src": "927:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "960:398:8",
																"nodeType": "YulBlock",
																"src": "960:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "981:1:8",
																					"nodeType": "YulLiteral",
																					"src": "981:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "984:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "984:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "974:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "974:6:8"
																			},
																			"nativeSrc": "974:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "974:16:8"
																		},
																		"nativeSrc": "974:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "974:16:8"
																	},
																	{
																		"nativeSrc": "1003:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1003:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1025:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1025:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1028:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1028:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1015:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:8"
																			},
																			"nativeSrc": "1015:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1015:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1007:4:8",
																				"nodeType": "YulTypedName",
																				"src": "1007:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1046:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1046:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1069:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1069:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1079:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1079:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1086:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1086:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1098:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1098:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1082:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:8"
																							},
																							"nativeSrc": "1082:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1075:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1075:3:8"
																					},
																					"nativeSrc": "1075:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1075:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1065:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:8"
																			},
																			"nativeSrc": "1065:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1065:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1050:11:8",
																				"nodeType": "YulTypedName",
																				"src": "1050:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1140:23:8",
																			"nodeType": "YulBlock",
																			"src": "1140:23:8",
																			"statements": [
																				{
																					"nativeSrc": "1142:19:8",
																					"nodeType": "YulAssignment",
																					"src": "1142:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1157:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1157:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1142:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "1142:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1122:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "1122:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1119:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1119:2:8"
																			},
																			"nativeSrc": "1119:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1119:20:8"
																		},
																		"nativeSrc": "1116:47:8",
																		"nodeType": "YulIf",
																		"src": "1116:47:8"
																	},
																	{
																		"nativeSrc": "1176:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1176:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1190:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1190:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1200:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1200:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1207:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1207:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1212:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1212:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1203:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1203:3:8"
																							},
																							"nativeSrc": "1203:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1203:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1196:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1196:3:8"
																					},
																					"nativeSrc": "1196:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1196:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1186:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1186:3:8"
																			},
																			"nativeSrc": "1186:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1180:2:8",
																				"nodeType": "YulTypedName",
																				"src": "1180:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1230:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1230:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1243:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "1243:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1234:5:8",
																				"nodeType": "YulTypedName",
																				"src": "1234:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1328:20:8",
																			"nodeType": "YulBlock",
																			"src": "1328:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1337:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1337:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1344:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1344:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1330:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1330:6:8"
																						},
																						"nativeSrc": "1330:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1330:16:8"
																					},
																					"nativeSrc": "1330:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1330:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1278:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1278:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1285:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1285:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1275:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1275:2:8"
																			},
																			"nativeSrc": "1275:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1275:13:8"
																		},
																		"nativeSrc": "1267:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1289:26:8",
																			"nodeType": "YulBlock",
																			"src": "1289:26:8",
																			"statements": [
																				{
																					"nativeSrc": "1291:22:8",
																					"nodeType": "YulAssignment",
																					"src": "1291:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1304:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1304:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1311:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1311:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1300:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:8"
																						},
																						"nativeSrc": "1300:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1291:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1291:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1271:3:8",
																			"nodeType": "YulBlock",
																			"src": "1271:3:8",
																			"statements": []
																		},
																		"src": "1267:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "943:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "943:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:2:8",
																		"nodeType": "YulLiteral",
																		"src": "948:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "940:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "940:2:8"
																},
																"nativeSrc": "940:11:8",
																"nodeType": "YulFunctionCall",
																"src": "940:11:8"
															},
															"nativeSrc": "937:421:8",
															"nodeType": "YulIf",
															"src": "937:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "846:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "899:5:8",
														"nodeType": "YulTypedName",
														"src": "899:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "906:3:8",
														"nodeType": "YulTypedName",
														"src": "906:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "911:10:8",
														"nodeType": "YulTypedName",
														"src": "911:10:8",
														"type": ""
													}
												],
												"src": "846:518:8"
											},
											{
												"body": {
													"nativeSrc": "1454:81:8",
													"nodeType": "YulBlock",
													"src": "1454:81:8",
													"statements": [
														{
															"nativeSrc": "1464:65:8",
															"nodeType": "YulAssignment",
															"src": "1464:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1479:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1479:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1497:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1497:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1500:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1500:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1493:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1493:3:8"
																								},
																								"nativeSrc": "1493:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1493:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1510:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1510:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1506:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1506:3:8"
																								},
																								"nativeSrc": "1506:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1506:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1489:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1489:3:8"
																						},
																						"nativeSrc": "1489:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1489:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1485:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1485:3:8"
																				},
																				"nativeSrc": "1485:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1485:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1475:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:8"
																		},
																		"nativeSrc": "1475:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1475:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1521:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1521:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1524:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1524:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1517:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:8"
																		},
																		"nativeSrc": "1517:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1472:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1472:2:8"
																},
																"nativeSrc": "1472:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1472:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1464:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1464:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1369:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1431:4:8",
														"nodeType": "YulTypedName",
														"src": "1431:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1437:3:8",
														"nodeType": "YulTypedName",
														"src": "1437:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1445:4:8",
														"nodeType": "YulTypedName",
														"src": "1445:4:8",
														"type": ""
													}
												],
												"src": "1369:166:8"
											},
											{
												"body": {
													"nativeSrc": "1636:1203:8",
													"nodeType": "YulBlock",
													"src": "1636:1203:8",
													"statements": [
														{
															"nativeSrc": "1646:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1646:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1666:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1666:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1660:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1660:5:8"
																},
																"nativeSrc": "1660:10:8",
																"nodeType": "YulFunctionCall",
																"src": "1660:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1650:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1650:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1713:22:8",
																"nodeType": "YulBlock",
																"src": "1713:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1715:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1715:16:8"
																			},
																			"nativeSrc": "1715:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1715:18:8"
																		},
																		"nativeSrc": "1715:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1715:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1685:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1685:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1701:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1701:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1705:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1705:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1697:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1697:3:8"
																				},
																				"nativeSrc": "1697:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1697:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1709:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1709:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1693:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1693:3:8"
																		},
																		"nativeSrc": "1693:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1693:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1682:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1682:2:8"
																},
																"nativeSrc": "1682:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1682:30:8"
															},
															"nativeSrc": "1679:56:8",
															"nodeType": "YulIf",
															"src": "1679:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1788:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1788:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1826:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1826:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1820:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1820:5:8"
																				},
																				"nativeSrc": "1820:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1820:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1794:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "1794:25:8"
																		},
																		"nativeSrc": "1794:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1794:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1834:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1744:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1744:43:8"
																},
																"nativeSrc": "1744:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1744:97:8"
															},
															"nativeSrc": "1744:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "1744:97:8"
														},
														{
															"nativeSrc": "1850:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1850:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1867:1:8",
																"nodeType": "YulLiteral",
																"src": "1867:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1854:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1854:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1877:17:8",
															"nodeType": "YulAssignment",
															"src": "1877:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1890:4:8",
																"nodeType": "YulLiteral",
																"src": "1890:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1877:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1877:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1940:642:8",
																		"nodeType": "YulBlock",
																		"src": "1940:642:8",
																		"statements": [
																			{
																				"nativeSrc": "1954:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1954:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1973:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1973:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1985:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1985:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1981:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1981:3:8"
																							},
																							"nativeSrc": "1981:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1981:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1969:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1969:3:8"
																					},
																					"nativeSrc": "1969:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1969:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1958:7:8",
																						"nodeType": "YulTypedName",
																						"src": "1958:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2002:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2002:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2046:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2046:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2016:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "2016:29:8"
																					},
																					"nativeSrc": "2016:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2016:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2006:6:8",
																						"nodeType": "YulTypedName",
																						"src": "2006:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2064:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2064:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2073:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2068:1:8",
																						"nodeType": "YulTypedName",
																						"src": "2068:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2144:165:8",
																					"nodeType": "YulBlock",
																					"src": "2144:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2169:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2169:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2187:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "2187:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2192:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "2192:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2183:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2183:3:8"
																												},
																												"nativeSrc": "2183:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2183:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2177:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "2177:5:8"
																										},
																										"nativeSrc": "2177:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2177:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2162:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2162:6:8"
																								},
																								"nativeSrc": "2162:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2162:42:8"
																							},
																							"nativeSrc": "2162:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2162:42:8"
																						},
																						{
																							"nativeSrc": "2221:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2221:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2235:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2235:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2243:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2243:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2231:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2231:3:8"
																								},
																								"nativeSrc": "2231:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2231:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2221:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2221:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2262:33:8",
																							"nodeType": "YulAssignment",
																							"src": "2262:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2279:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "2279:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2290:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2290:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2275:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2275:3:8"
																								},
																								"nativeSrc": "2275:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2275:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2262:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2262:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2098:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "2098:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2101:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2101:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2095:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2095:2:8"
																					},
																					"nativeSrc": "2095:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2095:14:8"
																				},
																				"nativeSrc": "2087:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2110:21:8",
																					"nodeType": "YulBlock",
																					"src": "2110:21:8",
																					"statements": [
																						{
																							"nativeSrc": "2112:17:8",
																							"nodeType": "YulAssignment",
																							"src": "2112:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2121:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "2121:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2124:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2124:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2117:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2117:3:8"
																								},
																								"nativeSrc": "2117:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2117:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2112:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "2112:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2091:3:8",
																					"nodeType": "YulBlock",
																					"src": "2091:3:8",
																					"statements": []
																				},
																				"src": "2087:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "2357:166:8",
																					"nodeType": "YulBlock",
																					"src": "2357:166:8",
																					"statements": [
																						{
																							"nativeSrc": "2375:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2375:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2402:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2402:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2407:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2407:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2398:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2398:3:8"
																										},
																										"nativeSrc": "2398:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2398:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2392:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2392:5:8"
																								},
																								"nativeSrc": "2392:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2392:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2379:9:8",
																									"nodeType": "YulTypedName",
																									"src": "2379:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2442:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2442:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2454:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2454:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2481:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "2481:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2484:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "2484:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2477:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "2477:3:8"
																																		},
																																		"nativeSrc": "2477:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2477:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2493:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2493:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2473:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2473:3:8"
																																},
																																"nativeSrc": "2473:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2473:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2503:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2503:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2499:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2499:3:8"
																																},
																																"nativeSrc": "2499:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2499:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2469:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "2469:3:8"
																														},
																														"nativeSrc": "2469:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "2469:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2465:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2465:3:8"
																												},
																												"nativeSrc": "2465:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2465:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2450:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2450:3:8"
																										},
																										"nativeSrc": "2450:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2450:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2435:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2435:6:8"
																								},
																								"nativeSrc": "2435:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2435:74:8"
																							},
																							"nativeSrc": "2435:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2435:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2328:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2328:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2337:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2337:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2325:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2325:2:8"
																					},
																					"nativeSrc": "2325:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2325:19:8"
																				},
																				"nativeSrc": "2322:201:8",
																				"nodeType": "YulIf",
																				"src": "2322:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2543:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2543:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2557:1:8",
																											"nodeType": "YulLiteral",
																											"src": "2557:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2560:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2560:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2553:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2553:3:8"
																									},
																									"nativeSrc": "2553:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2553:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2569:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2569:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2549:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2549:3:8"
																							},
																							"nativeSrc": "2549:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2549:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2536:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2536:6:8"
																					},
																					"nativeSrc": "2536:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2536:36:8"
																				},
																				"nativeSrc": "2536:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2536:36:8"
																			}
																		]
																	},
																	"nativeSrc": "1933:649:8",
																	"nodeType": "YulCase",
																	"src": "1933:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1938:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1938:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2599:234:8",
																		"nodeType": "YulBlock",
																		"src": "2599:234:8",
																		"statements": [
																			{
																				"nativeSrc": "2613:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2613:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2626:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2617:5:8",
																						"nodeType": "YulTypedName",
																						"src": "2617:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2662:67:8",
																					"nodeType": "YulBlock",
																					"src": "2662:67:8",
																					"statements": [
																						{
																							"nativeSrc": "2680:35:8",
																							"nodeType": "YulAssignment",
																							"src": "2680:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2699:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2699:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2704:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2704:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2695:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2695:3:8"
																										},
																										"nativeSrc": "2695:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2695:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2689:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2689:5:8"
																								},
																								"nativeSrc": "2689:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2689:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2680:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2680:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2643:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2643:6:8"
																				},
																				"nativeSrc": "2640:89:8",
																				"nodeType": "YulIf",
																				"src": "2640:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2749:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2749:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2808:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2808:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2815:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2815:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2755:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "2755:52:8"
																							},
																							"nativeSrc": "2755:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2755:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2742:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2742:6:8"
																					},
																					"nativeSrc": "2742:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2742:81:8"
																				},
																				"nativeSrc": "2742:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2742:81:8"
																			}
																		]
																	},
																	"nativeSrc": "2591:242:8",
																	"nodeType": "YulCase",
																	"src": "2591:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1913:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1921:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1921:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1910:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1910:2:8"
																},
																"nativeSrc": "1910:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1910:14:8"
															},
															"nativeSrc": "1903:930:8",
															"nodeType": "YulSwitch",
															"src": "1903:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1540:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1621:4:8",
														"nodeType": "YulTypedName",
														"src": "1621:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1627:3:8",
														"nodeType": "YulTypedName",
														"src": "1627:3:8",
														"type": ""
													}
												],
												"src": "1540:1299:8"
											},
											{
												"body": {
													"nativeSrc": "2945:102:8",
													"nodeType": "YulBlock",
													"src": "2945:102:8",
													"statements": [
														{
															"nativeSrc": "2955:26:8",
															"nodeType": "YulAssignment",
															"src": "2955:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2967:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2967:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2978:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2978:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2963:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2963:3:8"
																},
																"nativeSrc": "2963:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2963:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2955:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2955:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2997:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2997:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3012:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3012:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3028:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3028:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3033:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3033:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3024:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3024:3:8"
																						},
																						"nativeSrc": "3024:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3024:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3037:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3037:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3020:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3020:3:8"
																				},
																				"nativeSrc": "3020:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3020:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3008:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:8"
																		},
																		"nativeSrc": "3008:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2990:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:8"
																},
																"nativeSrc": "2990:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2990:51:8"
															},
															"nativeSrc": "2990:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2990:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2844:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2914:9:8",
														"nodeType": "YulTypedName",
														"src": "2914:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2925:6:8",
														"nodeType": "YulTypedName",
														"src": "2925:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2936:4:8",
														"nodeType": "YulTypedName",
														"src": "2936:4:8",
														"type": ""
													}
												],
												"src": "2844:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526601599ba503c000600755670de0b6b3a7640000600855348015610026575f80fd5b506040516116ef3803806116ef83398101604081905261004591610132565b803360405180604001604052806008815260200167252b21aa37b5b2b760c11b815250604051806040016040528060038152602001624a564360e81b815250816003908161009391906101e1565b5060046100a082826101e1565b5050506001600160a01b0381166100d057604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100d9816100e1565b50505061029b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208284031215610142575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061017157607f821691505b60208210810361018f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101dc57805f5260205f20601f840160051c810160208510156101ba5750805b601f840160051c820191505b818110156101d9575f81556001016101c6565b50505b505050565b81516001600160401b038111156101fa576101fa610149565b61020e81610208845461015d565b84610195565b6020601f821160018114610240575f83156102295750848201515b5f19600385901b1c1916600184901b1784556101d9565b5f84815260208120601f198516915b8281101561026f578785015182556020948501946001909201910161024f565b508482101561028c57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b611447806102a85f395ff3fe608060405260043610610130575f3560e01c806370a08231116100a8578063a87430ba1161006d578063a87430ba1461034b578063a9059cbb14610379578063c634d03214610398578063d0e30db0146103b7578063dd62ed3e146103bf578063f2fde38b14610403575f80fd5b806370a08231146102a9578063715018a6146102dd5780637b47ec1a146102f15780638da5cb5b1461031057806395d89b4114610337575f80fd5b8063200d2ed2116100f9578063200d2ed2146101df57806323b872dd14610205578063313ce567146102245780634bff50091461023f5780636281b95b1461026b57806369c212f61461028a575f80fd5b8062f714ce1461013457806306fdde0314610149578063095ea7b3146101735780630e54b872146101a257806318160ddd146101c1575b5f80fd5b610147610142366004610f74565b610422565b005b348015610154575f80fd5b5061015d61057f565b60405161016a9190610fd0565b60405180910390f35b34801561017e575f80fd5b5061019261018d366004610fe9565b61060f565b604051901515815260200161016a565b3480156101ad575f80fd5b506101476101bc3660046110b2565b610628565b3480156101cc575f80fd5b506002545b60405190815260200161016a565b3480156101ea575f80fd5b506009546101f89060ff1681565b60405161016a91906110f6565b348015610210575f80fd5b5061019261021f36600461111c565b61070a565b34801561022f575f80fd5b506040516012815260200161016a565b34801561024a575f80fd5b5061025e61025936600461115a565b61072d565b60405161016a9190611194565b348015610276575f80fd5b506101476102853660046111d7565b610888565b348015610295575f80fd5b5061025e6102a43660046111d7565b61089c565b3480156102b4575f80fd5b506101d16102c33660046111d7565b6001600160a01b03165f9081526020819052604090205490565b3480156102e8575f80fd5b50610147610932565b3480156102fc575f80fd5b5061014761030b3660046111f2565b610945565b34801561031b575f80fd5b506005546040516001600160a01b03909116815260200161016a565b348015610342575f80fd5b5061015d61094f565b348015610356575f80fd5b5061036a6103653660046111d7565b61095e565b60405161016a93929190611209565b348015610384575f80fd5b50610192610393366004610fe9565b610a10565b3480156103a3575f80fd5b506101476103b23660046111f2565b610a1d565b610147610a27565b3480156103ca575f80fd5b506101d16103d936600461123c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b34801561040e575f80fd5b5061014761041d3660046111d7565b610b43565b33803b1561044b5760405162461bcd60e51b815260040161044290611268565b60405180910390fd5b6001600160a01b0382165f908152600660205260409020600201548311156104ac5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610442565b6008548311156104fe5760405162461bcd60e51b815260206004820152601f60248201527f5769746864726177616c20616d6f756e742065786365656473206c696d6974006044820152606401610442565b6001600160a01b0382165f90815260066020526040812060020180548592906105289084906112b3565b9091555061053890508284610a10565b5060405183815233906001600160a01b038416907f46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d906020015b60405180910390a3505050565b60606003805461058e906112c6565b80601f01602080910402602001604051908101604052809291908181526020018280546105ba906112c6565b80156106055780601f106105dc57610100808354040283529160200191610605565b820191905f5260205f20905b8154815290600101906020018083116105e857829003601f168201915b5050505050905090565b5f3361061c818585610b7d565b60019150505b92915050565b6001600160a01b0381165f908152600660205260409020600101805461064d906112c6565b15905061069c5760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642100000000000000006044820152606401610442565b604080516060810182526001600160a01b0383811680835260208084018781525f8587018190529283526006909152939020825181546001600160a01b0319169216919091178155915190919060018201906106f89082611343565b50604082015181600201559050505050565b5f33610717858285610b8f565b610722858585610c0a565b506001949350505050565b61075860405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b335f9081526006602052604090206001018054839190610777906112c6565b90505f036107b95760405162461bcd60e51b815260206004820152600f60248201526e55736572206e6f7420666f756e642160881b6044820152606401610442565b335f9081526006602090815260409182902082516060810190935280546001600160a01b0316835260018101805491928401916107f5906112c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610821906112c6565b801561086c5780601f106108435761010080835404028352916020019161086c565b820191905f5260205f20905b81548152906001019060200180831161084f57829003601f168201915b5050505050815260200160028201548152505091505b50919050565b610890610c67565b61089981610b43565b50565b6108c760405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b816001600160a01b0381163b156108f05760405162461bcd60e51b815260040161044290611268565b6001600160a01b038084165f9081526006602090815260409182902082516060810190935280549093168252600183018054929392918401916107f5906112c6565b61093a610c67565b6109435f610c94565b565b6108993082610ce5565b60606004805461058e906112c6565b60066020525f9081526040902080546001820180546001600160a01b039092169291610989906112c6565b80601f01602080910402602001604051908101604052809291908181526020018280546109b5906112c6565b8015610a005780601f106109d757610100808354040283529160200191610a00565b820191905f5260205f20905b8154815290600101906020018083116109e357829003601f168201915b5050505050908060020154905083565b5f3361061c818585610c0a565b6108993082610cfb565b33803b15610a475760405162461bcd60e51b815260040161044290611268565b600754341015610ad2576009805460ff191660011790556040805160208082526021908201527f4d696e696d756d206465706f73697420616d6f756e7420697320302e3030303391810191909152600760fb1b606082015233907fa8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5906080015b60405180910390a250565b610add33303461070a565b50335f9081526006602052604081206002018054349290610aff9084906113fe565b90915550506009805460ff1916600217905560405134815233907fb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde590602001610ac7565b610b4b610c67565b6001600160a01b038116610b7457604051631e4fbdf760e01b81525f6004820152602401610442565b61089981610c94565b610b8a8383836001610d0d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610c045781811015610bf657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610442565b610c0484848484035f610d0d565b50505050565b6001600160a01b038316610c3357604051634b637e8f60e11b81525f6004820152602401610442565b6001600160a01b038216610c5c5760405163ec442f0560e01b81525f6004820152602401610442565b610b8a838383610ddf565b6005546001600160a01b031633146109435760405163118cdaa760e01b8152336004820152602401610442565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610ced610c67565b610cf78282610ef8565b5050565b610d03610c67565b610cf78282610f2c565b6001600160a01b038416610d365760405163e602df0560e01b81525f6004820152602401610442565b6001600160a01b038316610d5f57604051634a1406b160e11b81525f6004820152602401610442565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610c0457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dd191815260200190565b60405180910390a350505050565b6001600160a01b038316610e09578060025f828254610dfe91906113fe565b90915550610e799050565b6001600160a01b0383165f9081526020819052604090205481811015610e5b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610442565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610e9557600280548290039055610eb3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161057291815260200190565b6001600160a01b038216610f2157604051634b637e8f60e11b81525f6004820152602401610442565b610cf7825f83610ddf565b6001600160a01b038216610f555760405163ec442f0560e01b81525f6004820152602401610442565b610cf75f8383610ddf565b6001600160a01b0381168114610899575f80fd5b5f8060408385031215610f85575f80fd5b823591506020830135610f9781610f60565b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610fe26020830184610fa2565b9392505050565b5f8060408385031215610ffa575f80fd5b823561100581610f60565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611036575f80fd5b813567ffffffffffffffff81111561105057611050611013565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561107f5761107f611013565b604052818152838201602001851015611096575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156110c3575f80fd5b823567ffffffffffffffff8111156110d9575f80fd5b6110e585828601611027565b9250506020830135610f9781610f60565b602081016003831061111657634e487b7160e01b5f52602160045260245ffd5b91905290565b5f805f6060848603121561112e575f80fd5b833561113981610f60565b9250602084013561114981610f60565b929592945050506040919091013590565b5f6020828403121561116a575f80fd5b813567ffffffffffffffff811115611180575f80fd5b61118c84828501611027565b949350505050565b602080825282516001600160a01b031682820152820151606060408301525f906111c16080840182610fa2565b9050604084015160608401528091505092915050565b5f602082840312156111e7575f80fd5b8135610fe281610f60565b5f60208284031215611202575f80fd5b5035919050565b6001600160a01b03841681526060602082018190525f9061122c90830185610fa2565b9050826040830152949350505050565b5f806040838503121561124d575f80fd5b823561125881610f60565b91506020830135610f9781610f60565b6020808252601b908201527f54686973206973206120636f6e74726163742061646472657373210000000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106225761062261129f565b600181811c908216806112da57607f821691505b60208210810361088257634e487b7160e01b5f52602260045260245ffd5b601f821115610b8a57805f5260205f20601f840160051c8101602085101561131d5750805b601f840160051c820191505b8181101561133c575f8155600101611329565b5050505050565b815167ffffffffffffffff81111561135d5761135d611013565b6113718161136b84546112c6565b846112f8565b6020601f8211600181146113a3575f831561138c5750848201515b5f19600385901b1c1916600184901b17845561133c565b5f84815260208120601f198516915b828110156113d257878501518255602094850194600190920191016113b2565b50848210156113ef57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156106225761062261129f56fea26469706673582212206ae6381d32b93ca389faf351e1f7a7359686d5cbe9cd917e25122dfd2fb52b6f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x1599BA503C000 PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16EF CODESIZE SUB DUP1 PUSH2 0x16EF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x45 SWAP2 PUSH2 0x132 JUMP JUMPDEST DUP1 CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x252B21AA37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4A5643 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x1E1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xA0 DUP3 DUP3 PUSH2 0x1E1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0xE1 JUMP JUMPDEST POP POP POP PUSH2 0x29B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x171 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1DC JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1BA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1FA JUMPI PUSH2 0x1FA PUSH2 0x149 JUMP JUMPDEST PUSH2 0x20E DUP2 PUSH2 0x208 DUP5 SLOAD PUSH2 0x15D JUMP JUMPDEST DUP5 PUSH2 0x195 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x240 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x229 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1D9 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26F JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x24F JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x28C JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1447 DUP1 PUSH2 0x2A8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x130 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0xA87430BA GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xC634D032 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200D2ED2 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x4BFF5009 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x6281B95B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x69C212F6 EQ PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE54B872 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x1F8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x111C JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x94F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x147 PUSH2 0xA27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E742065786365656473206C696D697400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x528 SWAP1 DUP5 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x538 SWAP1 POP DUP3 DUP5 PUSH2 0xA10 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x46B6C03A6ED8406EDA01806AB6D408E07129555FDA5275B7F67E3A255F2D7A0D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x58E SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BA SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x605 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x605 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x61C DUP2 DUP6 DUP6 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x64D SWAP1 PUSH2 0x12C6 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792072656769737465726564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH0 DUP6 DUP8 ADD DUP2 SWAP1 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x6F8 SWAP1 DUP3 PUSH2 0x1343 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x717 DUP6 DUP3 DUP6 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x722 DUP6 DUP6 DUP6 PUSH2 0xC0A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x758 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH2 0x777 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP PUSH0 SUB PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206E6F7420666F756E6421 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x7F5 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x821 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x843 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x890 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x899 DUP2 PUSH2 0xB43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8C7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x7F5 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x93A PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x943 PUSH0 PUSH2 0xC94 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x899 ADDRESS DUP3 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x58E SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x989 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9B5 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x61C DUP2 DUP6 DUP6 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x899 ADDRESS DUP3 PUSH2 0xCFB JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206465706F73697420616D6F756E7420697320302E30303033 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xA8B9F7931AC94CF9850ACCD175CF4543FAC81AE93865D1670E14213829F67DE5 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xADD CALLER ADDRESS CALLVALUE PUSH2 0x70A JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0xAFF SWAP1 DUP5 SWAP1 PUSH2 0x13FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xB3EF81558ED1A50072A492984535A009DA8B129C749500B387F1E5F4886BDDE5 SWAP1 PUSH1 0x20 ADD PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x899 DUP2 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0xB8A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xC04 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xC04 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD0D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xB8A DUP4 DUP4 DUP4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCED PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xCF7 DUP3 DUP3 PUSH2 0xEF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD03 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xCF7 DUP3 DUP3 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC04 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDD1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE09 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDFE SWAP2 SWAP1 PUSH2 0x13FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE79 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE95 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x572 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xCF7 DUP3 PUSH0 DUP4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xCF7 PUSH0 DUP4 DUP4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x899 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFE2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1005 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x1050 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x107F JUMPI PUSH2 0x107F PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1096 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10E5 DUP6 DUP3 DUP7 ADD PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1116 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x112E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1139 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1149 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1180 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x118C DUP5 DUP3 DUP6 ADD PUSH2 0x1027 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH0 SWAP1 PUSH2 0x11C1 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0xFA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFE2 DUP2 PUSH2 0xF60 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x122C SWAP1 DUP4 ADD DUP6 PUSH2 0xFA2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1258 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206973206120636F6E74726163742061646472657373210000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x882 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB8A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x131D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x133C JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1329 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135D PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x1371 DUP2 PUSH2 0x136B DUP5 SLOAD PUSH2 0x12C6 JUMP JUMPDEST DUP5 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x13A3 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x138C JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x133C JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13B2 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x13EF JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x129F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE6381D32B93CA389FAF351 0xE1 0xF7 0xA7 CALLDATALOAD SWAP7 DUP7 0xD5 0xCB 0xE9 0xCD SWAP2 PUSH31 0x25122DFD2FB52B6F64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "134:3258:6:-:0;;;282:13;254:41;;331:7;301:37;;1391:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1436:14;279:10:7;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2990:51:8;2963:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;210:83:7;1391:62:6;134:3258;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:184:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:8;;14:184;-1:-1:-1;14:184:8:o;203:127::-;264:10;259:3;255:20;252:1;245:31;295:4;292:1;285:15;319:4;316:1;309:15;335:380;414:1;410:12;;;;457;;;478:61;;532:4;524:6;520:17;510:27;;478:61;585:2;577:6;574:14;554:18;551:38;548:161;;631:10;626:3;622:20;619:1;612:31;666:4;663:1;656:15;694:4;691:1;684:15;548:161;;335:380;;;:::o;846:518::-;948:2;943:3;940:11;937:421;;;984:5;981:1;974:16;1028:4;1025:1;1015:18;1098:2;1086:10;1082:19;1079:1;1075:27;1069:4;1065:38;1134:4;1122:10;1119:20;1116:47;;;-1:-1:-1;1157:4:8;1116:47;1212:2;1207:3;1203:12;1200:1;1196:20;1190:4;1186:31;1176:41;;1267:81;1285:2;1278:5;1275:13;1267:81;;;1344:1;1330:16;;1311:1;1300:13;1267:81;;;1271:3;;937:421;846:518;;;:::o;1540:1299::-;1660:10;;-1:-1:-1;;;;;1682:30:8;;1679:56;;;1715:18;;:::i;:::-;1744:97;1834:6;1794:38;1826:4;1820:11;1794:38;:::i;:::-;1788:4;1744:97;:::i;:::-;1890:4;1921:2;1910:14;;1938:1;1933:649;;;;2626:1;2643:6;2640:89;;;-1:-1:-1;2695:19:8;;;2689:26;2640:89;-1:-1:-1;;1497:1:8;1493:11;;;1489:24;1485:29;1475:40;1521:1;1517:11;;;1472:57;2742:81;;1903:930;;1933:649;793:1;786:14;;;830:4;817:18;;-1:-1:-1;;1969:20:8;;;2087:222;2101:7;2098:1;2095:14;2087:222;;;2183:19;;;2177:26;2162:42;;2290:4;2275:20;;;;2243:1;2231:14;;;;2117:12;2087:222;;;2091:3;2337:6;2328:7;2325:19;2322:201;;;2398:19;;;2392:26;-1:-1:-1;;2481:1:8;2477:14;;;2493:3;2473:24;2469:37;2465:42;2450:58;2435:74;;2322:201;-1:-1:-1;;;;2569:1:8;2553:14;;;2549:22;2536:36;;-1:-1:-1;1540:1299:8:o;2844:203::-;134:3258:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2941,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3341,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3832,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3175,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3884,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2959,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3220,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3082,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3551,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1551,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnToken_1238": {
									"entryPoint": 2373,
									"id": 1238,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_1302": {
									"entryPoint": 3301,
									"id": 1302,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deposit_1162": {
									"entryPoint": 2599,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getUserByAddress_1084": {
									"entryPoint": 2204,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserByName_1101": {
									"entryPoint": 1837,
									"id": 1101,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContractAddr_1252": {
									"entryPoint": null,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintToken_1224": {
									"entryPoint": 2589,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mint_1317": {
									"entryPoint": 3323,
									"id": 1317,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1407,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerUser_1068": {
									"entryPoint": 1576,
									"id": 1068,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2354,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@status_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2383,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1802,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2883,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership__1287": {
									"entryPoint": 2184,
									"id": 1287,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2576,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@users_946": {
									"entryPoint": 2398,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1210": {
									"entryPoint": 1058,
									"id": 1210,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 4135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address_payable": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payable": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$963__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_User_$959_memory_ptr__to_t_struct$_User_$959_memory_ptr__fromStack_reversed": {
									"entryPoint": 4500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12108:8",
										"nodeType": "YulBlock",
										"src": "0:12108:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "67:86:8",
													"nodeType": "YulBlock",
													"src": "67:86:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "131:16:8",
																"nodeType": "YulBlock",
																"src": "131:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "140:1:8",
																					"nodeType": "YulLiteral",
																					"src": "140:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "143:1:8",
																					"nodeType": "YulLiteral",
																					"src": "143:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "133:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "133:6:8"
																			},
																			"nativeSrc": "133:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "133:12:8"
																		},
																		"nativeSrc": "133:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "133:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "90:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "90:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "101:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "101:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "116:3:8",
																										"nodeType": "YulLiteral",
																										"src": "116:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "121:1:8",
																										"nodeType": "YulLiteral",
																										"src": "121:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "112:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "112:3:8"
																								},
																								"nativeSrc": "112:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "112:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "125:1:8",
																								"nodeType": "YulLiteral",
																								"src": "125:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "108:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "108:3:8"
																						},
																						"nativeSrc": "108:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "108:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "97:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "97:3:8"
																				},
																				"nativeSrc": "97:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "97:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "87:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "87:2:8"
																		},
																		"nativeSrc": "87:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "87:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "80:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "80:6:8"
																},
																"nativeSrc": "80:50:8",
																"nodeType": "YulFunctionCall",
																"src": "80:50:8"
															},
															"nativeSrc": "77:70:8",
															"nodeType": "YulIf",
															"src": "77:70:8"
														}
													]
												},
												"name": "validator_revert_address_payable",
												"nativeSrc": "14:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "56:5:8",
														"nodeType": "YulTypedName",
														"src": "56:5:8",
														"type": ""
													}
												],
												"src": "14:139:8"
											},
											{
												"body": {
													"nativeSrc": "253:288:8",
													"nodeType": "YulBlock",
													"src": "253:288:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "299:16:8",
																"nodeType": "YulBlock",
																"src": "299:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "308:1:8",
																					"nodeType": "YulLiteral",
																					"src": "308:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "311:1:8",
																					"nodeType": "YulLiteral",
																					"src": "311:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "301:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "301:6:8"
																			},
																			"nativeSrc": "301:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "301:12:8"
																		},
																		"nativeSrc": "301:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "301:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "274:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "274:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "283:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "283:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "270:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "270:3:8"
																		},
																		"nativeSrc": "270:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "270:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:2:8",
																		"nodeType": "YulLiteral",
																		"src": "295:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "266:3:8"
																},
																"nativeSrc": "266:32:8",
																"nodeType": "YulFunctionCall",
																"src": "266:32:8"
															},
															"nativeSrc": "263:52:8",
															"nodeType": "YulIf",
															"src": "263:52:8"
														},
														{
															"nativeSrc": "324:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "324:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "337:1:8",
																"nodeType": "YulLiteral",
																"src": "337:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "328:5:8",
																	"nodeType": "YulTypedName",
																	"src": "328:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "347:32:8",
															"nodeType": "YulAssignment",
															"src": "347:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "369:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "356:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "356:12:8"
																},
																"nativeSrc": "356:23:8",
																"nodeType": "YulFunctionCall",
																"src": "356:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "347:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "347:5:8"
																}
															]
														},
														{
															"nativeSrc": "388:15:8",
															"nodeType": "YulAssignment",
															"src": "388:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "398:5:8",
																"nodeType": "YulIdentifier",
																"src": "398:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "388:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "388:6:8"
																}
															]
														},
														{
															"nativeSrc": "412:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "412:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "444:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "444:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "455:2:8",
																				"nodeType": "YulLiteral",
																				"src": "455:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "440:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "440:3:8"
																		},
																		"nativeSrc": "440:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "440:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "427:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "427:12:8"
																},
																"nativeSrc": "427:32:8",
																"nodeType": "YulFunctionCall",
																"src": "427:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "416:7:8",
																	"nodeType": "YulTypedName",
																	"src": "416:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "501:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "501:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "468:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "468:32:8"
																},
																"nativeSrc": "468:41:8",
																"nodeType": "YulFunctionCall",
																"src": "468:41:8"
															},
															"nativeSrc": "468:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "468:41:8"
														},
														{
															"nativeSrc": "518:17:8",
															"nodeType": "YulAssignment",
															"src": "518:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "528:7:8",
																"nodeType": "YulIdentifier",
																"src": "528:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "518:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "518:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payable",
												"nativeSrc": "158:383:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "211:9:8",
														"nodeType": "YulTypedName",
														"src": "211:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "222:7:8",
														"nodeType": "YulTypedName",
														"src": "222:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "234:6:8",
														"nodeType": "YulTypedName",
														"src": "234:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "242:6:8",
														"nodeType": "YulTypedName",
														"src": "242:6:8",
														"type": ""
													}
												],
												"src": "158:383:8"
											},
											{
												"body": {
													"nativeSrc": "596:239:8",
													"nodeType": "YulBlock",
													"src": "596:239:8",
													"statements": [
														{
															"nativeSrc": "606:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "606:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "626:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "626:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "620:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:8"
																},
																"nativeSrc": "620:12:8",
																"nodeType": "YulFunctionCall",
																"src": "620:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "610:6:8",
																	"nodeType": "YulTypedName",
																	"src": "610:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "648:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "648:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "653:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "653:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "641:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "641:6:8"
																},
																"nativeSrc": "641:19:8",
																"nodeType": "YulFunctionCall",
																"src": "641:19:8"
															},
															"nativeSrc": "641:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "641:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "679:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "679:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "684:4:8",
																				"nodeType": "YulLiteral",
																				"src": "684:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "675:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "675:3:8"
																		},
																		"nativeSrc": "675:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "675:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "695:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "695:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:8",
																				"nodeType": "YulLiteral",
																				"src": "702:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "691:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "691:3:8"
																		},
																		"nativeSrc": "691:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "691:16:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "709:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "669:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "669:5:8"
																},
																"nativeSrc": "669:47:8",
																"nodeType": "YulFunctionCall",
																"src": "669:47:8"
															},
															"nativeSrc": "669:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "669:47:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "740:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "740:3:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "736:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "736:3:8"
																				},
																				"nativeSrc": "736:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "736:16:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "754:4:8",
																				"nodeType": "YulLiteral",
																				"src": "754:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:8"
																		},
																		"nativeSrc": "732:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "732:27:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "761:1:8",
																		"nodeType": "YulLiteral",
																		"src": "761:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "725:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:8"
																},
																"nativeSrc": "725:38:8",
																"nodeType": "YulFunctionCall",
																"src": "725:38:8"
															},
															"nativeSrc": "725:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "725:38:8"
														},
														{
															"nativeSrc": "772:57:8",
															"nodeType": "YulAssignment",
															"src": "772:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "787:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "787:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "800:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "800:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "808:2:8",
																								"nodeType": "YulLiteral",
																								"src": "808:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "796:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "796:3:8"
																						},
																						"nativeSrc": "796:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "796:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "817:2:8",
																								"nodeType": "YulLiteral",
																								"src": "817:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "813:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "813:3:8"
																						},
																						"nativeSrc": "813:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "813:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "792:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:8"
																				},
																				"nativeSrc": "792:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "792:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "783:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:8"
																		},
																		"nativeSrc": "783:39:8",
																		"nodeType": "YulFunctionCall",
																		"src": "783:39:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:4:8",
																		"nodeType": "YulLiteral",
																		"src": "824:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "779:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "779:3:8"
																},
																"nativeSrc": "779:50:8",
																"nodeType": "YulFunctionCall",
																"src": "779:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "772:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "772:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "546:289:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "573:5:8",
														"nodeType": "YulTypedName",
														"src": "573:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "580:3:8",
														"nodeType": "YulTypedName",
														"src": "580:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "588:3:8",
														"nodeType": "YulTypedName",
														"src": "588:3:8",
														"type": ""
													}
												],
												"src": "546:289:8"
											},
											{
												"body": {
													"nativeSrc": "961:99:8",
													"nodeType": "YulBlock",
													"src": "961:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "978:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "978:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "989:2:8",
																		"nodeType": "YulLiteral",
																		"src": "989:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "971:6:8"
																},
																"nativeSrc": "971:21:8",
																"nodeType": "YulFunctionCall",
																"src": "971:21:8"
															},
															"nativeSrc": "971:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "971:21:8"
														},
														{
															"nativeSrc": "1001:53:8",
															"nodeType": "YulAssignment",
															"src": "1001:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1027:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1027:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1039:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1050:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1050:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1035:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1035:3:8"
																		},
																		"nativeSrc": "1035:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1035:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1009:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1009:17:8"
																},
																"nativeSrc": "1009:45:8",
																"nodeType": "YulFunctionCall",
																"src": "1009:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1001:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1001:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "840:220:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "930:9:8",
														"nodeType": "YulTypedName",
														"src": "930:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "941:6:8",
														"nodeType": "YulTypedName",
														"src": "941:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "952:4:8",
														"nodeType": "YulTypedName",
														"src": "952:4:8",
														"type": ""
													}
												],
												"src": "840:220:8"
											},
											{
												"body": {
													"nativeSrc": "1152:288:8",
													"nodeType": "YulBlock",
													"src": "1152:288:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1198:16:8",
																"nodeType": "YulBlock",
																"src": "1198:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1207:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1207:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1210:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1210:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1200:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1200:6:8"
																			},
																			"nativeSrc": "1200:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1200:12:8"
																		},
																		"nativeSrc": "1200:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1200:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1173:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1173:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1182:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1182:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1169:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1169:3:8"
																		},
																		"nativeSrc": "1169:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1169:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1194:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1165:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1165:3:8"
																},
																"nativeSrc": "1165:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1165:32:8"
															},
															"nativeSrc": "1162:52:8",
															"nodeType": "YulIf",
															"src": "1162:52:8"
														},
														{
															"nativeSrc": "1223:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1236:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1236:12:8"
																},
																"nativeSrc": "1236:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1236:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1227:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1227:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1301:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1301:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "1268:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "1268:32:8"
																},
																"nativeSrc": "1268:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1268:39:8"
															},
															"nativeSrc": "1268:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "1268:39:8"
														},
														{
															"nativeSrc": "1316:15:8",
															"nodeType": "YulAssignment",
															"src": "1316:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1326:5:8",
																"nodeType": "YulIdentifier",
																"src": "1326:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1316:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:8"
																}
															]
														},
														{
															"nativeSrc": "1340:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1340:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1355:1:8",
																"nodeType": "YulLiteral",
																"src": "1355:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1344:7:8",
																	"nodeType": "YulTypedName",
																	"src": "1344:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1365:43:8",
															"nodeType": "YulAssignment",
															"src": "1365:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1393:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1404:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1404:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:8"
																		},
																		"nativeSrc": "1389:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1376:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1376:12:8"
																},
																"nativeSrc": "1376:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1376:32:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1365:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1365:7:8"
																}
															]
														},
														{
															"nativeSrc": "1417:17:8",
															"nodeType": "YulAssignment",
															"src": "1417:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "1427:7:8",
																"nodeType": "YulIdentifier",
																"src": "1427:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1417:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1417:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1065:375:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1110:9:8",
														"nodeType": "YulTypedName",
														"src": "1110:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1121:7:8",
														"nodeType": "YulTypedName",
														"src": "1121:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1133:6:8",
														"nodeType": "YulTypedName",
														"src": "1133:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1141:6:8",
														"nodeType": "YulTypedName",
														"src": "1141:6:8",
														"type": ""
													}
												],
												"src": "1065:375:8"
											},
											{
												"body": {
													"nativeSrc": "1540:92:8",
													"nodeType": "YulBlock",
													"src": "1540:92:8",
													"statements": [
														{
															"nativeSrc": "1550:26:8",
															"nodeType": "YulAssignment",
															"src": "1550:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1562:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1562:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1573:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1558:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:8"
																},
																"nativeSrc": "1558:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1558:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1550:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1550:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1592:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1592:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1617:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1617:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1610:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1610:6:8"
																				},
																				"nativeSrc": "1610:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1610:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1603:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1603:6:8"
																		},
																		"nativeSrc": "1603:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1603:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1585:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:8"
																},
																"nativeSrc": "1585:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1585:41:8"
															},
															"nativeSrc": "1585:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1585:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1445:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:8",
														"nodeType": "YulTypedName",
														"src": "1509:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1520:6:8",
														"nodeType": "YulTypedName",
														"src": "1520:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1531:4:8",
														"nodeType": "YulTypedName",
														"src": "1531:4:8",
														"type": ""
													}
												],
												"src": "1445:187:8"
											},
											{
												"body": {
													"nativeSrc": "1669:95:8",
													"nodeType": "YulBlock",
													"src": "1669:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1686:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1693:3:8",
																				"nodeType": "YulLiteral",
																				"src": "1693:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1698:10:8",
																				"nodeType": "YulLiteral",
																				"src": "1698:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1689:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:8"
																		},
																		"nativeSrc": "1689:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:8"
																},
																"nativeSrc": "1679:31:8",
																"nodeType": "YulFunctionCall",
																"src": "1679:31:8"
															},
															"nativeSrc": "1679:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "1679:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1726:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1726:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1729:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1729:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1719:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:8"
																},
																"nativeSrc": "1719:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1719:15:8"
															},
															"nativeSrc": "1719:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1719:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1750:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1750:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1753:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1743:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:8"
																},
																"nativeSrc": "1743:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1743:15:8"
															},
															"nativeSrc": "1743:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1743:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1637:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1637:127:8"
											},
											{
												"body": {
													"nativeSrc": "1822:673:8",
													"nodeType": "YulBlock",
													"src": "1822:673:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1871:16:8",
																"nodeType": "YulBlock",
																"src": "1871:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1880:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1880:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1883:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1883:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1873:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1873:6:8"
																			},
																			"nativeSrc": "1873:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1873:12:8"
																		},
																		"nativeSrc": "1873:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1873:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1850:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1850:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1858:4:8",
																						"nodeType": "YulLiteral",
																						"src": "1858:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:8"
																				},
																				"nativeSrc": "1846:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1865:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1865:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1842:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:8"
																		},
																		"nativeSrc": "1842:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1842:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1835:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:8"
																},
																"nativeSrc": "1835:35:8",
																"nodeType": "YulFunctionCall",
																"src": "1835:35:8"
															},
															"nativeSrc": "1832:55:8",
															"nodeType": "YulIf",
															"src": "1832:55:8"
														},
														{
															"nativeSrc": "1896:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1896:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1923:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1910:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1910:12:8"
																},
																"nativeSrc": "1910:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1910:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1900:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1900:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1973:22:8",
																"nodeType": "YulBlock",
																"src": "1973:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1975:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1975:16:8"
																			},
																			"nativeSrc": "1975:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1975:18:8"
																		},
																		"nativeSrc": "1975:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1945:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1945:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1953:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1953:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1942:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1942:2:8"
																},
																"nativeSrc": "1942:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1942:30:8"
															},
															"nativeSrc": "1939:56:8",
															"nodeType": "YulIf",
															"src": "1939:56:8"
														},
														{
															"nativeSrc": "2004:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2004:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2024:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2024:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2018:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2018:5:8"
																},
																"nativeSrc": "2018:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2018:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2008:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2008:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2036:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2036:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2058:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2082:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2082:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2090:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2090:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2078:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2078:3:8"
																								},
																								"nativeSrc": "2078:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2078:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2101:2:8",
																										"nodeType": "YulLiteral",
																										"src": "2101:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2097:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2097:3:8"
																								},
																								"nativeSrc": "2097:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2097:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2074:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2074:3:8"
																						},
																						"nativeSrc": "2074:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2074:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2107:2:8",
																						"nodeType": "YulLiteral",
																						"src": "2107:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2070:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2070:3:8"
																				},
																				"nativeSrc": "2070:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2070:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2116:2:8",
																						"nodeType": "YulLiteral",
																						"src": "2116:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2112:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2112:3:8"
																				},
																				"nativeSrc": "2112:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2112:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2066:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2066:3:8"
																		},
																		"nativeSrc": "2066:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2066:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2054:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:8"
																},
																"nativeSrc": "2054:67:8",
																"nodeType": "YulFunctionCall",
																"src": "2054:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2040:10:8",
																	"nodeType": "YulTypedName",
																	"src": "2040:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2196:22:8",
																"nodeType": "YulBlock",
																"src": "2196:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2198:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2198:16:8"
																			},
																			"nativeSrc": "2198:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2198:18:8"
																		},
																		"nativeSrc": "2198:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2198:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2139:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "2139:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2151:18:8",
																				"nodeType": "YulLiteral",
																				"src": "2151:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2136:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2136:2:8"
																		},
																		"nativeSrc": "2136:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2136:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2175:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "2175:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2187:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2187:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2172:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2172:2:8"
																		},
																		"nativeSrc": "2172:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2133:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2133:2:8"
																},
																"nativeSrc": "2133:62:8",
																"nodeType": "YulFunctionCall",
																"src": "2133:62:8"
															},
															"nativeSrc": "2130:88:8",
															"nodeType": "YulIf",
															"src": "2130:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2234:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2234:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2238:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2238:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2227:6:8"
																},
																"nativeSrc": "2227:22:8",
																"nodeType": "YulFunctionCall",
																"src": "2227:22:8"
															},
															"nativeSrc": "2227:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "2227:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2265:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2265:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2273:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2273:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:8"
																},
																"nativeSrc": "2258:22:8",
																"nodeType": "YulFunctionCall",
																"src": "2258:22:8"
															},
															"nativeSrc": "2258:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "2258:22:8"
														},
														{
															"body": {
																"nativeSrc": "2332:16:8",
																"nodeType": "YulBlock",
																"src": "2332:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2341:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2341:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2344:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2344:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2334:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2334:6:8"
																			},
																			"nativeSrc": "2334:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2334:12:8"
																		},
																		"nativeSrc": "2334:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2334:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2303:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2303:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2311:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2311:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2299:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2299:3:8"
																				},
																				"nativeSrc": "2299:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2299:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2320:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2320:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2295:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:8"
																		},
																		"nativeSrc": "2295:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:30:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2327:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2327:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2292:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2292:2:8"
																},
																"nativeSrc": "2292:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2292:39:8"
															},
															"nativeSrc": "2289:59:8",
															"nodeType": "YulIf",
															"src": "2289:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2374:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2374:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2382:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2382:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2370:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2370:3:8"
																		},
																		"nativeSrc": "2370:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2370:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2393:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2393:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2401:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2401:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2389:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:8"
																		},
																		"nativeSrc": "2389:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2389:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2408:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2408:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2357:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2357:12:8"
																},
																"nativeSrc": "2357:58:8",
																"nodeType": "YulFunctionCall",
																"src": "2357:58:8"
															},
															"nativeSrc": "2357:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "2357:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2439:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2439:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2447:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2447:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2435:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2435:3:8"
																				},
																				"nativeSrc": "2435:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2435:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2456:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2456:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2431:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:8"
																		},
																		"nativeSrc": "2431:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2431:30:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2463:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2463:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2424:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2424:6:8"
																},
																"nativeSrc": "2424:41:8",
																"nodeType": "YulFunctionCall",
																"src": "2424:41:8"
															},
															"nativeSrc": "2424:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "2424:41:8"
														},
														{
															"nativeSrc": "2474:15:8",
															"nodeType": "YulAssignment",
															"src": "2474:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2483:6:8",
																"nodeType": "YulIdentifier",
																"src": "2483:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2474:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2474:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "1769:726:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1796:6:8",
														"nodeType": "YulTypedName",
														"src": "1796:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1804:3:8",
														"nodeType": "YulTypedName",
														"src": "1804:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1812:5:8",
														"nodeType": "YulTypedName",
														"src": "1812:5:8",
														"type": ""
													}
												],
												"src": "1769:726:8"
											},
											{
												"body": {
													"nativeSrc": "2605:368:8",
													"nodeType": "YulBlock",
													"src": "2605:368:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2651:16:8",
																"nodeType": "YulBlock",
																"src": "2651:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2660:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2660:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2653:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2653:6:8"
																			},
																			"nativeSrc": "2653:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2653:12:8"
																		},
																		"nativeSrc": "2653:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2653:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2626:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2626:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2635:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2635:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2622:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2622:3:8"
																		},
																		"nativeSrc": "2622:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2622:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2647:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2618:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2618:3:8"
																},
																"nativeSrc": "2618:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2618:32:8"
															},
															"nativeSrc": "2615:52:8",
															"nodeType": "YulIf",
															"src": "2615:52:8"
														},
														{
															"nativeSrc": "2676:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2676:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2703:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2703:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2690:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2690:12:8"
																},
																"nativeSrc": "2690:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2690:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2680:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2680:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2756:16:8",
																"nodeType": "YulBlock",
																"src": "2756:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2768:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2768:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2758:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2758:6:8"
																			},
																			"nativeSrc": "2758:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2758:12:8"
																		},
																		"nativeSrc": "2758:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2758:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2728:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2736:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2736:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2725:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2725:2:8"
																},
																"nativeSrc": "2725:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2725:30:8"
															},
															"nativeSrc": "2722:50:8",
															"nodeType": "YulIf",
															"src": "2722:50:8"
														},
														{
															"nativeSrc": "2781:60:8",
															"nodeType": "YulAssignment",
															"src": "2781:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2813:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2813:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2824:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2809:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:8"
																		},
																		"nativeSrc": "2809:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2809:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2833:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2833:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2791:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2791:17:8"
																},
																"nativeSrc": "2791:50:8",
																"nodeType": "YulFunctionCall",
																"src": "2791:50:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2781:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2781:6:8"
																}
															]
														},
														{
															"nativeSrc": "2850:45:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2850:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2880:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2891:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2891:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2876:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:8"
																		},
																		"nativeSrc": "2876:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2863:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2863:12:8"
																},
																"nativeSrc": "2863:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2863:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2854:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2937:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2937:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "2904:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "2904:32:8"
																},
																"nativeSrc": "2904:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2904:39:8"
															},
															"nativeSrc": "2904:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "2904:39:8"
														},
														{
															"nativeSrc": "2952:15:8",
															"nodeType": "YulAssignment",
															"src": "2952:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2962:5:8",
																"nodeType": "YulIdentifier",
																"src": "2962:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2952:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address_payable",
												"nativeSrc": "2500:473:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2563:9:8",
														"nodeType": "YulTypedName",
														"src": "2563:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2574:7:8",
														"nodeType": "YulTypedName",
														"src": "2574:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2586:6:8",
														"nodeType": "YulTypedName",
														"src": "2586:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2594:6:8",
														"nodeType": "YulTypedName",
														"src": "2594:6:8",
														"type": ""
													}
												],
												"src": "2500:473:8"
											},
											{
												"body": {
													"nativeSrc": "3079:76:8",
													"nodeType": "YulBlock",
													"src": "3079:76:8",
													"statements": [
														{
															"nativeSrc": "3089:26:8",
															"nodeType": "YulAssignment",
															"src": "3089:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3101:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3101:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3112:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3112:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3097:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3097:3:8"
																},
																"nativeSrc": "3097:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3097:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3089:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3089:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3131:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3131:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3142:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3142:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3124:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:8"
																},
																"nativeSrc": "3124:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3124:25:8"
															},
															"nativeSrc": "3124:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "3124:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2978:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3048:9:8",
														"nodeType": "YulTypedName",
														"src": "3048:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3059:6:8",
														"nodeType": "YulTypedName",
														"src": "3059:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3070:4:8",
														"nodeType": "YulTypedName",
														"src": "3070:4:8",
														"type": ""
													}
												],
												"src": "2978:177:8"
											},
											{
												"body": {
													"nativeSrc": "3192:95:8",
													"nodeType": "YulBlock",
													"src": "3192:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3209:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3209:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3216:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3216:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3221:10:8",
																				"nodeType": "YulLiteral",
																				"src": "3221:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3212:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:8"
																		},
																		"nativeSrc": "3212:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3212:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3202:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:8"
																},
																"nativeSrc": "3202:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3202:31:8"
															},
															"nativeSrc": "3202:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3202:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3249:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3249:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3252:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3252:4:8",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3242:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:8"
																},
																"nativeSrc": "3242:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3242:15:8"
															},
															"nativeSrc": "3242:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3242:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3273:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3276:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3266:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:8"
																},
																"nativeSrc": "3266:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3266:15:8"
															},
															"nativeSrc": "3266:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3266:15:8"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "3160:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3160:127:8"
											},
											{
												"body": {
													"nativeSrc": "3401:229:8",
													"nodeType": "YulBlock",
													"src": "3401:229:8",
													"statements": [
														{
															"nativeSrc": "3411:26:8",
															"nodeType": "YulAssignment",
															"src": "3411:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3423:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3423:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3434:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3419:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3419:3:8"
																},
																"nativeSrc": "3419:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3419:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3411:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3411:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3479:111:8",
																"nodeType": "YulBlock",
																"src": "3479:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3500:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3500:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3507:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3507:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3512:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3512:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3503:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3503:3:8"
																					},
																					"nativeSrc": "3503:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3503:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3493:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3493:6:8"
																			},
																			"nativeSrc": "3493:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3493:31:8"
																		},
																		"nativeSrc": "3493:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3493:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3544:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3544:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3547:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3547:4:8",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3537:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3537:6:8"
																			},
																			"nativeSrc": "3537:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3537:15:8"
																		},
																		"nativeSrc": "3537:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3537:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3572:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3572:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3575:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3575:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3565:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3565:6:8"
																			},
																			"nativeSrc": "3565:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3565:15:8"
																		},
																		"nativeSrc": "3565:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3565:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3459:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3459:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3467:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3467:1:8",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3456:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3456:2:8"
																		},
																		"nativeSrc": "3456:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3449:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:8"
																},
																"nativeSrc": "3449:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3449:21:8"
															},
															"nativeSrc": "3446:144:8",
															"nodeType": "YulIf",
															"src": "3446:144:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3606:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3606:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3617:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3617:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3599:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:8"
																},
																"nativeSrc": "3599:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3599:25:8"
															},
															"nativeSrc": "3599:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "3599:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$963__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3292:338:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3370:9:8",
														"nodeType": "YulTypedName",
														"src": "3370:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3381:6:8",
														"nodeType": "YulTypedName",
														"src": "3381:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3392:4:8",
														"nodeType": "YulTypedName",
														"src": "3392:4:8",
														"type": ""
													}
												],
												"src": "3292:338:8"
											},
											{
												"body": {
													"nativeSrc": "3739:420:8",
													"nodeType": "YulBlock",
													"src": "3739:420:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3785:16:8",
																"nodeType": "YulBlock",
																"src": "3785:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3797:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3797:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3787:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:8"
																			},
																			"nativeSrc": "3787:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3787:12:8"
																		},
																		"nativeSrc": "3787:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3760:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3760:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3769:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3769:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3756:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3756:3:8"
																		},
																		"nativeSrc": "3756:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3756:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3781:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3752:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:8"
																},
																"nativeSrc": "3752:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3752:32:8"
															},
															"nativeSrc": "3749:52:8",
															"nodeType": "YulIf",
															"src": "3749:52:8"
														},
														{
															"nativeSrc": "3810:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3810:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3836:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3836:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3823:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3823:12:8"
																},
																"nativeSrc": "3823:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3823:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3814:5:8",
																	"nodeType": "YulTypedName",
																	"src": "3814:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3888:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3888:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "3855:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "3855:32:8"
																},
																"nativeSrc": "3855:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3855:39:8"
															},
															"nativeSrc": "3855:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "3855:39:8"
														},
														{
															"nativeSrc": "3903:15:8",
															"nodeType": "YulAssignment",
															"src": "3903:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "3913:5:8",
																"nodeType": "YulIdentifier",
																"src": "3913:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3903:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3903:6:8"
																}
															]
														},
														{
															"nativeSrc": "3927:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3927:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3959:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3970:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:8"
																		},
																		"nativeSrc": "3955:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3942:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3942:12:8"
																},
																"nativeSrc": "3942:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3942:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3931:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3931:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4016:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4016:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "3983:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "3983:32:8"
																},
																"nativeSrc": "3983:41:8",
																"nodeType": "YulFunctionCall",
																"src": "3983:41:8"
															},
															"nativeSrc": "3983:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "3983:41:8"
														},
														{
															"nativeSrc": "4033:17:8",
															"nodeType": "YulAssignment",
															"src": "4033:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "4043:7:8",
																"nodeType": "YulIdentifier",
																"src": "4043:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4033:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4033:6:8"
																}
															]
														},
														{
															"nativeSrc": "4059:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4059:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4074:1:8",
																"nodeType": "YulLiteral",
																"src": "4074:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4063:7:8",
																	"nodeType": "YulTypedName",
																	"src": "4063:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4084:43:8",
															"nodeType": "YulAssignment",
															"src": "4084:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4112:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4112:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4123:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4123:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4108:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:8"
																		},
																		"nativeSrc": "4108:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4095:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4095:12:8"
																},
																"nativeSrc": "4095:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4095:32:8"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "4084:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4084:7:8"
																}
															]
														},
														{
															"nativeSrc": "4136:17:8",
															"nodeType": "YulAssignment",
															"src": "4136:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "4146:7:8",
																"nodeType": "YulIdentifier",
																"src": "4146:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4136:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3635:524:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3689:9:8",
														"nodeType": "YulTypedName",
														"src": "3689:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3700:7:8",
														"nodeType": "YulTypedName",
														"src": "3700:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3712:6:8",
														"nodeType": "YulTypedName",
														"src": "3712:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3720:6:8",
														"nodeType": "YulTypedName",
														"src": "3720:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3728:6:8",
														"nodeType": "YulTypedName",
														"src": "3728:6:8",
														"type": ""
													}
												],
												"src": "3635:524:8"
											},
											{
												"body": {
													"nativeSrc": "4261:87:8",
													"nodeType": "YulBlock",
													"src": "4261:87:8",
													"statements": [
														{
															"nativeSrc": "4271:26:8",
															"nodeType": "YulAssignment",
															"src": "4271:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4283:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4283:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4294:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4294:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4279:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4279:3:8"
																},
																"nativeSrc": "4279:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4279:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4271:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4271:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4313:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4313:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4328:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4328:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4336:4:8",
																				"nodeType": "YulLiteral",
																				"src": "4336:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4324:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:8"
																		},
																		"nativeSrc": "4324:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4324:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4306:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:8"
																},
																"nativeSrc": "4306:36:8",
																"nodeType": "YulFunctionCall",
																"src": "4306:36:8"
															},
															"nativeSrc": "4306:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "4306:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4164:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4230:9:8",
														"nodeType": "YulTypedName",
														"src": "4230:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4241:6:8",
														"nodeType": "YulTypedName",
														"src": "4241:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4252:4:8",
														"nodeType": "YulTypedName",
														"src": "4252:4:8",
														"type": ""
													}
												],
												"src": "4164:184:8"
											},
											{
												"body": {
													"nativeSrc": "4433:242:8",
													"nodeType": "YulBlock",
													"src": "4433:242:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4479:16:8",
																"nodeType": "YulBlock",
																"src": "4479:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4488:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4488:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4491:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4491:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4481:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4481:6:8"
																			},
																			"nativeSrc": "4481:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4481:12:8"
																		},
																		"nativeSrc": "4481:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4481:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4454:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4454:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4463:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4463:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4450:3:8"
																		},
																		"nativeSrc": "4450:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4450:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4475:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4446:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:8"
																},
																"nativeSrc": "4446:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4446:32:8"
															},
															"nativeSrc": "4443:52:8",
															"nodeType": "YulIf",
															"src": "4443:52:8"
														},
														{
															"nativeSrc": "4504:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4504:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4531:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4531:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4518:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4518:12:8"
																},
																"nativeSrc": "4518:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4518:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4508:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4508:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4584:16:8",
																"nodeType": "YulBlock",
																"src": "4584:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4593:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4593:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4596:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4596:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4586:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4586:6:8"
																			},
																			"nativeSrc": "4586:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4586:12:8"
																		},
																		"nativeSrc": "4586:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4586:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4556:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4556:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4564:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4564:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4553:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4553:2:8"
																},
																"nativeSrc": "4553:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4553:30:8"
															},
															"nativeSrc": "4550:50:8",
															"nodeType": "YulIf",
															"src": "4550:50:8"
														},
														{
															"nativeSrc": "4609:60:8",
															"nodeType": "YulAssignment",
															"src": "4609:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4641:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4652:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4652:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4637:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:8"
																		},
																		"nativeSrc": "4637:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4637:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4661:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4661:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "4619:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4619:17:8"
																},
																"nativeSrc": "4619:50:8",
																"nodeType": "YulFunctionCall",
																"src": "4619:50:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4609:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "4353:322:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4399:9:8",
														"nodeType": "YulTypedName",
														"src": "4399:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4410:7:8",
														"nodeType": "YulTypedName",
														"src": "4410:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4422:6:8",
														"nodeType": "YulTypedName",
														"src": "4422:6:8",
														"type": ""
													}
												],
												"src": "4353:322:8"
											},
											{
												"body": {
													"nativeSrc": "4823:364:8",
													"nodeType": "YulBlock",
													"src": "4823:364:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4840:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4840:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4851:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4851:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4833:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:8"
																},
																"nativeSrc": "4833:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4833:21:8"
															},
															"nativeSrc": "4833:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4833:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4874:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4885:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4885:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4870:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:8"
																		},
																		"nativeSrc": "4870:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4870:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "4900:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4900:6:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "4894:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4894:5:8"
																				},
																				"nativeSrc": "4894:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4894:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4917:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4917:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4922:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4922:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4913:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4913:3:8"
																						},
																						"nativeSrc": "4913:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4913:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4926:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4926:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4909:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4909:3:8"
																				},
																				"nativeSrc": "4909:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4909:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4890:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:8"
																		},
																		"nativeSrc": "4890:39:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4890:39:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4863:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4863:6:8"
																},
																"nativeSrc": "4863:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4863:67:8"
															},
															"nativeSrc": "4863:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4863:67:8"
														},
														{
															"nativeSrc": "4939:42:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4939:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4969:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4977:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4977:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4965:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:8"
																		},
																		"nativeSrc": "4965:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4965:15:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4959:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4959:5:8"
																},
																"nativeSrc": "4959:22:8",
																"nodeType": "YulFunctionCall",
																"src": "4959:22:8"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "4943:12:8",
																	"nodeType": "YulTypedName",
																	"src": "4943:12:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5001:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5001:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5012:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5012:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4997:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4997:3:8"
																		},
																		"nativeSrc": "4997:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5017:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5017:4:8",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4990:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:8"
																},
																"nativeSrc": "4990:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4990:32:8"
															},
															"nativeSrc": "4990:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "4990:32:8"
														},
														{
															"nativeSrc": "5031:66:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5031:66:8",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nativeSrc": "5063:12:8",
																		"nodeType": "YulIdentifier",
																		"src": "5063:12:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5081:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5092:3:8",
																				"nodeType": "YulLiteral",
																				"src": "5092:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5077:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5077:3:8"
																		},
																		"nativeSrc": "5077:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5077:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "5045:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5045:17:8"
																},
																"nativeSrc": "5045:52:8",
																"nodeType": "YulFunctionCall",
																"src": "5045:52:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "5035:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5035:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5117:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5117:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5128:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5128:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5113:3:8"
																		},
																		"nativeSrc": "5113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5113:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5145:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5145:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5153:2:8",
																						"nodeType": "YulLiteral",
																						"src": "5153:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5141:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5141:3:8"
																				},
																				"nativeSrc": "5141:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5141:15:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5135:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5135:5:8"
																		},
																		"nativeSrc": "5135:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5135:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5106:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5106:6:8"
																},
																"nativeSrc": "5106:52:8",
																"nodeType": "YulFunctionCall",
																"src": "5106:52:8"
															},
															"nativeSrc": "5106:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "5106:52:8"
														},
														{
															"nativeSrc": "5167:14:8",
															"nodeType": "YulAssignment",
															"src": "5167:14:8",
															"value": {
																"name": "tail_1",
																"nativeSrc": "5175:6:8",
																"nodeType": "YulIdentifier",
																"src": "5175:6:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5167:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5167:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_User_$959_memory_ptr__to_t_struct$_User_$959_memory_ptr__fromStack_reversed",
												"nativeSrc": "4680:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4792:9:8",
														"nodeType": "YulTypedName",
														"src": "4792:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4803:6:8",
														"nodeType": "YulTypedName",
														"src": "4803:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4814:4:8",
														"nodeType": "YulTypedName",
														"src": "4814:4:8",
														"type": ""
													}
												],
												"src": "4680:507:8"
											},
											{
												"body": {
													"nativeSrc": "5262:185:8",
													"nodeType": "YulBlock",
													"src": "5262:185:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5308:16:8",
																"nodeType": "YulBlock",
																"src": "5308:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5317:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5317:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5320:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5320:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5310:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5310:6:8"
																			},
																			"nativeSrc": "5310:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5310:12:8"
																		},
																		"nativeSrc": "5310:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5310:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5283:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5292:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5279:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:8"
																		},
																		"nativeSrc": "5279:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5304:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5275:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:8"
																},
																"nativeSrc": "5275:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5275:32:8"
															},
															"nativeSrc": "5272:52:8",
															"nodeType": "YulIf",
															"src": "5272:52:8"
														},
														{
															"nativeSrc": "5333:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5333:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5359:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5359:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5346:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5346:12:8"
																},
																"nativeSrc": "5346:23:8",
																"nodeType": "YulFunctionCall",
																"src": "5346:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5337:5:8",
																	"nodeType": "YulTypedName",
																	"src": "5337:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "5378:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5378:32:8"
																},
																"nativeSrc": "5378:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5378:39:8"
															},
															"nativeSrc": "5378:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "5378:39:8"
														},
														{
															"nativeSrc": "5426:15:8",
															"nodeType": "YulAssignment",
															"src": "5426:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "5436:5:8",
																"nodeType": "YulIdentifier",
																"src": "5436:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5426:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5192:255:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5228:9:8",
														"nodeType": "YulTypedName",
														"src": "5228:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5239:7:8",
														"nodeType": "YulTypedName",
														"src": "5239:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5251:6:8",
														"nodeType": "YulTypedName",
														"src": "5251:6:8",
														"type": ""
													}
												],
												"src": "5192:255:8"
											},
											{
												"body": {
													"nativeSrc": "5522:156:8",
													"nodeType": "YulBlock",
													"src": "5522:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5568:16:8",
																"nodeType": "YulBlock",
																"src": "5568:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5577:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5577:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5580:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5580:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5570:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5570:6:8"
																			},
																			"nativeSrc": "5570:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5570:12:8"
																		},
																		"nativeSrc": "5570:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5570:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5543:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5543:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5552:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5552:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5539:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5539:3:8"
																		},
																		"nativeSrc": "5539:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5539:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5564:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5564:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5535:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:8"
																},
																"nativeSrc": "5535:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5535:32:8"
															},
															"nativeSrc": "5532:52:8",
															"nodeType": "YulIf",
															"src": "5532:52:8"
														},
														{
															"nativeSrc": "5593:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5593:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5606:1:8",
																"nodeType": "YulLiteral",
																"src": "5606:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5597:5:8",
																	"nodeType": "YulTypedName",
																	"src": "5597:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5616:32:8",
															"nodeType": "YulAssignment",
															"src": "5616:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5638:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5638:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5625:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5625:12:8"
																},
																"nativeSrc": "5625:23:8",
																"nodeType": "YulFunctionCall",
																"src": "5625:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5616:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5616:5:8"
																}
															]
														},
														{
															"nativeSrc": "5657:15:8",
															"nodeType": "YulAssignment",
															"src": "5657:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "5667:5:8",
																"nodeType": "YulIdentifier",
																"src": "5667:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5657:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5452:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5488:9:8",
														"nodeType": "YulTypedName",
														"src": "5488:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5499:7:8",
														"nodeType": "YulTypedName",
														"src": "5499:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5511:6:8",
														"nodeType": "YulTypedName",
														"src": "5511:6:8",
														"type": ""
													}
												],
												"src": "5452:226:8"
											},
											{
												"body": {
													"nativeSrc": "5784:102:8",
													"nodeType": "YulBlock",
													"src": "5784:102:8",
													"statements": [
														{
															"nativeSrc": "5794:26:8",
															"nodeType": "YulAssignment",
															"src": "5794:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5806:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5806:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5817:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5817:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5802:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5802:3:8"
																},
																"nativeSrc": "5802:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5802:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5794:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5794:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5836:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5836:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5851:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5851:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5867:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5867:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5872:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5872:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5863:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5863:3:8"
																						},
																						"nativeSrc": "5863:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5863:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5876:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5876:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5859:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5859:3:8"
																				},
																				"nativeSrc": "5859:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5859:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5847:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:8"
																		},
																		"nativeSrc": "5847:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5829:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5829:6:8"
																},
																"nativeSrc": "5829:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5829:51:8"
															},
															"nativeSrc": "5829:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5829:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5683:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5753:9:8",
														"nodeType": "YulTypedName",
														"src": "5753:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5764:6:8",
														"nodeType": "YulTypedName",
														"src": "5764:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5775:4:8",
														"nodeType": "YulTypedName",
														"src": "5775:4:8",
														"type": ""
													}
												],
												"src": "5683:203:8"
											},
											{
												"body": {
													"nativeSrc": "6068:211:8",
													"nodeType": "YulBlock",
													"src": "6068:211:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6085:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6085:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6100:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6100:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6116:3:8",
																								"nodeType": "YulLiteral",
																								"src": "6116:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6121:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6121:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6112:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6112:3:8"
																						},
																						"nativeSrc": "6112:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6112:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6125:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6125:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6108:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6108:3:8"
																				},
																				"nativeSrc": "6108:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6108:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6096:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6096:3:8"
																		},
																		"nativeSrc": "6096:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6096:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6078:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:8"
																},
																"nativeSrc": "6078:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6078:51:8"
															},
															"nativeSrc": "6078:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6078:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6149:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6149:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6160:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6160:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6145:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:8"
																		},
																		"nativeSrc": "6145:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6165:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:8"
																},
																"nativeSrc": "6138:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6138:30:8"
															},
															"nativeSrc": "6138:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6138:30:8"
														},
														{
															"nativeSrc": "6177:53:8",
															"nodeType": "YulAssignment",
															"src": "6177:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6203:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6203:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6215:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6215:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6226:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6226:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6211:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6211:3:8"
																		},
																		"nativeSrc": "6211:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6211:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "6185:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6185:17:8"
																},
																"nativeSrc": "6185:45:8",
																"nodeType": "YulFunctionCall",
																"src": "6185:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6177:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6177:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6250:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6250:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6261:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6261:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6246:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6246:3:8"
																		},
																		"nativeSrc": "6246:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6246:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6266:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6266:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6239:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:8"
																},
																"nativeSrc": "6239:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6239:34:8"
															},
															"nativeSrc": "6239:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6239:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "5891:388:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6021:9:8",
														"nodeType": "YulTypedName",
														"src": "6021:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6032:6:8",
														"nodeType": "YulTypedName",
														"src": "6032:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6040:6:8",
														"nodeType": "YulTypedName",
														"src": "6040:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6048:6:8",
														"nodeType": "YulTypedName",
														"src": "6048:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6059:4:8",
														"nodeType": "YulTypedName",
														"src": "6059:4:8",
														"type": ""
													}
												],
												"src": "5891:388:8"
											},
											{
												"body": {
													"nativeSrc": "6371:317:8",
													"nodeType": "YulBlock",
													"src": "6371:317:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6417:16:8",
																"nodeType": "YulBlock",
																"src": "6417:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6426:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6426:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6429:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6429:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6419:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6419:6:8"
																			},
																			"nativeSrc": "6419:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6419:12:8"
																		},
																		"nativeSrc": "6419:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6419:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6392:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6401:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6401:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6388:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:8"
																		},
																		"nativeSrc": "6388:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6388:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6413:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6413:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6384:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6384:3:8"
																},
																"nativeSrc": "6384:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6384:32:8"
															},
															"nativeSrc": "6381:52:8",
															"nodeType": "YulIf",
															"src": "6381:52:8"
														},
														{
															"nativeSrc": "6442:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6442:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6468:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6468:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6455:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6455:12:8"
																},
																"nativeSrc": "6455:23:8",
																"nodeType": "YulFunctionCall",
																"src": "6455:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6446:5:8",
																	"nodeType": "YulTypedName",
																	"src": "6446:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6520:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6520:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "6487:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "6487:32:8"
																},
																"nativeSrc": "6487:39:8",
																"nodeType": "YulFunctionCall",
																"src": "6487:39:8"
															},
															"nativeSrc": "6487:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "6487:39:8"
														},
														{
															"nativeSrc": "6535:15:8",
															"nodeType": "YulAssignment",
															"src": "6535:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "6545:5:8",
																"nodeType": "YulIdentifier",
																"src": "6545:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6535:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:8"
																}
															]
														},
														{
															"nativeSrc": "6559:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6559:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6591:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6591:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6602:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6602:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6587:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6587:3:8"
																		},
																		"nativeSrc": "6587:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6587:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6574:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6574:12:8"
																},
																"nativeSrc": "6574:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6574:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6563:7:8",
																	"nodeType": "YulTypedName",
																	"src": "6563:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "6648:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "6648:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "6615:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "6615:32:8"
																},
																"nativeSrc": "6615:41:8",
																"nodeType": "YulFunctionCall",
																"src": "6615:41:8"
															},
															"nativeSrc": "6615:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "6615:41:8"
														},
														{
															"nativeSrc": "6665:17:8",
															"nodeType": "YulAssignment",
															"src": "6665:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "6675:7:8",
																"nodeType": "YulIdentifier",
																"src": "6675:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6665:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6665:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6284:404:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6329:9:8",
														"nodeType": "YulTypedName",
														"src": "6329:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6340:7:8",
														"nodeType": "YulTypedName",
														"src": "6340:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6352:6:8",
														"nodeType": "YulTypedName",
														"src": "6352:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6360:6:8",
														"nodeType": "YulTypedName",
														"src": "6360:6:8",
														"type": ""
													}
												],
												"src": "6284:404:8"
											},
											{
												"body": {
													"nativeSrc": "6867:177:8",
													"nodeType": "YulBlock",
													"src": "6867:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6884:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6884:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6895:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6895:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:8"
																},
																"nativeSrc": "6877:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6877:21:8"
															},
															"nativeSrc": "6877:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6877:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6918:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6918:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6929:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6929:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6914:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6914:3:8"
																		},
																		"nativeSrc": "6914:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6914:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6934:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6934:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6907:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6907:6:8"
																},
																"nativeSrc": "6907:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6907:30:8"
															},
															"nativeSrc": "6907:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6907:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6957:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6957:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6968:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6968:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6953:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6953:3:8"
																		},
																		"nativeSrc": "6953:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6953:18:8"
																	},
																	{
																		"hexValue": "54686973206973206120636f6e7472616374206164647265737321",
																		"kind": "string",
																		"nativeSrc": "6973:29:8",
																		"nodeType": "YulLiteral",
																		"src": "6973:29:8",
																		"type": "",
																		"value": "This is a contract address!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6946:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6946:6:8"
																},
																"nativeSrc": "6946:57:8",
																"nodeType": "YulFunctionCall",
																"src": "6946:57:8"
															},
															"nativeSrc": "6946:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "6946:57:8"
														},
														{
															"nativeSrc": "7012:26:8",
															"nodeType": "YulAssignment",
															"src": "7012:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7024:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7024:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7035:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7035:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7020:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:8"
																},
																"nativeSrc": "7020:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7020:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7012:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7012:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6693:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6844:9:8",
														"nodeType": "YulTypedName",
														"src": "6844:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6858:4:8",
														"nodeType": "YulTypedName",
														"src": "6858:4:8",
														"type": ""
													}
												],
												"src": "6693:351:8"
											},
											{
												"body": {
													"nativeSrc": "7223:170:8",
													"nodeType": "YulBlock",
													"src": "7223:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7240:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7240:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7251:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7251:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7233:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:8"
																},
																"nativeSrc": "7233:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7233:21:8"
															},
															"nativeSrc": "7233:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7233:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7274:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7274:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7285:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7285:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7270:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7270:3:8"
																		},
																		"nativeSrc": "7270:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7270:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7290:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7290:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7263:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7263:6:8"
																},
																"nativeSrc": "7263:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7263:30:8"
															},
															"nativeSrc": "7263:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7263:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7313:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7313:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7324:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7324:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7309:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7309:3:8"
																		},
																		"nativeSrc": "7309:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7309:18:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7329:22:8",
																		"nodeType": "YulLiteral",
																		"src": "7329:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7302:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7302:6:8"
																},
																"nativeSrc": "7302:50:8",
																"nodeType": "YulFunctionCall",
																"src": "7302:50:8"
															},
															"nativeSrc": "7302:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "7302:50:8"
														},
														{
															"nativeSrc": "7361:26:8",
															"nodeType": "YulAssignment",
															"src": "7361:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7373:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7373:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7384:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7384:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7369:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7369:3:8"
																},
																"nativeSrc": "7369:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7369:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7361:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7361:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7049:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7200:9:8",
														"nodeType": "YulTypedName",
														"src": "7200:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7214:4:8",
														"nodeType": "YulTypedName",
														"src": "7214:4:8",
														"type": ""
													}
												],
												"src": "7049:344:8"
											},
											{
												"body": {
													"nativeSrc": "7572:181:8",
													"nodeType": "YulBlock",
													"src": "7572:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7589:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7589:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7600:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7600:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7582:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7582:6:8"
																},
																"nativeSrc": "7582:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7582:21:8"
															},
															"nativeSrc": "7582:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7582:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7623:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7623:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7634:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7634:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7619:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7619:3:8"
																		},
																		"nativeSrc": "7619:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7619:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7639:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7639:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7612:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7612:6:8"
																},
																"nativeSrc": "7612:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7612:30:8"
															},
															"nativeSrc": "7612:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7612:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7662:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7662:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7673:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7673:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7658:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7658:3:8"
																		},
																		"nativeSrc": "7658:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7658:18:8"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e742065786365656473206c696d6974",
																		"kind": "string",
																		"nativeSrc": "7678:33:8",
																		"nodeType": "YulLiteral",
																		"src": "7678:33:8",
																		"type": "",
																		"value": "Withdrawal amount exceeds limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7651:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7651:6:8"
																},
																"nativeSrc": "7651:61:8",
																"nodeType": "YulFunctionCall",
																"src": "7651:61:8"
															},
															"nativeSrc": "7651:61:8",
															"nodeType": "YulExpressionStatement",
															"src": "7651:61:8"
														},
														{
															"nativeSrc": "7721:26:8",
															"nodeType": "YulAssignment",
															"src": "7721:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7733:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7733:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7729:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:8"
																},
																"nativeSrc": "7729:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7729:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7721:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7721:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7398:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7549:9:8",
														"nodeType": "YulTypedName",
														"src": "7549:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7563:4:8",
														"nodeType": "YulTypedName",
														"src": "7563:4:8",
														"type": ""
													}
												],
												"src": "7398:355:8"
											},
											{
												"body": {
													"nativeSrc": "7790:95:8",
													"nodeType": "YulBlock",
													"src": "7790:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7807:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7807:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7814:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7814:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7819:10:8",
																				"nodeType": "YulLiteral",
																				"src": "7819:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7810:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7810:3:8"
																		},
																		"nativeSrc": "7810:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7810:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7800:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7800:6:8"
																},
																"nativeSrc": "7800:31:8",
																"nodeType": "YulFunctionCall",
																"src": "7800:31:8"
															},
															"nativeSrc": "7800:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "7800:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7847:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7847:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7850:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7850:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7840:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7840:6:8"
																},
																"nativeSrc": "7840:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7840:15:8"
															},
															"nativeSrc": "7840:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7840:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7871:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7871:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7874:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7874:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7864:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:8"
																},
																"nativeSrc": "7864:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7864:15:8"
															},
															"nativeSrc": "7864:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7864:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7758:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7758:127:8"
											},
											{
												"body": {
													"nativeSrc": "7939:79:8",
													"nodeType": "YulBlock",
													"src": "7939:79:8",
													"statements": [
														{
															"nativeSrc": "7949:17:8",
															"nodeType": "YulAssignment",
															"src": "7949:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7961:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7961:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7964:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7964:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7957:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7957:3:8"
																},
																"nativeSrc": "7957:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7957:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7949:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7949:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7990:22:8",
																"nodeType": "YulBlock",
																"src": "7990:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7992:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7992:16:8"
																			},
																			"nativeSrc": "7992:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7992:18:8"
																		},
																		"nativeSrc": "7992:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7992:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7981:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7981:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7987:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7987:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7978:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7978:2:8"
																},
																"nativeSrc": "7978:11:8",
																"nodeType": "YulFunctionCall",
																"src": "7978:11:8"
															},
															"nativeSrc": "7975:37:8",
															"nodeType": "YulIf",
															"src": "7975:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7890:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7921:1:8",
														"nodeType": "YulTypedName",
														"src": "7921:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7924:1:8",
														"nodeType": "YulTypedName",
														"src": "7924:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7930:4:8",
														"nodeType": "YulTypedName",
														"src": "7930:4:8",
														"type": ""
													}
												],
												"src": "7890:128:8"
											},
											{
												"body": {
													"nativeSrc": "8078:325:8",
													"nodeType": "YulBlock",
													"src": "8078:325:8",
													"statements": [
														{
															"nativeSrc": "8088:22:8",
															"nodeType": "YulAssignment",
															"src": "8088:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8102:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8102:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "8105:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8105:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8098:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:8"
																},
																"nativeSrc": "8098:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8098:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8088:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:8"
																}
															]
														},
														{
															"nativeSrc": "8119:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8149:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8145:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:8"
																},
																"nativeSrc": "8145:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8145:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8123:18:8",
																	"nodeType": "YulTypedName",
																	"src": "8123:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:31:8",
																"nodeType": "YulBlock",
																"src": "8196:31:8",
																"statements": [
																	{
																		"nativeSrc": "8198:27:8",
																		"nodeType": "YulAssignment",
																		"src": "8198:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8212:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8212:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8220:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8220:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8208:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8208:3:8"
																			},
																			"nativeSrc": "8208:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8208:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8198:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8198:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8176:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "8176:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8169:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:8"
																},
																"nativeSrc": "8169:26:8",
																"nodeType": "YulFunctionCall",
																"src": "8169:26:8"
															},
															"nativeSrc": "8166:61:8",
															"nodeType": "YulIf",
															"src": "8166:61:8"
														},
														{
															"body": {
																"nativeSrc": "8286:111:8",
																"nodeType": "YulBlock",
																"src": "8286:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8307:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8307:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8314:3:8",
																							"nodeType": "YulLiteral",
																							"src": "8314:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8319:10:8",
																							"nodeType": "YulLiteral",
																							"src": "8319:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8310:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8310:3:8"
																					},
																					"nativeSrc": "8310:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8310:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8300:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8300:6:8"
																			},
																			"nativeSrc": "8300:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8300:31:8"
																		},
																		"nativeSrc": "8300:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8300:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8351:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8351:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8354:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8354:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8344:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8344:6:8"
																			},
																			"nativeSrc": "8344:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8344:15:8"
																		},
																		"nativeSrc": "8344:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8344:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8379:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8379:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8382:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8382:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8372:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8372:6:8"
																			},
																			"nativeSrc": "8372:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8372:15:8"
																		},
																		"nativeSrc": "8372:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8372:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8242:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "8242:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8265:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8265:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8273:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8273:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8262:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8262:2:8"
																		},
																		"nativeSrc": "8262:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8262:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8239:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8239:2:8"
																},
																"nativeSrc": "8239:38:8",
																"nodeType": "YulFunctionCall",
																"src": "8239:38:8"
															},
															"nativeSrc": "8236:161:8",
															"nodeType": "YulIf",
															"src": "8236:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8023:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8058:4:8",
														"nodeType": "YulTypedName",
														"src": "8058:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8067:6:8",
														"nodeType": "YulTypedName",
														"src": "8067:6:8",
														"type": ""
													}
												],
												"src": "8023:380:8"
											},
											{
												"body": {
													"nativeSrc": "8582:174:8",
													"nodeType": "YulBlock",
													"src": "8582:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8599:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8599:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8610:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8610:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8592:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:8"
																},
																"nativeSrc": "8592:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8592:21:8"
															},
															"nativeSrc": "8592:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8592:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8633:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8633:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8644:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8644:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8629:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8629:3:8"
																		},
																		"nativeSrc": "8629:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8629:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8649:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8649:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8622:6:8"
																},
																"nativeSrc": "8622:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8622:30:8"
															},
															"nativeSrc": "8622:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8622:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8672:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8672:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8683:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8683:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8668:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8668:3:8"
																		},
																		"nativeSrc": "8668:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8668:18:8"
																	},
																	{
																		"hexValue": "5573657220616c7265616479207265676973746572656421",
																		"kind": "string",
																		"nativeSrc": "8688:26:8",
																		"nodeType": "YulLiteral",
																		"src": "8688:26:8",
																		"type": "",
																		"value": "User already registered!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8661:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:8"
																},
																"nativeSrc": "8661:54:8",
																"nodeType": "YulFunctionCall",
																"src": "8661:54:8"
															},
															"nativeSrc": "8661:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "8661:54:8"
														},
														{
															"nativeSrc": "8724:26:8",
															"nodeType": "YulAssignment",
															"src": "8724:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8736:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8736:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8747:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8747:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8732:3:8"
																},
																"nativeSrc": "8732:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8732:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8724:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8724:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8408:348:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8559:9:8",
														"nodeType": "YulTypedName",
														"src": "8559:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8573:4:8",
														"nodeType": "YulTypedName",
														"src": "8573:4:8",
														"type": ""
													}
												],
												"src": "8408:348:8"
											},
											{
												"body": {
													"nativeSrc": "8817:65:8",
													"nodeType": "YulBlock",
													"src": "8817:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8834:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8834:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "8837:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8837:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8827:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8827:6:8"
																},
																"nativeSrc": "8827:14:8",
																"nodeType": "YulFunctionCall",
																"src": "8827:14:8"
															},
															"nativeSrc": "8827:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "8827:14:8"
														},
														{
															"nativeSrc": "8850:26:8",
															"nodeType": "YulAssignment",
															"src": "8850:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8868:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8868:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8871:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8871:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8858:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8858:9:8"
																},
																"nativeSrc": "8858:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8858:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8850:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8850:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "8761:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8800:3:8",
														"nodeType": "YulTypedName",
														"src": "8800:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8808:4:8",
														"nodeType": "YulTypedName",
														"src": "8808:4:8",
														"type": ""
													}
												],
												"src": "8761:121:8"
											},
											{
												"body": {
													"nativeSrc": "8968:437:8",
													"nodeType": "YulBlock",
													"src": "8968:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9001:398:8",
																"nodeType": "YulBlock",
																"src": "9001:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9022:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9022:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "9025:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9025:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9015:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9015:6:8"
																			},
																			"nativeSrc": "9015:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9015:16:8"
																		},
																		"nativeSrc": "9015:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9015:16:8"
																	},
																	{
																		"nativeSrc": "9044:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9044:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9066:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9066:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9069:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9069:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "9056:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9056:9:8"
																			},
																			"nativeSrc": "9056:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9056:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "9048:4:8",
																				"nodeType": "YulTypedName",
																				"src": "9048:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9087:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9087:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9110:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9110:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9120:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9120:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "9127:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "9127:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9139:2:8",
																									"nodeType": "YulLiteral",
																									"src": "9139:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9123:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "9123:3:8"
																							},
																							"nativeSrc": "9123:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9123:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9116:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9116:3:8"
																					},
																					"nativeSrc": "9116:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9116:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9106:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9106:3:8"
																			},
																			"nativeSrc": "9106:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9106:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "9091:11:8",
																				"nodeType": "YulTypedName",
																				"src": "9091:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9181:23:8",
																			"nodeType": "YulBlock",
																			"src": "9181:23:8",
																			"statements": [
																				{
																					"nativeSrc": "9183:19:8",
																					"nodeType": "YulAssignment",
																					"src": "9183:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "9198:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9198:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "9183:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "9183:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "9163:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "9163:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9175:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9175:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9160:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9160:2:8"
																			},
																			"nativeSrc": "9160:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9160:20:8"
																		},
																		"nativeSrc": "9157:47:8",
																		"nodeType": "YulIf",
																		"src": "9157:47:8"
																	},
																	{
																		"nativeSrc": "9217:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9217:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9231:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9231:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9241:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9241:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "9248:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9248:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9253:2:8",
																									"nodeType": "YulLiteral",
																									"src": "9253:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9244:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "9244:3:8"
																							},
																							"nativeSrc": "9244:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9244:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9237:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9237:3:8"
																					},
																					"nativeSrc": "9237:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9237:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9227:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9227:3:8"
																			},
																			"nativeSrc": "9227:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9227:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "9221:2:8",
																				"nodeType": "YulTypedName",
																				"src": "9221:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9271:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9271:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "9284:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "9284:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "9275:5:8",
																				"nodeType": "YulTypedName",
																				"src": "9275:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9369:20:8",
																			"nodeType": "YulBlock",
																			"src": "9369:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9378:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "9378:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9385:1:8",
																								"nodeType": "YulLiteral",
																								"src": "9385:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "9371:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "9371:6:8"
																						},
																						"nativeSrc": "9371:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9371:16:8"
																					},
																					"nativeSrc": "9371:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9371:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9319:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9319:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9326:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9326:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9316:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9316:2:8"
																			},
																			"nativeSrc": "9316:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9316:13:8"
																		},
																		"nativeSrc": "9308:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "9330:26:8",
																			"nodeType": "YulBlock",
																			"src": "9330:26:8",
																			"statements": [
																				{
																					"nativeSrc": "9332:22:8",
																					"nodeType": "YulAssignment",
																					"src": "9332:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9345:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "9345:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9352:1:8",
																								"nodeType": "YulLiteral",
																								"src": "9352:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9341:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9341:3:8"
																						},
																						"nativeSrc": "9341:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9341:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "9332:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9332:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "9312:3:8",
																			"nodeType": "YulBlock",
																			"src": "9312:3:8",
																			"statements": []
																		},
																		"src": "9308:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8984:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8984:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8989:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8989:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8981:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8981:2:8"
																},
																"nativeSrc": "8981:11:8",
																"nodeType": "YulFunctionCall",
																"src": "8981:11:8"
															},
															"nativeSrc": "8978:421:8",
															"nodeType": "YulIf",
															"src": "8978:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "8887:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8940:5:8",
														"nodeType": "YulTypedName",
														"src": "8940:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8947:3:8",
														"nodeType": "YulTypedName",
														"src": "8947:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8952:10:8",
														"nodeType": "YulTypedName",
														"src": "8952:10:8",
														"type": ""
													}
												],
												"src": "8887:518:8"
											},
											{
												"body": {
													"nativeSrc": "9495:81:8",
													"nodeType": "YulBlock",
													"src": "9495:81:8",
													"statements": [
														{
															"nativeSrc": "9505:65:8",
															"nodeType": "YulAssignment",
															"src": "9505:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9520:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9520:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9538:1:8",
																										"nodeType": "YulLiteral",
																										"src": "9538:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "9541:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "9541:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "9534:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9534:3:8"
																								},
																								"nativeSrc": "9534:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9534:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9551:1:8",
																										"nodeType": "YulLiteral",
																										"src": "9551:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "9547:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9547:3:8"
																								},
																								"nativeSrc": "9547:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9547:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "9530:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9530:3:8"
																						},
																						"nativeSrc": "9530:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9530:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9526:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9526:3:8"
																				},
																				"nativeSrc": "9526:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9526:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9516:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9516:3:8"
																		},
																		"nativeSrc": "9516:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9516:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9562:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9562:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9565:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9565:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9558:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9558:3:8"
																		},
																		"nativeSrc": "9558:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9558:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9513:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9513:2:8"
																},
																"nativeSrc": "9513:57:8",
																"nodeType": "YulFunctionCall",
																"src": "9513:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9505:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9505:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9410:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9472:4:8",
														"nodeType": "YulTypedName",
														"src": "9472:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9478:3:8",
														"nodeType": "YulTypedName",
														"src": "9478:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9486:4:8",
														"nodeType": "YulTypedName",
														"src": "9486:4:8",
														"type": ""
													}
												],
												"src": "9410:166:8"
											},
											{
												"body": {
													"nativeSrc": "9677:1203:8",
													"nodeType": "YulBlock",
													"src": "9677:1203:8",
													"statements": [
														{
															"nativeSrc": "9687:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9687:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9707:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9707:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9701:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9701:5:8"
																},
																"nativeSrc": "9701:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9701:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9691:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9691:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9754:22:8",
																"nodeType": "YulBlock",
																"src": "9754:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9756:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9756:16:8"
																			},
																			"nativeSrc": "9756:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9756:18:8"
																		},
																		"nativeSrc": "9756:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9756:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9726:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9726:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9734:18:8",
																		"nodeType": "YulLiteral",
																		"src": "9734:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9723:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9723:2:8"
																},
																"nativeSrc": "9723:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9723:30:8"
															},
															"nativeSrc": "9720:56:8",
															"nodeType": "YulIf",
															"src": "9720:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9829:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9829:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "9867:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9867:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "9861:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9861:5:8"
																				},
																				"nativeSrc": "9861:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9861:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "9835:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "9835:25:8"
																		},
																		"nativeSrc": "9835:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9835:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9875:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9875:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "9785:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9785:43:8"
																},
																"nativeSrc": "9785:97:8",
																"nodeType": "YulFunctionCall",
																"src": "9785:97:8"
															},
															"nativeSrc": "9785:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "9785:97:8"
														},
														{
															"nativeSrc": "9891:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9891:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "9908:1:8",
																"nodeType": "YulLiteral",
																"src": "9908:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9895:9:8",
																	"nodeType": "YulTypedName",
																	"src": "9895:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9918:17:8",
															"nodeType": "YulAssignment",
															"src": "9918:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "9931:4:8",
																"nodeType": "YulLiteral",
																"src": "9931:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9918:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "9918:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9981:642:8",
																		"nodeType": "YulBlock",
																		"src": "9981:642:8",
																		"statements": [
																			{
																				"nativeSrc": "9995:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9995:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "10014:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "10014:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "10026:2:8",
																									"nodeType": "YulLiteral",
																									"src": "10026:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "10022:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "10022:3:8"
																							},
																							"nativeSrc": "10022:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "10022:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "10010:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "10010:3:8"
																					},
																					"nativeSrc": "10010:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10010:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9999:7:8",
																						"nodeType": "YulTypedName",
																						"src": "9999:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10043:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10043:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10087:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "10087:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "10057:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "10057:29:8"
																					},
																					"nativeSrc": "10057:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10057:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "10047:6:8",
																						"nodeType": "YulTypedName",
																						"src": "10047:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10105:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10105:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10114:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10114:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10109:1:8",
																						"nodeType": "YulTypedName",
																						"src": "10109:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10185:165:8",
																					"nodeType": "YulBlock",
																					"src": "10185:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10210:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "10210:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10228:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "10228:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10233:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "10233:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10224:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "10224:3:8"
																												},
																												"nativeSrc": "10224:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "10224:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "10218:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "10218:5:8"
																										},
																										"nativeSrc": "10218:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10218:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10203:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10203:6:8"
																								},
																								"nativeSrc": "10203:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10203:42:8"
																							},
																							"nativeSrc": "10203:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "10203:42:8"
																						},
																						{
																							"nativeSrc": "10262:24:8",
																							"nodeType": "YulAssignment",
																							"src": "10262:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10276:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "10276:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10284:1:8",
																										"nodeType": "YulLiteral",
																										"src": "10284:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10272:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "10272:3:8"
																								},
																								"nativeSrc": "10272:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10272:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "10262:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10262:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "10303:33:8",
																							"nodeType": "YulAssignment",
																							"src": "10303:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "10320:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "10320:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10331:4:8",
																										"nodeType": "YulLiteral",
																										"src": "10331:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10316:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "10316:3:8"
																								},
																								"nativeSrc": "10316:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10316:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "10303:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "10303:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10139:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "10139:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10142:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "10142:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10136:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "10136:2:8"
																					},
																					"nativeSrc": "10136:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10136:14:8"
																				},
																				"nativeSrc": "10128:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10151:21:8",
																					"nodeType": "YulBlock",
																					"src": "10151:21:8",
																					"statements": [
																						{
																							"nativeSrc": "10153:17:8",
																							"nodeType": "YulAssignment",
																							"src": "10153:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10162:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "10162:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10165:4:8",
																										"nodeType": "YulLiteral",
																										"src": "10165:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10158:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "10158:3:8"
																								},
																								"nativeSrc": "10158:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10158:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10153:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "10153:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10132:3:8",
																					"nodeType": "YulBlock",
																					"src": "10132:3:8",
																					"statements": []
																				},
																				"src": "10128:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "10398:166:8",
																					"nodeType": "YulBlock",
																					"src": "10398:166:8",
																					"statements": [
																						{
																							"nativeSrc": "10416:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10416:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10443:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "10443:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10448:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "10448:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10439:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "10439:3:8"
																										},
																										"nativeSrc": "10439:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10439:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10433:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10433:5:8"
																								},
																								"nativeSrc": "10433:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10433:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10420:9:8",
																									"nodeType": "YulTypedName",
																									"src": "10420:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10483:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "10483:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10495:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "10495:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "10522:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "10522:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "10525:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "10525:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "10518:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "10518:3:8"
																																		},
																																		"nativeSrc": "10518:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "10518:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10534:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "10534:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "10514:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "10514:3:8"
																																},
																																"nativeSrc": "10514:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "10514:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10544:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "10544:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "10540:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "10540:3:8"
																																},
																																"nativeSrc": "10540:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "10540:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "10510:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "10510:3:8"
																														},
																														"nativeSrc": "10510:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "10510:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "10506:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "10506:3:8"
																												},
																												"nativeSrc": "10506:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "10506:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "10491:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "10491:3:8"
																										},
																										"nativeSrc": "10491:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10491:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10476:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10476:6:8"
																								},
																								"nativeSrc": "10476:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10476:74:8"
																							},
																							"nativeSrc": "10476:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "10476:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10369:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "10369:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10378:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "10378:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10366:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "10366:2:8"
																					},
																					"nativeSrc": "10366:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10366:19:8"
																				},
																				"nativeSrc": "10363:201:8",
																				"nodeType": "YulIf",
																				"src": "10363:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10584:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "10584:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10598:1:8",
																											"nodeType": "YulLiteral",
																											"src": "10598:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "10601:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "10601:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "10594:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "10594:3:8"
																									},
																									"nativeSrc": "10594:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "10594:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10610:1:8",
																									"nodeType": "YulLiteral",
																									"src": "10610:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10590:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "10590:3:8"
																							},
																							"nativeSrc": "10590:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "10590:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10577:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10577:6:8"
																					},
																					"nativeSrc": "10577:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10577:36:8"
																				},
																				"nativeSrc": "10577:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "10577:36:8"
																			}
																		]
																	},
																	"nativeSrc": "9974:649:8",
																	"nodeType": "YulCase",
																	"src": "9974:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9979:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9979:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10640:234:8",
																		"nodeType": "YulBlock",
																		"src": "10640:234:8",
																		"statements": [
																			{
																				"nativeSrc": "10654:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10654:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10667:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10667:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10658:5:8",
																						"nodeType": "YulTypedName",
																						"src": "10658:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10703:67:8",
																					"nodeType": "YulBlock",
																					"src": "10703:67:8",
																					"statements": [
																						{
																							"nativeSrc": "10721:35:8",
																							"nodeType": "YulAssignment",
																							"src": "10721:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10740:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "10740:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10745:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "10745:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10736:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "10736:3:8"
																										},
																										"nativeSrc": "10736:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10736:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10730:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10730:5:8"
																								},
																								"nativeSrc": "10730:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10730:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10721:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10721:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10684:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10684:6:8"
																				},
																				"nativeSrc": "10681:89:8",
																				"nodeType": "YulIf",
																				"src": "10681:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10790:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "10790:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10849:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10849:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10856:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10856:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10796:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "10796:52:8"
																							},
																							"nativeSrc": "10796:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "10796:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10783:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10783:6:8"
																					},
																					"nativeSrc": "10783:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10783:81:8"
																				},
																				"nativeSrc": "10783:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "10783:81:8"
																			}
																		]
																	},
																	"nativeSrc": "10632:242:8",
																	"nodeType": "YulCase",
																	"src": "10632:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9954:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9954:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9962:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9962:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9951:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9951:2:8"
																},
																"nativeSrc": "9951:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9951:14:8"
															},
															"nativeSrc": "9944:930:8",
															"nodeType": "YulSwitch",
															"src": "9944:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9581:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9662:4:8",
														"nodeType": "YulTypedName",
														"src": "9662:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9668:3:8",
														"nodeType": "YulTypedName",
														"src": "9668:3:8",
														"type": ""
													}
												],
												"src": "9581:1299:8"
											},
											{
												"body": {
													"nativeSrc": "11059:165:8",
													"nodeType": "YulBlock",
													"src": "11059:165:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11076:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11076:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11087:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11087:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11069:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11069:6:8"
																},
																"nativeSrc": "11069:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11069:21:8"
															},
															"nativeSrc": "11069:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11069:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11110:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11110:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11121:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11121:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11106:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11106:3:8"
																		},
																		"nativeSrc": "11106:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11106:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11126:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11126:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11099:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:8"
																},
																"nativeSrc": "11099:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11099:30:8"
															},
															"nativeSrc": "11099:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11099:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11149:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11149:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11160:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11160:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11145:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:8"
																		},
																		"nativeSrc": "11145:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11145:18:8"
																	},
																	{
																		"hexValue": "55736572206e6f7420666f756e6421",
																		"kind": "string",
																		"nativeSrc": "11165:17:8",
																		"nodeType": "YulLiteral",
																		"src": "11165:17:8",
																		"type": "",
																		"value": "User not found!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:8"
																},
																"nativeSrc": "11138:45:8",
																"nodeType": "YulFunctionCall",
																"src": "11138:45:8"
															},
															"nativeSrc": "11138:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "11138:45:8"
														},
														{
															"nativeSrc": "11192:26:8",
															"nodeType": "YulAssignment",
															"src": "11192:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11204:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11204:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11215:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11215:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11200:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11200:3:8"
																},
																"nativeSrc": "11200:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11200:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11192:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11192:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10885:339:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11036:9:8",
														"nodeType": "YulTypedName",
														"src": "11036:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11050:4:8",
														"nodeType": "YulTypedName",
														"src": "11050:4:8",
														"type": ""
													}
												],
												"src": "10885:339:8"
											},
											{
												"body": {
													"nativeSrc": "11403:223:8",
													"nodeType": "YulBlock",
													"src": "11403:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11420:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11420:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11431:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11431:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11413:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:8"
																},
																"nativeSrc": "11413:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11413:21:8"
															},
															"nativeSrc": "11413:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11413:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11454:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11454:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11465:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11465:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11450:3:8"
																		},
																		"nativeSrc": "11450:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11450:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11470:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11470:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11443:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11443:6:8"
																},
																"nativeSrc": "11443:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11443:30:8"
															},
															"nativeSrc": "11443:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11443:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11493:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11493:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11504:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11504:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11489:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:8"
																		},
																		"nativeSrc": "11489:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11489:18:8"
																	},
																	{
																		"hexValue": "4d696e696d756d206465706f73697420616d6f756e7420697320302e30303033",
																		"kind": "string",
																		"nativeSrc": "11509:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11509:34:8",
																		"type": "",
																		"value": "Minimum deposit amount is 0.0003"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11482:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11482:6:8"
																},
																"nativeSrc": "11482:62:8",
																"nodeType": "YulFunctionCall",
																"src": "11482:62:8"
															},
															"nativeSrc": "11482:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "11482:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11564:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11564:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11575:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11575:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11560:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11560:3:8"
																		},
																		"nativeSrc": "11560:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11560:18:8"
																	},
																	{
																		"hexValue": "38",
																		"kind": "string",
																		"nativeSrc": "11580:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11580:3:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11553:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11553:6:8"
																},
																"nativeSrc": "11553:31:8",
																"nodeType": "YulFunctionCall",
																"src": "11553:31:8"
															},
															"nativeSrc": "11553:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "11553:31:8"
														},
														{
															"nativeSrc": "11593:27:8",
															"nodeType": "YulAssignment",
															"src": "11593:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11605:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11605:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11616:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11616:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11601:3:8"
																},
																"nativeSrc": "11601:19:8",
																"nodeType": "YulFunctionCall",
																"src": "11601:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11593:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11593:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11229:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11380:9:8",
														"nodeType": "YulTypedName",
														"src": "11380:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11394:4:8",
														"nodeType": "YulTypedName",
														"src": "11394:4:8",
														"type": ""
													}
												],
												"src": "11229:397:8"
											},
											{
												"body": {
													"nativeSrc": "11679:77:8",
													"nodeType": "YulBlock",
													"src": "11679:77:8",
													"statements": [
														{
															"nativeSrc": "11689:16:8",
															"nodeType": "YulAssignment",
															"src": "11689:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11700:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11700:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11703:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11703:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11696:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11696:3:8"
																},
																"nativeSrc": "11696:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11696:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11689:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11689:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11728:22:8",
																"nodeType": "YulBlock",
																"src": "11728:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11730:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11730:16:8"
																			},
																			"nativeSrc": "11730:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11730:18:8"
																		},
																		"nativeSrc": "11730:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11730:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11720:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11720:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11723:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11723:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11717:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11717:2:8"
																},
																"nativeSrc": "11717:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11717:10:8"
															},
															"nativeSrc": "11714:36:8",
															"nodeType": "YulIf",
															"src": "11714:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11631:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11662:1:8",
														"nodeType": "YulTypedName",
														"src": "11662:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11665:1:8",
														"nodeType": "YulTypedName",
														"src": "11665:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11671:3:8",
														"nodeType": "YulTypedName",
														"src": "11671:3:8",
														"type": ""
													}
												],
												"src": "11631:125:8"
											},
											{
												"body": {
													"nativeSrc": "11918:188:8",
													"nodeType": "YulBlock",
													"src": "11918:188:8",
													"statements": [
														{
															"nativeSrc": "11928:26:8",
															"nodeType": "YulAssignment",
															"src": "11928:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11940:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11940:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11951:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11951:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11936:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11936:3:8"
																},
																"nativeSrc": "11936:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11936:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11928:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11928:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11970:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11970:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11985:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11985:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12001:3:8",
																								"nodeType": "YulLiteral",
																								"src": "12001:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12006:1:8",
																								"nodeType": "YulLiteral",
																								"src": "12006:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11997:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11997:3:8"
																						},
																						"nativeSrc": "11997:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11997:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12010:1:8",
																						"nodeType": "YulLiteral",
																						"src": "12010:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11993:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11993:3:8"
																				},
																				"nativeSrc": "11993:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11993:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11981:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11981:3:8"
																		},
																		"nativeSrc": "11981:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11981:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11963:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11963:6:8"
																},
																"nativeSrc": "11963:51:8",
																"nodeType": "YulFunctionCall",
																"src": "11963:51:8"
															},
															"nativeSrc": "11963:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "11963:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12034:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12034:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12045:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12045:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12030:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12030:3:8"
																		},
																		"nativeSrc": "12030:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12030:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12050:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12050:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12023:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12023:6:8"
																},
																"nativeSrc": "12023:34:8",
																"nodeType": "YulFunctionCall",
																"src": "12023:34:8"
															},
															"nativeSrc": "12023:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "12023:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12077:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12077:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12088:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12088:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12073:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12073:3:8"
																		},
																		"nativeSrc": "12073:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12073:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12093:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12093:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12066:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12066:6:8"
																},
																"nativeSrc": "12066:34:8",
																"nodeType": "YulFunctionCall",
																"src": "12066:34:8"
															},
															"nativeSrc": "12066:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "12066:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11761:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11871:9:8",
														"nodeType": "YulTypedName",
														"src": "11871:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11882:6:8",
														"nodeType": "YulTypedName",
														"src": "11882:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11890:6:8",
														"nodeType": "YulTypedName",
														"src": "11890:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11898:6:8",
														"nodeType": "YulTypedName",
														"src": "11898:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11909:4:8",
														"nodeType": "YulTypedName",
														"src": "11909:4:8",
														"type": ""
													}
												],
												"src": "11761:345:8"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value_1)\n        value1 := value_1\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Status_$963__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_struct$_User_$959_memory_ptr__to_t_struct$_User_$959_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), and(mload(value0), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value0, 32))\n        mstore(add(headStart, 64), 0x60)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 128))\n        mstore(add(headStart, 0x60), mload(add(value0, 64)))\n        tail := tail_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"This is a contract address!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Withdrawal amount exceeds limit\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"User already registered!\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"User not found!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Minimum deposit amount is 0.0003\")\n        mstore(add(headStart, 96), \"8\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610130575f3560e01c806370a08231116100a8578063a87430ba1161006d578063a87430ba1461034b578063a9059cbb14610379578063c634d03214610398578063d0e30db0146103b7578063dd62ed3e146103bf578063f2fde38b14610403575f80fd5b806370a08231146102a9578063715018a6146102dd5780637b47ec1a146102f15780638da5cb5b1461031057806395d89b4114610337575f80fd5b8063200d2ed2116100f9578063200d2ed2146101df57806323b872dd14610205578063313ce567146102245780634bff50091461023f5780636281b95b1461026b57806369c212f61461028a575f80fd5b8062f714ce1461013457806306fdde0314610149578063095ea7b3146101735780630e54b872146101a257806318160ddd146101c1575b5f80fd5b610147610142366004610f74565b610422565b005b348015610154575f80fd5b5061015d61057f565b60405161016a9190610fd0565b60405180910390f35b34801561017e575f80fd5b5061019261018d366004610fe9565b61060f565b604051901515815260200161016a565b3480156101ad575f80fd5b506101476101bc3660046110b2565b610628565b3480156101cc575f80fd5b506002545b60405190815260200161016a565b3480156101ea575f80fd5b506009546101f89060ff1681565b60405161016a91906110f6565b348015610210575f80fd5b5061019261021f36600461111c565b61070a565b34801561022f575f80fd5b506040516012815260200161016a565b34801561024a575f80fd5b5061025e61025936600461115a565b61072d565b60405161016a9190611194565b348015610276575f80fd5b506101476102853660046111d7565b610888565b348015610295575f80fd5b5061025e6102a43660046111d7565b61089c565b3480156102b4575f80fd5b506101d16102c33660046111d7565b6001600160a01b03165f9081526020819052604090205490565b3480156102e8575f80fd5b50610147610932565b3480156102fc575f80fd5b5061014761030b3660046111f2565b610945565b34801561031b575f80fd5b506005546040516001600160a01b03909116815260200161016a565b348015610342575f80fd5b5061015d61094f565b348015610356575f80fd5b5061036a6103653660046111d7565b61095e565b60405161016a93929190611209565b348015610384575f80fd5b50610192610393366004610fe9565b610a10565b3480156103a3575f80fd5b506101476103b23660046111f2565b610a1d565b610147610a27565b3480156103ca575f80fd5b506101d16103d936600461123c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b34801561040e575f80fd5b5061014761041d3660046111d7565b610b43565b33803b1561044b5760405162461bcd60e51b815260040161044290611268565b60405180910390fd5b6001600160a01b0382165f908152600660205260409020600201548311156104ac5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610442565b6008548311156104fe5760405162461bcd60e51b815260206004820152601f60248201527f5769746864726177616c20616d6f756e742065786365656473206c696d6974006044820152606401610442565b6001600160a01b0382165f90815260066020526040812060020180548592906105289084906112b3565b9091555061053890508284610a10565b5060405183815233906001600160a01b038416907f46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d906020015b60405180910390a3505050565b60606003805461058e906112c6565b80601f01602080910402602001604051908101604052809291908181526020018280546105ba906112c6565b80156106055780601f106105dc57610100808354040283529160200191610605565b820191905f5260205f20905b8154815290600101906020018083116105e857829003601f168201915b5050505050905090565b5f3361061c818585610b7d565b60019150505b92915050565b6001600160a01b0381165f908152600660205260409020600101805461064d906112c6565b15905061069c5760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642100000000000000006044820152606401610442565b604080516060810182526001600160a01b0383811680835260208084018781525f8587018190529283526006909152939020825181546001600160a01b0319169216919091178155915190919060018201906106f89082611343565b50604082015181600201559050505050565b5f33610717858285610b8f565b610722858585610c0a565b506001949350505050565b61075860405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b335f9081526006602052604090206001018054839190610777906112c6565b90505f036107b95760405162461bcd60e51b815260206004820152600f60248201526e55736572206e6f7420666f756e642160881b6044820152606401610442565b335f9081526006602090815260409182902082516060810190935280546001600160a01b0316835260018101805491928401916107f5906112c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610821906112c6565b801561086c5780601f106108435761010080835404028352916020019161086c565b820191905f5260205f20905b81548152906001019060200180831161084f57829003601f168201915b5050505050815260200160028201548152505091505b50919050565b610890610c67565b61089981610b43565b50565b6108c760405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b816001600160a01b0381163b156108f05760405162461bcd60e51b815260040161044290611268565b6001600160a01b038084165f9081526006602090815260409182902082516060810190935280549093168252600183018054929392918401916107f5906112c6565b61093a610c67565b6109435f610c94565b565b6108993082610ce5565b60606004805461058e906112c6565b60066020525f9081526040902080546001820180546001600160a01b039092169291610989906112c6565b80601f01602080910402602001604051908101604052809291908181526020018280546109b5906112c6565b8015610a005780601f106109d757610100808354040283529160200191610a00565b820191905f5260205f20905b8154815290600101906020018083116109e357829003601f168201915b5050505050908060020154905083565b5f3361061c818585610c0a565b6108993082610cfb565b33803b15610a475760405162461bcd60e51b815260040161044290611268565b600754341015610ad2576009805460ff191660011790556040805160208082526021908201527f4d696e696d756d206465706f73697420616d6f756e7420697320302e3030303391810191909152600760fb1b606082015233907fa8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5906080015b60405180910390a250565b610add33303461070a565b50335f9081526006602052604081206002018054349290610aff9084906113fe565b90915550506009805460ff1916600217905560405134815233907fb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde590602001610ac7565b610b4b610c67565b6001600160a01b038116610b7457604051631e4fbdf760e01b81525f6004820152602401610442565b61089981610c94565b610b8a8383836001610d0d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610c045781811015610bf657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610442565b610c0484848484035f610d0d565b50505050565b6001600160a01b038316610c3357604051634b637e8f60e11b81525f6004820152602401610442565b6001600160a01b038216610c5c5760405163ec442f0560e01b81525f6004820152602401610442565b610b8a838383610ddf565b6005546001600160a01b031633146109435760405163118cdaa760e01b8152336004820152602401610442565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610ced610c67565b610cf78282610ef8565b5050565b610d03610c67565b610cf78282610f2c565b6001600160a01b038416610d365760405163e602df0560e01b81525f6004820152602401610442565b6001600160a01b038316610d5f57604051634a1406b160e11b81525f6004820152602401610442565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610c0457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dd191815260200190565b60405180910390a350505050565b6001600160a01b038316610e09578060025f828254610dfe91906113fe565b90915550610e799050565b6001600160a01b0383165f9081526020819052604090205481811015610e5b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610442565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610e9557600280548290039055610eb3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161057291815260200190565b6001600160a01b038216610f2157604051634b637e8f60e11b81525f6004820152602401610442565b610cf7825f83610ddf565b6001600160a01b038216610f555760405163ec442f0560e01b81525f6004820152602401610442565b610cf75f8383610ddf565b6001600160a01b0381168114610899575f80fd5b5f8060408385031215610f85575f80fd5b823591506020830135610f9781610f60565b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610fe26020830184610fa2565b9392505050565b5f8060408385031215610ffa575f80fd5b823561100581610f60565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611036575f80fd5b813567ffffffffffffffff81111561105057611050611013565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561107f5761107f611013565b604052818152838201602001851015611096575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156110c3575f80fd5b823567ffffffffffffffff8111156110d9575f80fd5b6110e585828601611027565b9250506020830135610f9781610f60565b602081016003831061111657634e487b7160e01b5f52602160045260245ffd5b91905290565b5f805f6060848603121561112e575f80fd5b833561113981610f60565b9250602084013561114981610f60565b929592945050506040919091013590565b5f6020828403121561116a575f80fd5b813567ffffffffffffffff811115611180575f80fd5b61118c84828501611027565b949350505050565b602080825282516001600160a01b031682820152820151606060408301525f906111c16080840182610fa2565b9050604084015160608401528091505092915050565b5f602082840312156111e7575f80fd5b8135610fe281610f60565b5f60208284031215611202575f80fd5b5035919050565b6001600160a01b03841681526060602082018190525f9061122c90830185610fa2565b9050826040830152949350505050565b5f806040838503121561124d575f80fd5b823561125881610f60565b91506020830135610f9781610f60565b6020808252601b908201527f54686973206973206120636f6e74726163742061646472657373210000000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106225761062261129f565b600181811c908216806112da57607f821691505b60208210810361088257634e487b7160e01b5f52602260045260245ffd5b601f821115610b8a57805f5260205f20601f840160051c8101602085101561131d5750805b601f840160051c820191505b8181101561133c575f8155600101611329565b5050505050565b815167ffffffffffffffff81111561135d5761135d611013565b6113718161136b84546112c6565b846112f8565b6020601f8211600181146113a3575f831561138c5750848201515b5f19600385901b1c1916600184901b17845561133c565b5f84815260208120601f198516915b828110156113d257878501518255602094850194600190920191016113b2565b50848210156113ef57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156106225761062261129f56fea26469706673582212206ae6381d32b93ca389faf351e1f7a7359686d5cbe9cd917e25122dfd2fb52b6f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x130 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0xA87430BA GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xC634D032 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200D2ED2 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x4BFF5009 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x6281B95B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x69C212F6 EQ PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE54B872 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x1F8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x111C JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x94F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x147 PUSH2 0xA27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E742065786365656473206C696D697400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x528 SWAP1 DUP5 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x538 SWAP1 POP DUP3 DUP5 PUSH2 0xA10 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x46B6C03A6ED8406EDA01806AB6D408E07129555FDA5275B7F67E3A255F2D7A0D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x58E SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BA SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x605 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x605 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x61C DUP2 DUP6 DUP6 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x64D SWAP1 PUSH2 0x12C6 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792072656769737465726564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH0 DUP6 DUP8 ADD DUP2 SWAP1 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x6F8 SWAP1 DUP3 PUSH2 0x1343 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x717 DUP6 DUP3 DUP6 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x722 DUP6 DUP6 DUP6 PUSH2 0xC0A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x758 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH2 0x777 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP PUSH0 SUB PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206E6F7420666F756E6421 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x7F5 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x821 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x843 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x890 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x899 DUP2 PUSH2 0xB43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8C7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x7F5 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x93A PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x943 PUSH0 PUSH2 0xC94 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x899 ADDRESS DUP3 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x58E SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x989 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9B5 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x61C DUP2 DUP6 DUP6 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x899 ADDRESS DUP3 PUSH2 0xCFB JUMP JUMPDEST CALLER DUP1 EXTCODESIZE ISZERO PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206465706F73697420616D6F756E7420697320302E30303033 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xA8B9F7931AC94CF9850ACCD175CF4543FAC81AE93865D1670E14213829F67DE5 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xADD CALLER ADDRESS CALLVALUE PUSH2 0x70A JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0xAFF SWAP1 DUP5 SWAP1 PUSH2 0x13FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xB3EF81558ED1A50072A492984535A009DA8B129C749500B387F1E5F4886BDDE5 SWAP1 PUSH1 0x20 ADD PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x899 DUP2 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0xB8A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xC04 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xC04 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD0D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xB8A DUP4 DUP4 DUP4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCED PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xCF7 DUP3 DUP3 PUSH2 0xEF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD03 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xCF7 DUP3 DUP3 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC04 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDD1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE09 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDFE SWAP2 SWAP1 PUSH2 0x13FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE79 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE95 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x572 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xCF7 DUP3 PUSH0 DUP4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0xCF7 PUSH0 DUP4 DUP4 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x899 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFE2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1005 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x1050 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x107F JUMPI PUSH2 0x107F PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1096 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10E5 DUP6 DUP3 DUP7 ADD PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1116 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x112E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1139 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1149 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1180 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x118C DUP5 DUP3 DUP6 ADD PUSH2 0x1027 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH0 SWAP1 PUSH2 0x11C1 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0xFA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFE2 DUP2 PUSH2 0xF60 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x122C SWAP1 DUP4 ADD DUP6 PUSH2 0xFA2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1258 DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206973206120636F6E74726163742061646472657373210000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x882 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB8A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x131D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x133C JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1329 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135D PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x1371 DUP2 PUSH2 0x136B DUP5 SLOAD PUSH2 0x12C6 JUMP JUMPDEST DUP5 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x13A3 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x138C JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x133C JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13B2 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x13EF JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x129F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE6381D32B93CA389FAF351 0xE1 0xF7 0xA7 CALLDATALOAD SWAP7 DUP7 0xD5 0xCB 0xE9 0xCD SWAP2 PUSH31 0x25122DFD2FB52B6F64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "134:3258:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2639:380;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:2;;;;;:::i;:::-;;:::i;:::-;;;1610:14:8;;1603:22;1585:41;;1573:2;1558:18;4293:186:2;1445:187:8;1481:206:6;;;;;;;;;;-1:-1:-1;1481:206:6;;;;;:::i;:::-;;:::i;3144:97:2:-;;;;;;;;;;-1:-1:-1;3222:12:2;;3144:97;;;3124:25:8;;;3112:2;3097:18;3144:97:2;2978:177:8;603:20:6;;;;;;;;;;-1:-1:-1;603:20:6;;;;;;;;;;;;;;;:::i;5039:244:2:-;;;;;;;;;;-1:-1:-1;5039:244:2;;;;;:::i;:::-;;:::i;3002:82::-;;;;;;;;;;-1:-1:-1;3002:82:2;;3075:2;4306:36:8;;4294:2;4279:18;3002:82:2;4164:184:8;1905:142:6;;;;;;;;;;-1:-1:-1;1905:142:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;299:109:7:-;;;;;;;;;;-1:-1:-1;299:109:7;;;;;:::i;:::-;;:::i;1722:147:6:-;;;;;;;;;;-1:-1:-1;1722:147:6;;;;;:::i;:::-;;:::i;3299:116:2:-;;;;;;;;;;-1:-1:-1;3299:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;;;;;;;;;;;:::i;3117:86:6:-;;;;;;;;;;-1:-1:-1;3117:86:6;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;5829:51:8;;5817:2;5802:18;1638:85:0;5683:203:8;2276:93:2;;;;;;;;;;;;;:::i;211:37:6:-;;;;;;;;;;-1:-1:-1;211:37:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3610:178:2:-;;;;;;;;;;-1:-1:-1;3610:178:2;;;;;:::i;:::-;;:::i;3025:86:6:-;;;;;;;;;;-1:-1:-1;3025:86:6;;;;;:::i;:::-;;:::i;2089:505::-;;;:::i;3846:140:2:-;;;;;;;;;;-1:-1:-1;3846:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;2639:380:6:-;2721:10;3362:17;;:21;1124:62;;;;-1:-1:-1;;;1124:62:6;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2761:11:6;::::1;;::::0;;;:5:::1;:11;::::0;;;;:19:::1;;::::0;2751:29;::::1;;2743:62;;;::::0;-1:-1:-1;;;2743:62:6;;7251:2:8;2743:62:6::1;::::0;::::1;7233:21:8::0;7290:2;7270:18;;;7263:30;-1:-1:-1;;;7309:18:8;;;7302:50;7369:18;;2743:62:6::1;7049:344:8::0;2743:62:6::1;2833:11;;2823:6;:21;;2815:65;;;::::0;-1:-1:-1;;;2815:65:6;;7600:2:8;2815:65:6::1;::::0;::::1;7582:21:8::0;7639:2;7619:18;;;7612:30;7678:33;7658:18;;;7651:61;7729:18;;2815:65:6::1;7398:355:8::0;2815:65:6::1;-1:-1:-1::0;;;;;2890:11:6;::::1;;::::0;;;:5:::1;:11;::::0;;;;:19:::1;;:29:::0;;2913:6;;2890:11;:29:::1;::::0;2913:6;;2890:29:::1;:::i;:::-;::::0;;;-1:-1:-1;2929:22:6::1;::::0;-1:-1:-1;2938:4:6;2944:6;2929:8:::1;:22::i;:::-;-1:-1:-1::0;2966:46:6::1;::::0;3124:25:8;;;2993:10:6::1;::::0;-1:-1:-1;;;;;2966:46:6;::::1;::::0;::::1;::::0;3112:2:8;3097:18;2966:46:6::1;;;;;;;;2639:380:::0;;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;1481:206:6:-;-1:-1:-1;;;;;1577:11:6;;;;;;:5;:11;;;;;:17;;1571:31;;;;;:::i;:::-;:36;;-1:-1:-1;1563:73:6;;;;-1:-1:-1;;;1563:73:6;;8610:2:8;1563:73:6;;;8592:21:8;8649:2;8629:18;;;8622:30;8688:26;8668:18;;;8661:54;8732:18;;1563:73:6;8408:348:8;1563:73:6;1660:20;;;;;;;;-1:-1:-1;;;;;1660:20:6;;;;;;;;;;;;;-1:-1:-1;1660:20:6;;;;;;1646:11;;;:5;:11;;;;;;:34;;;;-1:-1:-1;;;;;;1646:34:6;;;;;;;;;;;1660:20;;1646:11;-1:-1:-1;1646:34:6;;;;;;;:::i;:::-;;;;;;;;;;;;;1481:206;;:::o;5039:244:2:-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;1905:142:6:-;1993:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:11:6;1317:10;1311:17;;;;:5;:17;;;;;:23;;1305:37;;1977:5;;1311:23;1305:37;;;:::i;:::-;;;1346:1;1305:42;1297:70;;;;-1:-1:-1;;;1297:70:6;;11087:2:8;1297:70:6;;;11069:21:8;11126:2;11106:18;;;11099:30;-1:-1:-1;;;11145:18:8;;;11138:45;11200:18;;1297:70:6;10885:339:8;1297:70:6;2029:10:::1;2023:17;::::0;;;:5:::1;:17;::::0;;;;;;;;2016:24;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;2016:24:6::1;::::0;;;;::::1;::::0;;2023:17;;2016:24;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1377:1;1905:142:::0;;;;:::o;299:109:7:-;1531:13:0;:11;:13::i;:::-;373:28:7::1;391:9;373:17;:28::i;:::-;299:109:::0;:::o;1722:147:6:-;1814:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:11:6;1792;-1:-1:-1;;;;;3362:17:6;;;:21;1124:62;;;;-1:-1:-1;;;1124:62:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1844:18:6;;::::1;;::::0;;;:5:::1;:18;::::0;;;;;;;;1837:25;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;;;1844:18;1837:25;;::::1;::::0;::::1;::::0;::::1;:::i;2293:101:0:-:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3117:86:6:-;3169:27;3182:4;3189:6;3169:4;:27::i;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;211:37:6:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;211:37:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3610:178:2:-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;3025:86:6:-;3077:27;3090:4;3097:6;3077:4;:27::i;2089:505::-;2134:10;3362:17;;:21;1124:62;;;;-1:-1:-1;;;1124:62:6;;;;;;;:::i;:::-;2172:9:::1;;2160;:21;2156:175;;;2197:6;:22:::0;;-1:-1:-1;;2197:22:6::1;2206:13;2197:22;::::0;;2238:62:::1;::::0;;11431:2:8;11413:21;;;11470:2;11450:18;;;11443:30;11509:34;11489:18;;;11482:62;;;;-1:-1:-1;;;11575:2:8;11560:18;;11553:31;2252:10:6::1;::::0;2238:62:::1;::::0;11616:3:8;11601:19;2238:62:6::1;;;;;;;;299:109:7::0;:::o;2156:175:6:-:1;2389:59;2410:10;2431:4;2438:9;2389:12;:59::i;:::-;-1:-1:-1::0;2464:10:6::1;2458:17;::::0;;;:5:::1;:17;::::0;;;;:25:::1;;:38:::0;;2487:9:::1;::::0;2458:17;:38:::1;::::0;2487:9;;2458:38:::1;:::i;:::-;::::0;;;-1:-1:-1;;2506:6:6::1;:26:::0;;-1:-1:-1;;2506:26:6::1;2515:17;2506:26;::::0;;2547:40:::1;::::0;2577:9:::1;3124:25:8::0;;2565:10:6::1;::::0;2547:40:::1;::::0;3112:2:8;3097:18;2547:40:6::1;2978:177:8::0;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;5829:51:8::0;5802:18;;2672:31:0::1;5683:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8989:128:2:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;11981:32:8;;10936:60:2;;;11963:51:8;12030:18;;;12023:34;;;12073:18;;;12066:34;;;11936:18;;10936:60:2;11761:345:8;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;5829:51:8;5802:18;;5780:30:2;5683:203:8;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;5829:51:8;5802:18;;5873:32:2;5683:203:8;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;5829:51:8;5802:18;;1901:40:0;5683:203:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;414:115:7:-;1531:13:0;:11;:13::i;:::-;499:23:7::1;505:8;515:6;499:5;:23::i;:::-;414:115:::0;;:::o;535:111::-;1531:13:0;:11;:13::i;:::-;618:21:7::1;624:6;632;618:5;:21::i;9949:432:2:-:0;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;5829:51:8;5802:18;;10103:32:2;5683:203:8;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;5829:51:8;5802:18;;10203:31:2;5683:203:8;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;3124:25:8;;3112:2;3097:18;;2978:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;11981:32:8;;6649:50:2;;;11963:51:8;12030:18;;;12023:34;;;12073:18;;;12066:34;;;11936:18;;6649:50:2;11761:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3124::8;;3112:2;3097:18;;2978:177;8247:206:2;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;5829:51:8;5802:18;;8361:30:2;5683:203:8;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;7721:208::-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;5829:51:8;5802:18;;7835:32:2;5683:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;14:139:8:-;-1:-1:-1;;;;;97:31:8;;87:42;;77:70;;143:1;140;133:12;158:383;234:6;242;295:2;283:9;274:7;270:23;266:32;263:52;;;311:1;308;301:12;263:52;356:23;;;-1:-1:-1;455:2:8;440:18;;427:32;468:41;427:32;468:41;:::i;:::-;528:7;518:17;;;158:383;;;;;:::o;546:289::-;588:3;626:5;620:12;653:6;648:3;641:19;709:6;702:4;695:5;691:16;684:4;679:3;675:14;669:47;761:1;754:4;745:6;740:3;736:16;732:27;725:38;824:4;817:2;813:7;808:2;800:6;796:15;792:29;787:3;783:39;779:50;772:57;;;546:289;;;;:::o;840:220::-;989:2;978:9;971:21;952:4;1009:45;1050:2;1039:9;1035:18;1027:6;1009:45;:::i;:::-;1001:53;840:220;-1:-1:-1;;;840:220:8:o;1065:375::-;1133:6;1141;1194:2;1182:9;1173:7;1169:23;1165:32;1162:52;;;1210:1;1207;1200:12;1162:52;1249:9;1236:23;1268:39;1301:5;1268:39;:::i;:::-;1326:5;1404:2;1389:18;;;;1376:32;;-1:-1:-1;;;1065:375:8:o;1637:127::-;1698:10;1693:3;1689:20;1686:1;1679:31;1729:4;1726:1;1719:15;1753:4;1750:1;1743:15;1769:726;1812:5;1865:3;1858:4;1850:6;1846:17;1842:27;1832:55;;1883:1;1880;1873:12;1832:55;1923:6;1910:20;1953:18;1945:6;1942:30;1939:56;;;1975:18;;:::i;:::-;2024:2;2018:9;2116:2;2078:17;;-1:-1:-1;;2074:31:8;;;2107:2;2070:40;2066:54;2054:67;;2151:18;2136:34;;2172:22;;;2133:62;2130:88;;;2198:18;;:::i;:::-;2234:2;2227:22;2258;;;2299:19;;;2320:4;2295:30;2292:39;-1:-1:-1;2289:59:8;;;2344:1;2341;2334:12;2289:59;2408:6;2401:4;2393:6;2389:17;2382:4;2374:6;2370:17;2357:58;2463:1;2435:19;;;2456:4;2431:30;2424:41;;;;2439:6;1769:726;-1:-1:-1;;;1769:726:8:o;2500:473::-;2586:6;2594;2647:2;2635:9;2626:7;2622:23;2618:32;2615:52;;;2663:1;2660;2653:12;2615:52;2703:9;2690:23;2736:18;2728:6;2725:30;2722:50;;;2768:1;2765;2758:12;2722:50;2791;2833:7;2824:6;2813:9;2809:22;2791:50;:::i;:::-;2781:60;;;2891:2;2880:9;2876:18;2863:32;2904:39;2937:5;2904:39;:::i;3292:338::-;3434:2;3419:18;;3467:1;3456:13;;3446:144;;3512:10;3507:3;3503:20;3500:1;3493:31;3547:4;3544:1;3537:15;3575:4;3572:1;3565:15;3446:144;3599:25;;;3292:338;:::o;3635:524::-;3712:6;3720;3728;3781:2;3769:9;3760:7;3756:23;3752:32;3749:52;;;3797:1;3794;3787:12;3749:52;3836:9;3823:23;3855:39;3888:5;3855:39;:::i;:::-;3913:5;-1:-1:-1;3970:2:8;3955:18;;3942:32;3983:41;3942:32;3983:41;:::i;:::-;3635:524;;4043:7;;-1:-1:-1;;;4123:2:8;4108:18;;;;4095:32;;3635:524::o;4353:322::-;4422:6;4475:2;4463:9;4454:7;4450:23;4446:32;4443:52;;;4491:1;4488;4481:12;4443:52;4531:9;4518:23;4564:18;4556:6;4553:30;4550:50;;;4596:1;4593;4586:12;4550:50;4619;4661:7;4652:6;4641:9;4637:22;4619:50;:::i;:::-;4609:60;4353:322;-1:-1:-1;;;;4353:322:8:o;4680:507::-;4851:2;4833:21;;;4894:13;;-1:-1:-1;;;;;4890:39:8;4870:18;;;4863:67;4965:15;;4959:22;5017:4;5012:2;4997:18;;4990:32;-1:-1:-1;;5045:52:8;5092:3;5077:19;;4959:22;5045:52;:::i;:::-;5031:66;;5153:2;5145:6;5141:15;5135:22;5128:4;5117:9;5113:20;5106:52;5175:6;5167:14;;;4680:507;;;;:::o;5192:255::-;5251:6;5304:2;5292:9;5283:7;5279:23;5275:32;5272:52;;;5320:1;5317;5310:12;5272:52;5359:9;5346:23;5378:39;5411:5;5378:39;:::i;5452:226::-;5511:6;5564:2;5552:9;5543:7;5539:23;5535:32;5532:52;;;5580:1;5577;5570:12;5532:52;-1:-1:-1;5625:23:8;;5452:226;-1:-1:-1;5452:226:8:o;5891:388::-;-1:-1:-1;;;;;6096:32:8;;6078:51;;6165:2;6160;6145:18;;6138:30;;;-1:-1:-1;;6185:45:8;;6211:18;;6203:6;6185:45;:::i;:::-;6177:53;;6266:6;6261:2;6250:9;6246:18;6239:34;5891:388;;;;;;:::o;6284:404::-;6352:6;6360;6413:2;6401:9;6392:7;6388:23;6384:32;6381:52;;;6429:1;6426;6419:12;6381:52;6468:9;6455:23;6487:39;6520:5;6487:39;:::i;:::-;6545:5;-1:-1:-1;6602:2:8;6587:18;;6574:32;6615:41;6574:32;6615:41;:::i;6693:351::-;6895:2;6877:21;;;6934:2;6914:18;;;6907:30;6973:29;6968:2;6953:18;;6946:57;7035:2;7020:18;;6693:351::o;7758:127::-;7819:10;7814:3;7810:20;7807:1;7800:31;7850:4;7847:1;7840:15;7874:4;7871:1;7864:15;7890:128;7957:9;;;7978:11;;;7975:37;;;7992:18;;:::i;8023:380::-;8102:1;8098:12;;;;8145;;;8166:61;;8220:4;8212:6;8208:17;8198:27;;8166:61;8273:2;8265:6;8262:14;8242:18;8239:38;8236:161;;8319:10;8314:3;8310:20;8307:1;8300:31;8354:4;8351:1;8344:15;8382:4;8379:1;8372:15;8887:518;8989:2;8984:3;8981:11;8978:421;;;9025:5;9022:1;9015:16;9069:4;9066:1;9056:18;9139:2;9127:10;9123:19;9120:1;9116:27;9110:4;9106:38;9175:4;9163:10;9160:20;9157:47;;;-1:-1:-1;9198:4:8;9157:47;9253:2;9248:3;9244:12;9241:1;9237:20;9231:4;9227:31;9217:41;;9308:81;9326:2;9319:5;9316:13;9308:81;;;9385:1;9371:16;;9352:1;9341:13;9308:81;;;9312:3;;8887:518;;;:::o;9581:1299::-;9707:3;9701:10;9734:18;9726:6;9723:30;9720:56;;;9756:18;;:::i;:::-;9785:97;9875:6;9835:38;9867:4;9861:11;9835:38;:::i;:::-;9829:4;9785:97;:::i;:::-;9931:4;9962:2;9951:14;;9979:1;9974:649;;;;10667:1;10684:6;10681:89;;;-1:-1:-1;10736:19:8;;;10730:26;10681:89;-1:-1:-1;;9538:1:8;9534:11;;;9530:24;9526:29;9516:40;9562:1;9558:11;;;9513:57;10783:81;;9944:930;;9974:649;8834:1;8827:14;;;8871:4;8858:18;;-1:-1:-1;;10010:20:8;;;10128:222;10142:7;10139:1;10136:14;10128:222;;;10224:19;;;10218:26;10203:42;;10331:4;10316:20;;;;10284:1;10272:14;;;;10158:12;10128:222;;;10132:3;10378:6;10369:7;10366:19;10363:201;;;10439:19;;;10433:26;-1:-1:-1;;10522:1:8;10518:14;;;10534:3;10514:24;10510:37;10506:42;10491:58;10476:74;;10363:201;-1:-1:-1;;;;10610:1:8;10594:14;;;10590:22;10577:36;;-1:-1:-1;9581:1299:8:o;11631:125::-;11696:9;;;11717:10;;;11714:36;;;11730:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1038200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24774",
								"balanceOf(address)": "2554",
								"burnToken(uint256)": "infinite",
								"decimals()": "243",
								"deposit()": "infinite",
								"getUserByAddress(address)": "infinite",
								"getUserByName(string)": "infinite",
								"mintToken(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2389",
								"registerUser(string,address)": "infinite",
								"renounceOwnership()": "infinite",
								"status()": "2373",
								"symbol()": "infinite",
								"totalSupply()": "2392",
								"transfer(address,uint256)": "51254",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferOwnership_(address)": "infinite",
								"users(address)": "infinite",
								"withdraw(uint256,address)": "infinite"
							},
							"internal": {
								"isContractAddr(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 3392,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 282,
									"end": 295,
									"name": "PUSH",
									"source": 6,
									"value": "1599BA503C000"
								},
								{
									"begin": 254,
									"end": 295,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 254,
									"end": 295,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 331,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 301,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 301,
									"end": 338,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1391,
									"end": 1453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1450,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 279,
									"end": 289,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "252B21AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4A5643"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2990,
									"end": 3041,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2963,
									"end": 2981,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2963,
									"end": 2981,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 210,
									"end": 293,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1391,
									"end": 1453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 203,
									"end": 330,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 203,
									"end": 330,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 264,
									"end": 274,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 259,
									"end": 262,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 255,
									"end": 275,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 252,
									"end": 253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 295,
									"end": 299,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 285,
									"end": 300,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 319,
									"end": 323,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 324,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 335,
									"end": 715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 414,
									"end": 415,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 478,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 532,
									"end": 536,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 524,
									"end": 530,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 520,
									"end": 537,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 510,
									"end": 537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 478,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 585,
									"end": 587,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 577,
									"end": 583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 574,
									"end": 588,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 551,
									"end": 589,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 631,
									"end": 641,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 626,
									"end": 629,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 622,
									"end": 642,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 619,
									"end": 620,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 666,
									"end": 670,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 663,
									"end": 664,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 656,
									"end": 671,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 694,
									"end": 698,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 691,
									"end": 692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 948,
									"end": 950,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 943,
									"end": 946,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 940,
									"end": 951,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 984,
									"end": 989,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 981,
									"end": 982,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 990,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1032,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1026,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1033,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1079,
									"end": 1080,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1075,
									"end": 1102,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1069,
									"end": 1073,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1065,
									"end": 1103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1122,
									"end": 1132,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1139,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1214,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1207,
									"end": 1210,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 1215,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1196,
									"end": 1216,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1190,
									"end": 1194,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1186,
									"end": 1217,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1217,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1217,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1278,
									"end": 1283,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1275,
									"end": 1288,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 1346,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1330,
									"end": 1346,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1312,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1300,
									"end": 1313,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 2839,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1540,
									"end": 2839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1670,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1682,
									"end": 1712,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1712,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1715,
									"end": 1733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1826,
									"end": 1830,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1820,
									"end": 1831,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1794,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1744,
									"end": 1841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1890,
									"end": 1894,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1921,
									"end": 1923,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1910,
									"end": 1924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1910,
									"end": 1924,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1938,
									"end": 1939,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2695,
									"end": 2714,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2695,
									"end": 2714,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2695,
									"end": 2714,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2715,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1497,
									"end": 1498,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1514,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1475,
									"end": 1515,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1472,
									"end": 1529,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2742,
									"end": 2823,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2742,
									"end": 2823,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1903,
									"end": 2833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1903,
									"end": 2833,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 786,
									"end": 800,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 817,
									"end": 835,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1969,
									"end": 1989,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 1989,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 1989,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2108,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2099,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2095,
									"end": 2109,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2177,
									"end": 2203,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2162,
									"end": 2204,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2162,
									"end": 2204,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2244,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2091,
									"end": 2094,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2337,
									"end": 2343,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2328,
									"end": 2335,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2325,
									"end": 2344,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2392,
									"end": 2418,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2481,
									"end": 2482,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2477,
									"end": 2491,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2477,
									"end": 2491,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2477,
									"end": 2491,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2493,
									"end": 2496,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2473,
									"end": 2497,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2469,
									"end": 2506,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2465,
									"end": 2507,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2450,
									"end": 2508,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2435,
									"end": 2509,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2435,
									"end": 2509,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2569,
									"end": 2570,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2553,
									"end": 2567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2567,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2567,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2536,
									"end": 2572,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2536,
									"end": 2572,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1540,
									"end": 2839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2844,
									"end": 3047,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2844,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 3392,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ae6381d32b93ca389faf351e1f7a7359686d5cbe9cd917e25122dfd2fb52b6f64736f6c634300081a0033",
									".code": [
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "A87430BA"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "A87430BA"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "C634D032"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "D0E30DB0"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "7B47EC1A"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "200D2ED2"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "200D2ED2"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "4BFF5009"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "6281B95B"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "69C212F6"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "F714CE"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "E54B872"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 3392,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2639,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2639,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1603,
											"end": 1625,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1445,
											"end": 1632,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1481,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1481,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2978,
											"end": 3155,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 603,
											"end": 623,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 603,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4306,
											"end": 4342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4342,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4296,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4164,
											"end": 4348,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1905,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1905,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1905,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 299,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1722,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1722,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3117,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3117,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5817,
											"end": 5819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 211,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 211,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 211,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3025,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3025,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2594,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2089,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2089,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2089,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2731,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1124,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2761,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2761,
											"end": 2780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2780,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2780,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2805,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7253,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7263,
											"end": 7293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7049,
											"end": 7393,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2743,
											"end": 2805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2833,
											"end": 2844,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2829,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2844,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7582,
											"end": 7603,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7641,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7619,
											"end": 7637,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7619,
											"end": 7637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7612,
											"end": 7642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7678,
											"end": 7711,
											"name": "PUSH",
											"source": 8,
											"value": "5769746864726177616C20616D6F756E742065786365656473206C696D697400"
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7651,
											"end": 7712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7398,
											"end": 7753,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2815,
											"end": 2880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2890,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2890,
											"end": 2909,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2890,
											"end": 2919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2890,
											"end": 2919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2929,
											"end": 2951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2938,
											"end": 2942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2929,
											"end": 2951,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2951,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2929,
											"end": 2951,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2993,
											"end": 3003,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "46B6C03A6ED8406EDA01806AB6D408E07129555FDA5275B7F67E3A255F2D7A0D"
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3012,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1588,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1571,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8610,
											"end": 8612,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8649,
											"end": 8651,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8652,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8688,
											"end": 8714,
											"name": "PUSH",
											"source": 8,
											"value": "5573657220616C72656164792072656769737465726564210000000000000000"
										},
										{
											"begin": 8668,
											"end": 8686,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8668,
											"end": 8686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8668,
											"end": 8686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8661,
											"end": 8715,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8408,
											"end": 8756,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1563,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1646,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1317,
											"end": 1327,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1334,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1311,
											"end": 1334,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1305,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1347,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11087,
											"end": 11089,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11069,
											"end": 11090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11128,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11099,
											"end": 11129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206E6F7420666F756E6421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11138,
											"end": 11183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11200,
											"end": 11218,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11200,
											"end": 11218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 10885,
											"end": 11224,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1297,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2039,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2023,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2016,
											"end": 2040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2016,
											"end": 2040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1377,
											"end": 1378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 2047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 391,
											"end": 400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 373,
											"end": 390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 373,
											"end": 401,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 373,
											"end": 401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 373,
											"end": 401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1722,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 1825,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1814,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1803,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1124,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1844,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1837,
											"end": 1862,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3117,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3182,
											"end": 3186,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3169,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 211,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 211,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 211,
											"end": 248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3025,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3090,
											"end": 3094,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3077,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2594,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2089,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1124,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1124,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2172,
											"end": 2181,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2169,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2181,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2156,
											"end": 2331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2219,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2219,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2300,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11431,
											"end": 11433,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11413,
											"end": 11434,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11413,
											"end": 11434,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11413,
											"end": 11434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11470,
											"end": 11472,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11443,
											"end": 11473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11509,
											"end": 11543,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E696D756D206465706F73697420616D6F756E7420697320302E30303033"
										},
										{
											"begin": 11489,
											"end": 11507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11544,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11575,
											"end": 11577,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2262,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A8B9F7931AC94CF9850ACCD175CF4543FAC81AE93865D1670E14213829F67DE5"
										},
										{
											"begin": 2238,
											"end": 2300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11616,
											"end": 11619,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11601,
											"end": 11620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2300,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 299,
											"end": 408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2156,
											"end": 2331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2410,
											"end": 2420,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2435,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2447,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2389,
											"end": 2448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2389,
											"end": 2448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2458,
											"end": 2475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2496,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2458,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2458,
											"end": 2496,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2458,
											"end": 2496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2496,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2506,
											"end": 2532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2532,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2506,
											"end": 2532,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2532,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2586,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2575,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B3EF81558ED1A50072A492984535A009DA8B129C749500B387F1E5F4886BDDE5"
										},
										{
											"begin": 2547,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2978,
											"end": 3155,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11981,
											"end": 12013,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11981,
											"end": 12013,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11963,
											"end": 12014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12057,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12091,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12073,
											"end": 12091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12100,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12100,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 11761,
											"end": 12106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 529,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 414,
											"end": 529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 505,
											"end": 513,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 515,
											"end": 521,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 499,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 499,
											"end": 522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 499,
											"end": 522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 414,
											"end": 529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 414,
											"end": 529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 414,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 535,
											"end": 646,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 535,
											"end": 646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 618,
											"end": 639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 624,
											"end": 630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 632,
											"end": 638,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 618,
											"end": 623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 618,
											"end": 639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2978,
											"end": 3155,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11981,
											"end": 12013,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11981,
											"end": 12013,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11963,
											"end": 12014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12057,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12091,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12073,
											"end": 12091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12100,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12100,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 11761,
											"end": 12106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2978,
											"end": 3155,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5683,
											"end": 5886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 153,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 14,
											"end": 153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 97,
											"end": 128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 97,
											"end": 128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 87,
											"end": 129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 129,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 77,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 77,
											"end": 147,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 143,
											"end": 144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 141,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 133,
											"end": 145,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 158,
											"end": 541,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 158,
											"end": 541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 234,
											"end": 240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 292,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 274,
											"end": 281,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 270,
											"end": 293,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 266,
											"end": 298,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 263,
											"end": 315,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 263,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 263,
											"end": 315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 311,
											"end": 312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 313,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 263,
											"end": 315,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 263,
											"end": 315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 356,
											"end": 379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 356,
											"end": 379,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 356,
											"end": 379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 455,
											"end": 457,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 440,
											"end": 458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 427,
											"end": 459,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 468,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 427,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 468,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 468,
											"end": 509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 468,
											"end": 509,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 468,
											"end": 509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 528,
											"end": 535,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 518,
											"end": 535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 518,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 518,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 541,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 158,
											"end": 541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 541,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 158,
											"end": 541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 546,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 620,
											"end": 632,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 648,
											"end": 651,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 641,
											"end": 660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 691,
											"end": 707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 684,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 675,
											"end": 689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 669,
											"end": 716,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 740,
											"end": 743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 736,
											"end": 752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 732,
											"end": 759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 763,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 824,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 813,
											"end": 820,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 808,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 796,
											"end": 811,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 792,
											"end": 821,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 787,
											"end": 790,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 783,
											"end": 822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 779,
											"end": 829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 772,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 772,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 772,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 546,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 546,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 840,
											"end": 1060,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 840,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 971,
											"end": 992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 952,
											"end": 956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1009,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1009,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1009,
											"end": 1054,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1009,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1054,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 840,
											"end": 1060,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1065,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1065,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1191,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1180,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1192,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1165,
											"end": 1197,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1214,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1162,
											"end": 1214,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1214,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1162,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1301,
											"end": 1306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1268,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1307,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1268,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1331,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1637,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1708,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1719,
											"end": 1734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 1757,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1758,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1769,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1862,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1869,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1832,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1832,
											"end": 1887,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1885,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1832,
											"end": 1887,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1832,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1930,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1972,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1939,
											"end": 1995,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1975,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2018,
											"end": 2027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2078,
											"end": 2095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2105,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2109,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 2070,
											"end": 2110,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2170,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2194,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2195,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2218,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2130,
											"end": 2218,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2198,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2234,
											"end": 2236,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2249,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2318,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2324,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2348,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2289,
											"end": 2348,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2346,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2348,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2289,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2405,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2389,
											"end": 2406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2382,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2380,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2415,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2460,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2465,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 2495,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2973,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2500,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2649,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 2644,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2626,
											"end": 2633,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2645,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2653,
											"end": 2665,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2713,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2755,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2772,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2722,
											"end": 2772,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2758,
											"end": 2770,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2772,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2722,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2833,
											"end": 2840,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2822,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2791,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2841,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2791,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2841,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 2893,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2863,
											"end": 2895,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2904,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3630,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3292,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3436,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3419,
											"end": 3437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3437,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3456,
											"end": 3469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3469,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3446,
											"end": 3590,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3512,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3507,
											"end": 3510,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3544,
											"end": 3545,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3579,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3580,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3590,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3446,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 4159,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3635,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3760,
											"end": 3767,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3779,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3784,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3801,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3749,
											"end": 3801,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3801,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3749,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3888,
											"end": 3893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3855,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3894,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3855,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3970,
											"end": 3972,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3974,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3983,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3942,
											"end": 3974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3983,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3983,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3983,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3983,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 4159,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 4159,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4127,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 4159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4675,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4353,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4473,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4541,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4582,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4556,
											"end": 4562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4553,
											"end": 4583,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 4550,
											"end": 4600,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4594,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4598,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4600,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 4550,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 4661,
											"end": 4668,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4637,
											"end": 4659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4619,
											"end": 4669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4669,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 4619,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4669,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4675,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4353,
											"end": 4675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 5187,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4680,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4851,
											"end": 4853,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4833,
											"end": 4854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4854,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4890,
											"end": 4929,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4959,
											"end": 4981,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5021,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5012,
											"end": 5014,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 5022,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5045,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5092,
											"end": 5095,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4959,
											"end": 4981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 5045,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5097,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5045,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5031,
											"end": 5097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5031,
											"end": 5097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5155,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5141,
											"end": 5156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 5157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5132,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5117,
											"end": 5126,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5175,
											"end": 5181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 5187,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 5187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 5187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 5187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 5187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5192,
											"end": 5447,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5192,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5324,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5272,
											"end": 5324,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5324,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5272,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5346,
											"end": 5369,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5378,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5678,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5452,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5552,
											"end": 5561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5543,
											"end": 5550,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5562,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5567,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5584,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 5532,
											"end": 5584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5578,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5570,
											"end": 5582,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5584,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 5532,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5625,
											"end": 5648,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5648,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5452,
											"end": 5678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6096,
											"end": 6128,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6096,
											"end": 6128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6167,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6160,
											"end": 6162,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6185,
											"end": 6230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6203,
											"end": 6209,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6185,
											"end": 6230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6230,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6185,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6261,
											"end": 6263,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6688,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6284,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6366,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6413,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6401,
											"end": 6410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6411,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6381,
											"end": 6433,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6381,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6381,
											"end": 6433,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6429,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6431,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6381,
											"end": 6433,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6381,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6455,
											"end": 6478,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6520,
											"end": 6525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6487,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6526,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6487,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6602,
											"end": 6604,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6615,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6693,
											"end": 7044,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 6693,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6895,
											"end": 6897,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7002,
											"name": "PUSH",
											"source": 8,
											"value": "54686973206973206120636F6E74726163742061646472657373210000000000"
										},
										{
											"begin": 6968,
											"end": 6970,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7003,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7035,
											"end": 7037,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6693,
											"end": 7044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7885,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7758,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 7829,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7814,
											"end": 7817,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7810,
											"end": 7830,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7807,
											"end": 7808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7831,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7850,
											"end": 7854,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7874,
											"end": 7878,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7871,
											"end": 7872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7879,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 8018,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7890,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7978,
											"end": 7989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7978,
											"end": 7989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7978,
											"end": 7989,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7975,
											"end": 8012,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7975,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7975,
											"end": 8012,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7992,
											"end": 8010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8023,
											"end": 8403,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 8023,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8166,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 8166,
											"end": 8227,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 8212,
											"end": 8218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8225,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8166,
											"end": 8227,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 8166,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8265,
											"end": 8271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8262,
											"end": 8276,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8277,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8236,
											"end": 8397,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8319,
											"end": 8329,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 8314,
											"end": 8317,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8307,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8300,
											"end": 8331,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8358,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 8351,
											"end": 8352,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8344,
											"end": 8359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8379,
											"end": 8380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8372,
											"end": 8387,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 9405,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 8887,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8981,
											"end": 8992,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8978,
											"end": 9399,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8978,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 8978,
											"end": 9399,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9025,
											"end": 9030,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9022,
											"end": 9023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9015,
											"end": 9031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9066,
											"end": 9067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9074,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9139,
											"end": 9141,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9127,
											"end": 9137,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9123,
											"end": 9142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9121,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 9116,
											"end": 9143,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 9110,
											"end": 9114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9106,
											"end": 9144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9179,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9173,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9180,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9204,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 9157,
											"end": 9204,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9204,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 9157,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9255,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9248,
											"end": 9251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9244,
											"end": 9256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9241,
											"end": 9242,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 9237,
											"end": 9257,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9217,
											"end": 9258,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9217,
											"end": 9258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9326,
											"end": 9328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9316,
											"end": 9329,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9385,
											"end": 9386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9387,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9341,
											"end": 9354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 9308,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9312,
											"end": 9315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9312,
											"end": 9315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 9405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 9405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 9405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 9405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 10880,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 9581,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9707,
											"end": 9710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9711,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9726,
											"end": 9732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9776,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9720,
											"end": 9776,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 9756,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9875,
											"end": 9881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9867,
											"end": 9871,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9861,
											"end": 9872,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 9835,
											"end": 9873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9873,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9835,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 9785,
											"end": 9882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9882,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9785,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9962,
											"end": 9964,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9951,
											"end": 9965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9965,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9974,
											"end": 10623,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9974,
											"end": 10623,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9974,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9974,
											"end": 10623,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10690,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10681,
											"end": 10770,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10681,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 10681,
											"end": 10770,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10736,
											"end": 10755,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 10755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 10755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10730,
											"end": 10756,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10681,
											"end": 10770,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 10681,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9538,
											"end": 9539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 9534,
											"end": 9545,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9545,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9530,
											"end": 9554,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 9555,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9516,
											"end": 9556,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9558,
											"end": 9569,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9558,
											"end": 9569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9558,
											"end": 9569,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9513,
											"end": 9570,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10864,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10864,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 9944,
											"end": 10874,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9974,
											"end": 10623,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9974,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8834,
											"end": 8835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8841,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8827,
											"end": 8841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8827,
											"end": 8841,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8871,
											"end": 8875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8858,
											"end": 8876,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10010,
											"end": 10030,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10010,
											"end": 10030,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10010,
											"end": 10030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10139,
											"end": 10140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10136,
											"end": 10150,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10243,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10243,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10218,
											"end": 10244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10245,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10331,
											"end": 10335,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10316,
											"end": 10336,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10336,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10336,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10285,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10272,
											"end": 10286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10286,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10128,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10132,
											"end": 10135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10366,
											"end": 10385,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10564,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 10363,
											"end": 10564,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10439,
											"end": 10458,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10439,
											"end": 10458,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10439,
											"end": 10458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10433,
											"end": 10459,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10522,
											"end": 10523,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 10518,
											"end": 10532,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10532,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10532,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10534,
											"end": 10537,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10510,
											"end": 10547,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 10506,
											"end": 10548,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10491,
											"end": 10549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10476,
											"end": 10550,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10476,
											"end": 10550,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10564,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 10363,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10611,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10594,
											"end": 10608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10594,
											"end": 10608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10594,
											"end": 10608,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10590,
											"end": 10612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10577,
											"end": 10613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10577,
											"end": 10613,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9581,
											"end": 10880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11756,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 11631,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11727,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11714,
											"end": 11750,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11714,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 11714,
											"end": 11750,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 11730,
											"end": 11748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/bank.sol",
								"contracts/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnToken(uint256)": "7b47ec1a",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"getUserByAddress(address)": "69c212f6",
							"getUserByName(string)": "4bff5009",
							"mintToken(uint256)": "c634d032",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"registerUser(string,address)": "0e54b872",
							"renounceOwnership()": "715018a6",
							"status()": "200d2ed2",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferOwnership_(address)": "6281b95b",
							"users(address)": "a87430ba",
							"withdraw(uint256,address)": "00f714ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"DepositFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"WithdrawalFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalSuccessful\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"uAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct JVCBank.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Uname\",\"type\":\"string\"}],\"name\":\"getUserByName\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"uAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct JVCBank.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uname\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum JVCBank.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"uAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bank.sol\":\"JVCBank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/bank.sol\":{\"keccak256\":\"0xc1370566dfd164004d2e080045b243f0f4510473afa2e5dcff1fdd6d20e508b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a25a2c2c2fc0a0769568565bd7947ad089e1a3ea876ad7c94413bdda359c9c8\",\"dweb:/ipfs/QmXTfn3nFhK7poMQ22PFZQLqWcqeiAwvDv8AdpjTWpnMpB\"]},\"contracts/token.sol\":{\"keccak256\":\"0xb30cf13722e947764feb154dcb6cce60d82c6ef1c7a0a8bdb60c0ce992becc2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bcc37a8765d39946fb066c00580e5151dec41501cb4cbf1be37336f8819b393\",\"dweb:/ipfs/QmPTSsEEbV6YAWL8bSvTLohVA3ysBFQWwvxbySxRKadfW4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 946,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "users",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(User)959_storage)"
							},
							{
								"astId": 949,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "minDepAmt",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 952,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "maxWithdAmt",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 966,
								"contract": "contracts/bank.sol:JVCBank",
								"label": "status",
								"offset": 0,
								"slot": "9",
								"type": "t_enum(Status)963"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(Status)963": {
								"encoding": "inplace",
								"label": "enum JVCBank.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(User)959_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct JVCBank.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)959_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(User)959_storage": {
								"encoding": "inplace",
								"label": "struct JVCBank.User",
								"members": [
									{
										"astId": 954,
										"contract": "contracts/bank.sol:JVCBank",
										"label": "uAddr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 956,
										"contract": "contracts/bank.sol:JVCBank",
										"label": "uName",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 958,
										"contract": "contracts/bank.sol:JVCBank",
										"label": "balance",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token.sol": {
				"JVCToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership_",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token.sol\":168:648  contract JVCToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token.sol\":210:293  constructor(uint256 _initialSupply) ERC20(\"JVCToken\", \"JVC\") Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token.sol\":279:289  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x252b21aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4a5643)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2990:3041   */\n  mstore\n    /* \"#utility.yul\":2963:2981   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/token.sol\":210:293  constructor(uint256 _initialSupply) ERC20(\"JVCToken\", \"JVC\") Ownable(msg.sender) {} */\n  pop\n    /* \"contracts/token.sol\":168:648  contract JVCToken is ERC20, Ownable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_27:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:330   */\ntag_20:\n    /* \"#utility.yul\":264:274   */\n  0x4e487b71\n    /* \"#utility.yul\":259:262   */\n  0xe0\n    /* \"#utility.yul\":255:275   */\n  shl\n    /* \"#utility.yul\":252:253   */\n  0x00\n    /* \"#utility.yul\":245:276   */\n  mstore\n    /* \"#utility.yul\":295:299   */\n  0x41\n    /* \"#utility.yul\":292:293   */\n  0x04\n    /* \"#utility.yul\":285:300   */\n  mstore\n    /* \"#utility.yul\":319:323   */\n  0x24\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":309:324   */\n  revert\n    /* \"#utility.yul\":335:715   */\ntag_21:\n    /* \"#utility.yul\":414:415   */\n  0x01\n    /* \"#utility.yul\":410:422   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":457:469   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":478:539   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":532:536   */\n  0x7f\n    /* \"#utility.yul\":524:530   */\n  dup3\n    /* \"#utility.yul\":520:537   */\n  and\n    /* \"#utility.yul\":510:537   */\n  swap2\n  pop\n    /* \"#utility.yul\":478:539   */\ntag_30:\n    /* \"#utility.yul\":585:587   */\n  0x20\n    /* \"#utility.yul\":577:583   */\n  dup3\n    /* \"#utility.yul\":574:588   */\n  lt\n    /* \"#utility.yul\":554:572   */\n  dup2\n    /* \"#utility.yul\":551:589   */\n  sub\n    /* \"#utility.yul\":548:709   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":631:641   */\n  0x4e487b71\n    /* \"#utility.yul\":626:629   */\n  0xe0\n    /* \"#utility.yul\":622:642   */\n  shl\n    /* \"#utility.yul\":619:620   */\n  0x00\n    /* \"#utility.yul\":612:643   */\n  mstore\n    /* \"#utility.yul\":666:670   */\n  0x22\n    /* \"#utility.yul\":663:664   */\n  0x04\n    /* \"#utility.yul\":656:671   */\n  mstore\n    /* \"#utility.yul\":694:698   */\n  0x24\n    /* \"#utility.yul\":691:692   */\n  0x00\n    /* \"#utility.yul\":684:699   */\n  revert\n    /* \"#utility.yul\":548:709   */\ntag_31:\n  pop\n    /* \"#utility.yul\":335:715   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":846:1364   */\ntag_23:\n    /* \"#utility.yul\":948:950   */\n  0x1f\n    /* \"#utility.yul\":943:946   */\n  dup3\n    /* \"#utility.yul\":940:951   */\n  gt\n    /* \"#utility.yul\":937:1358   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":984:989   */\n  dup1\n    /* \"#utility.yul\":981:982   */\n  0x00\n    /* \"#utility.yul\":974:990   */\n  mstore\n    /* \"#utility.yul\":1028:1032   */\n  0x20\n    /* \"#utility.yul\":1025:1026   */\n  0x00\n    /* \"#utility.yul\":1015:1033   */\n  keccak256\n    /* \"#utility.yul\":1098:1100   */\n  0x1f\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n    /* \"#utility.yul\":1082:1101   */\n  add\n    /* \"#utility.yul\":1079:1080   */\n  0x05\n    /* \"#utility.yul\":1075:1102   */\n  shr\n    /* \"#utility.yul\":1069:1073   */\n  dup2\n    /* \"#utility.yul\":1065:1103   */\n  add\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1122:1132   */\n  dup6\n    /* \"#utility.yul\":1119:1139   */\n  lt\n    /* \"#utility.yul\":1116:1163   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":1157:1161   */\n  dup1\n    /* \"#utility.yul\":1116:1163   */\ntag_35:\n    /* \"#utility.yul\":1212:1214   */\n  0x1f\n    /* \"#utility.yul\":1207:1210   */\n  dup5\n    /* \"#utility.yul\":1203:1215   */\n  add\n    /* \"#utility.yul\":1200:1201   */\n  0x05\n    /* \"#utility.yul\":1196:1216   */\n  shr\n    /* \"#utility.yul\":1190:1194   */\n  dup3\n    /* \"#utility.yul\":1186:1217   */\n  add\n    /* \"#utility.yul\":1176:1217   */\n  swap2\n  pop\n    /* \"#utility.yul\":1267:1348   */\ntag_36:\n    /* \"#utility.yul\":1285:1287   */\n  dup2\n    /* \"#utility.yul\":1278:1283   */\n  dup2\n    /* \"#utility.yul\":1275:1288   */\n  lt\n    /* \"#utility.yul\":1267:1348   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1344:1345   */\n  0x00\n    /* \"#utility.yul\":1330:1346   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1311:1312   */\n  0x01\n    /* \"#utility.yul\":1300:1313   */\n  add\n    /* \"#utility.yul\":1267:1348   */\n  jump(tag_36)\ntag_38:\n    /* \"#utility.yul\":1271:1274   */\n  pop\n  pop\n    /* \"#utility.yul\":937:1358   */\ntag_34:\n    /* \"#utility.yul\":846:1364   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1540:2839   */\ntag_9:\n    /* \"#utility.yul\":1660:1670   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1682:1712   */\n  dup2\n  gt\n    /* \"#utility.yul\":1679:1735   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1715:1733   */\n  tag_42\n  tag_20\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1744:1841   */\n  tag_43\n    /* \"#utility.yul\":1834:1840   */\n  dup2\n    /* \"#utility.yul\":1794:1832   */\n  tag_44\n    /* \"#utility.yul\":1826:1830   */\n  dup5\n    /* \"#utility.yul\":1820:1831   */\n  sload\n    /* \"#utility.yul\":1794:1832   */\n  tag_21\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1788:1792   */\n  dup5\n    /* \"#utility.yul\":1744:1841   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1890:1894   */\n  0x20\n    /* \"#utility.yul\":1921:1923   */\n  0x1f\n    /* \"#utility.yul\":1910:1924   */\n  dup3\n  gt\n    /* \"#utility.yul\":1938:1939   */\n  0x01\n    /* \"#utility.yul\":1933:2582   */\n  dup2\n  eq\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2626:2627   */\n  0x00\n    /* \"#utility.yul\":2643:2649   */\n  dup4\n    /* \"#utility.yul\":2640:2729   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":2695:2714   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2689:2715   */\n  mload\n    /* \"#utility.yul\":2640:2729   */\ntag_47:\n  not(0x00)\n    /* \"#utility.yul\":1497:1498   */\n  0x03\n    /* \"#utility.yul\":1493:1504   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1489:1513   */\n  shr\n    /* \"#utility.yul\":1485:1514   */\n  not\n    /* \"#utility.yul\":1475:1515   */\n  and\n    /* \"#utility.yul\":1521:1522   */\n  0x01\n    /* \"#utility.yul\":1517:1528   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1472:1529   */\n  or\n    /* \"#utility.yul\":2742:2823   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1903:2833   */\n  jump(tag_38)\n    /* \"#utility.yul\":1933:2582   */\ntag_46:\n    /* \"#utility.yul\":793:794   */\n  0x00\n    /* \"#utility.yul\":786:800   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":817:835   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1969:1989   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2087:2309   */\ntag_50:\n    /* \"#utility.yul\":2101:2108   */\n  dup3\n    /* \"#utility.yul\":2098:2099   */\n  dup2\n    /* \"#utility.yul\":2095:2109   */\n  lt\n    /* \"#utility.yul\":2087:2309   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2183:2202   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2177:2203   */\n  mload\n    /* \"#utility.yul\":2162:2204   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2275:2295   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2243:2244   */\n  0x01\n    /* \"#utility.yul\":2231:2245   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2117:2129   */\n  add\n    /* \"#utility.yul\":2087:2309   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":2091:2094   */\n  pop\n    /* \"#utility.yul\":2337:2343   */\n  dup5\n    /* \"#utility.yul\":2328:2335   */\n  dup3\n    /* \"#utility.yul\":2325:2344   */\n  lt\n    /* \"#utility.yul\":2322:2523   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2398:2417   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2392:2418   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2481:2482   */\n  0x03\n    /* \"#utility.yul\":2477:2491   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2493:2496   */\n  0xf8\n    /* \"#utility.yul\":2473:2497   */\n  and\n    /* \"#utility.yul\":2469:2506   */\n  shr\n    /* \"#utility.yul\":2465:2507   */\n  not\n    /* \"#utility.yul\":2450:2508   */\n  and\n    /* \"#utility.yul\":2435:2509   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2322:2523   */\ntag_53:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2569:2570   */\n  0x01\n    /* \"#utility.yul\":2553:2567   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2549:2571   */\n  add\n    /* \"#utility.yul\":2536:2572   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1540:2839   */\n  jump\t// out\n    /* \"#utility.yul\":2844:3047   */\ntag_25:\n    /* \"contracts/token.sol\":168:648  contract JVCToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token.sol\":168:648  contract JVCToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6281b95b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"contracts/token.sol\":299:408  function transferOwnership_(address _newOwner) public onlyOwner {... */\n    tag_8:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2199:2250   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2187:2189   */\n      0x20\n        /* \"#utility.yul\":2172:2190   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_59\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_28\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_41\n      tag_68\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":299:408  function transferOwnership_(address _newOwner) public onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/token.sol\":373:401  transferOwnership(_newOwner) */\n      tag_94\n        /* \"contracts/token.sol\":391:400  _newOwner */\n      dup2\n        /* \"contracts/token.sol\":373:390  transferOwnership */\n      tag_69\n        /* \"contracts/token.sol\":373:401  transferOwnership(_newOwner) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/token.sol\":299:408  function transferOwnership_(address _newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_116\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_116\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_116\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_116\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_116\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_116\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_149\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_154\n      swap1\n      pop\n      jump\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_116\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_158)\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_159\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_21:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_160:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_164:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_24:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_166:\n        /* \"#utility.yul\":783:812   */\n      tag_167\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_160\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_34:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_171:\n        /* \"#utility.yul\":1479:1508   */\n      tag_172\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_160\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_173\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_160\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_43:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_176:\n        /* \"#utility.yul\":2013:2042   */\n      tag_177\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_160\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2521   */\n    tag_64:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      dup1\n        /* \"#utility.yul\":2390:2392   */\n      0x40\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2369:2376   */\n      dup6\n        /* \"#utility.yul\":2365:2388   */\n      sub\n        /* \"#utility.yul\":2361:2393   */\n      slt\n        /* \"#utility.yul\":2358:2410   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      dup1\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2358:2410   */\n    tag_180:\n        /* \"#utility.yul\":2429:2458   */\n      tag_181\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2429:2458   */\n      tag_160\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2419:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2477:2515   */\n      tag_182\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup5\n        /* \"#utility.yul\":2496:2514   */\n      add\n        /* \"#utility.yul\":2477:2515   */\n      tag_160\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2467:2515   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2906   */\n    tag_72:\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2601:2613   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2648:2660   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2669:2730   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2723:2727   */\n      0x7f\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2711:2728   */\n      and\n        /* \"#utility.yul\":2701:2728   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2730   */\n    tag_184:\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      lt\n        /* \"#utility.yul\":2745:2763   */\n      dup2\n        /* \"#utility.yul\":2742:2780   */\n      sub\n        /* \"#utility.yul\":2739:2900   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x22\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2739:2900   */\n    tag_185:\n      pop\n        /* \"#utility.yul\":2526:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3483   */\n    tag_153:\n        /* \"#utility.yul\":3326:3335   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3347:3357   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3344:3477   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3399:3409   */\n      0x4e487b71\n        /* \"#utility.yul\":3394:3397   */\n      0xe0\n        /* \"#utility.yul\":3390:3410   */\n      shl\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3411   */\n      mstore\n        /* \"#utility.yul\":3434:3438   */\n      0x11\n        /* \"#utility.yul\":3431:3432   */\n      0x04\n        /* \"#utility.yul\":3424:3439   */\n      mstore\n        /* \"#utility.yul\":3462:3466   */\n      0x24\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3452:3467   */\n      revert\n\n    auxdata: 0xa2646970667358221220cbd96961db6b6f140d769a864022fbae67ab2f79a4e82eb5b38609ebb5b1299b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1275": {
									"entryPoint": null,
									"id": 1275,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 200,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3049:8",
										"nodeType": "YulBlock",
										"src": "0:3049:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:103:8",
													"nodeType": "YulBlock",
													"src": "95:103:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:8",
																"nodeType": "YulBlock",
																"src": "141:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:8",
																					"nodeType": "YulLiteral",
																					"src": "150:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:8",
																					"nodeType": "YulLiteral",
																					"src": "153:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:8"
																			},
																			"nativeSrc": "143:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:8"
																		},
																		"nativeSrc": "143:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:8"
																		},
																		"nativeSrc": "112:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "137:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:8"
																},
																"nativeSrc": "108:32:8",
																"nodeType": "YulFunctionCall",
																"src": "108:32:8"
															},
															"nativeSrc": "105:52:8",
															"nodeType": "YulIf",
															"src": "105:52:8"
														},
														{
															"nativeSrc": "166:26:8",
															"nodeType": "YulAssignment",
															"src": "166:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "182:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "176:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:8"
																},
																"nativeSrc": "176:16:8",
																"nodeType": "YulFunctionCall",
																"src": "176:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:8",
														"nodeType": "YulTypedName",
														"src": "61:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:8",
														"nodeType": "YulTypedName",
														"src": "72:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:8",
														"nodeType": "YulTypedName",
														"src": "84:6:8",
														"type": ""
													}
												],
												"src": "14:184:8"
											},
											{
												"body": {
													"nativeSrc": "235:95:8",
													"nodeType": "YulBlock",
													"src": "235:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "252:1:8",
																		"nodeType": "YulLiteral",
																		"src": "252:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "259:3:8",
																				"nodeType": "YulLiteral",
																				"src": "259:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "264:10:8",
																				"nodeType": "YulLiteral",
																				"src": "264:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "255:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:8"
																		},
																		"nativeSrc": "255:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "255:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "245:6:8"
																},
																"nativeSrc": "245:31:8",
																"nodeType": "YulFunctionCall",
																"src": "245:31:8"
															},
															"nativeSrc": "245:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "245:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "292:1:8",
																		"nodeType": "YulLiteral",
																		"src": "292:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:4:8",
																		"nodeType": "YulLiteral",
																		"src": "295:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "285:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "285:6:8"
																},
																"nativeSrc": "285:15:8",
																"nodeType": "YulFunctionCall",
																"src": "285:15:8"
															},
															"nativeSrc": "285:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "285:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "316:1:8",
																		"nodeType": "YulLiteral",
																		"src": "316:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "319:4:8",
																		"nodeType": "YulLiteral",
																		"src": "319:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "309:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "309:6:8"
																},
																"nativeSrc": "309:15:8",
																"nodeType": "YulFunctionCall",
																"src": "309:15:8"
															},
															"nativeSrc": "309:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "309:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "203:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "203:127:8"
											},
											{
												"body": {
													"nativeSrc": "390:325:8",
													"nodeType": "YulBlock",
													"src": "390:325:8",
													"statements": [
														{
															"nativeSrc": "400:22:8",
															"nodeType": "YulAssignment",
															"src": "400:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "414:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "417:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "417:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "410:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "410:3:8"
																},
																"nativeSrc": "410:12:8",
																"nodeType": "YulFunctionCall",
																"src": "410:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "400:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:8"
																}
															]
														},
														{
															"nativeSrc": "431:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "431:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "461:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "461:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "467:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "457:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:8"
																},
																"nativeSrc": "457:12:8",
																"nodeType": "YulFunctionCall",
																"src": "457:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "435:18:8",
																	"nodeType": "YulTypedName",
																	"src": "435:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "508:31:8",
																"nodeType": "YulBlock",
																"src": "508:31:8",
																"statements": [
																	{
																		"nativeSrc": "510:27:8",
																		"nodeType": "YulAssignment",
																		"src": "510:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "524:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "524:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "532:4:8",
																					"nodeType": "YulLiteral",
																					"src": "532:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:3:8"
																			},
																			"nativeSrc": "520:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "520:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "510:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "510:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "488:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "488:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "481:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:8"
																},
																"nativeSrc": "481:26:8",
																"nodeType": "YulFunctionCall",
																"src": "481:26:8"
															},
															"nativeSrc": "478:61:8",
															"nodeType": "YulIf",
															"src": "478:61:8"
														},
														{
															"body": {
																"nativeSrc": "598:111:8",
																"nodeType": "YulBlock",
																"src": "598:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "619:1:8",
																					"nodeType": "YulLiteral",
																					"src": "619:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "626:3:8",
																							"nodeType": "YulLiteral",
																							"src": "626:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "631:10:8",
																							"nodeType": "YulLiteral",
																							"src": "631:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "622:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "622:3:8"
																					},
																					"nativeSrc": "622:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "622:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "612:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:8"
																			},
																			"nativeSrc": "612:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "612:31:8"
																		},
																		"nativeSrc": "612:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "612:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "663:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "666:4:8",
																					"nodeType": "YulLiteral",
																					"src": "666:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "656:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:6:8"
																			},
																			"nativeSrc": "656:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "656:15:8"
																		},
																		"nativeSrc": "656:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "656:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "691:1:8",
																					"nodeType": "YulLiteral",
																					"src": "691:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "694:4:8",
																					"nodeType": "YulLiteral",
																					"src": "694:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "684:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "684:6:8"
																			},
																			"nativeSrc": "684:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "684:15:8"
																		},
																		"nativeSrc": "684:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "684:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "554:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "554:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "577:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "585:2:8",
																				"nodeType": "YulLiteral",
																				"src": "585:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "574:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "574:2:8"
																		},
																		"nativeSrc": "574:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "574:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "551:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "551:2:8"
																},
																"nativeSrc": "551:38:8",
																"nodeType": "YulFunctionCall",
																"src": "551:38:8"
															},
															"nativeSrc": "548:161:8",
															"nodeType": "YulIf",
															"src": "548:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "335:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "370:4:8",
														"nodeType": "YulTypedName",
														"src": "370:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "379:6:8",
														"nodeType": "YulTypedName",
														"src": "379:6:8",
														"type": ""
													}
												],
												"src": "335:380:8"
											},
											{
												"body": {
													"nativeSrc": "776:65:8",
													"nodeType": "YulBlock",
													"src": "776:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "793:1:8",
																		"nodeType": "YulLiteral",
																		"src": "793:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "796:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "796:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:8"
																},
																"nativeSrc": "786:14:8",
																"nodeType": "YulFunctionCall",
																"src": "786:14:8"
															},
															"nativeSrc": "786:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "786:14:8"
														},
														{
															"nativeSrc": "809:26:8",
															"nodeType": "YulAssignment",
															"src": "809:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "827:1:8",
																		"nodeType": "YulLiteral",
																		"src": "827:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:4:8",
																		"nodeType": "YulLiteral",
																		"src": "830:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "817:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "817:9:8"
																},
																"nativeSrc": "817:18:8",
																"nodeType": "YulFunctionCall",
																"src": "817:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "720:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "759:3:8",
														"nodeType": "YulTypedName",
														"src": "759:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "767:4:8",
														"nodeType": "YulTypedName",
														"src": "767:4:8",
														"type": ""
													}
												],
												"src": "720:121:8"
											},
											{
												"body": {
													"nativeSrc": "927:437:8",
													"nodeType": "YulBlock",
													"src": "927:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "960:398:8",
																"nodeType": "YulBlock",
																"src": "960:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "981:1:8",
																					"nodeType": "YulLiteral",
																					"src": "981:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "984:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "984:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "974:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "974:6:8"
																			},
																			"nativeSrc": "974:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "974:16:8"
																		},
																		"nativeSrc": "974:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "974:16:8"
																	},
																	{
																		"nativeSrc": "1003:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1003:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1025:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1025:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1028:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1028:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1015:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:8"
																			},
																			"nativeSrc": "1015:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1015:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1007:4:8",
																				"nodeType": "YulTypedName",
																				"src": "1007:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1046:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1046:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1069:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1069:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1079:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1079:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1086:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1086:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1098:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1098:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1082:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:8"
																							},
																							"nativeSrc": "1082:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1075:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1075:3:8"
																					},
																					"nativeSrc": "1075:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1075:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1065:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:8"
																			},
																			"nativeSrc": "1065:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1065:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1050:11:8",
																				"nodeType": "YulTypedName",
																				"src": "1050:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1140:23:8",
																			"nodeType": "YulBlock",
																			"src": "1140:23:8",
																			"statements": [
																				{
																					"nativeSrc": "1142:19:8",
																					"nodeType": "YulAssignment",
																					"src": "1142:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1157:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1157:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1142:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "1142:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1122:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "1122:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1119:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1119:2:8"
																			},
																			"nativeSrc": "1119:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1119:20:8"
																		},
																		"nativeSrc": "1116:47:8",
																		"nodeType": "YulIf",
																		"src": "1116:47:8"
																	},
																	{
																		"nativeSrc": "1176:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1176:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1190:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1190:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1200:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1200:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1207:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1207:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1212:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1212:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1203:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1203:3:8"
																							},
																							"nativeSrc": "1203:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1203:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1196:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1196:3:8"
																					},
																					"nativeSrc": "1196:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1196:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1186:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1186:3:8"
																			},
																			"nativeSrc": "1186:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1180:2:8",
																				"nodeType": "YulTypedName",
																				"src": "1180:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1230:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1230:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1243:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "1243:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1234:5:8",
																				"nodeType": "YulTypedName",
																				"src": "1234:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1328:20:8",
																			"nodeType": "YulBlock",
																			"src": "1328:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1337:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1337:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1344:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1344:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1330:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1330:6:8"
																						},
																						"nativeSrc": "1330:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1330:16:8"
																					},
																					"nativeSrc": "1330:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1330:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1278:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1278:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1285:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1285:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1275:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1275:2:8"
																			},
																			"nativeSrc": "1275:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1275:13:8"
																		},
																		"nativeSrc": "1267:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1289:26:8",
																			"nodeType": "YulBlock",
																			"src": "1289:26:8",
																			"statements": [
																				{
																					"nativeSrc": "1291:22:8",
																					"nodeType": "YulAssignment",
																					"src": "1291:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1304:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1304:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1311:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1311:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1300:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:8"
																						},
																						"nativeSrc": "1300:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1291:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1291:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1271:3:8",
																			"nodeType": "YulBlock",
																			"src": "1271:3:8",
																			"statements": []
																		},
																		"src": "1267:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "943:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "943:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:2:8",
																		"nodeType": "YulLiteral",
																		"src": "948:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "940:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "940:2:8"
																},
																"nativeSrc": "940:11:8",
																"nodeType": "YulFunctionCall",
																"src": "940:11:8"
															},
															"nativeSrc": "937:421:8",
															"nodeType": "YulIf",
															"src": "937:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "846:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "899:5:8",
														"nodeType": "YulTypedName",
														"src": "899:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "906:3:8",
														"nodeType": "YulTypedName",
														"src": "906:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "911:10:8",
														"nodeType": "YulTypedName",
														"src": "911:10:8",
														"type": ""
													}
												],
												"src": "846:518:8"
											},
											{
												"body": {
													"nativeSrc": "1454:81:8",
													"nodeType": "YulBlock",
													"src": "1454:81:8",
													"statements": [
														{
															"nativeSrc": "1464:65:8",
															"nodeType": "YulAssignment",
															"src": "1464:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1479:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1479:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1497:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1497:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1500:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1500:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1493:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1493:3:8"
																								},
																								"nativeSrc": "1493:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1493:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1510:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1510:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1506:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1506:3:8"
																								},
																								"nativeSrc": "1506:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1506:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1489:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1489:3:8"
																						},
																						"nativeSrc": "1489:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1489:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1485:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1485:3:8"
																				},
																				"nativeSrc": "1485:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1485:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1475:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:8"
																		},
																		"nativeSrc": "1475:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1475:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1521:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1521:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1524:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1524:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1517:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:8"
																		},
																		"nativeSrc": "1517:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1472:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1472:2:8"
																},
																"nativeSrc": "1472:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1472:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1464:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1464:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1369:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1431:4:8",
														"nodeType": "YulTypedName",
														"src": "1431:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1437:3:8",
														"nodeType": "YulTypedName",
														"src": "1437:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1445:4:8",
														"nodeType": "YulTypedName",
														"src": "1445:4:8",
														"type": ""
													}
												],
												"src": "1369:166:8"
											},
											{
												"body": {
													"nativeSrc": "1636:1203:8",
													"nodeType": "YulBlock",
													"src": "1636:1203:8",
													"statements": [
														{
															"nativeSrc": "1646:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1646:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1666:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1666:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1660:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1660:5:8"
																},
																"nativeSrc": "1660:10:8",
																"nodeType": "YulFunctionCall",
																"src": "1660:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1650:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1650:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1713:22:8",
																"nodeType": "YulBlock",
																"src": "1713:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1715:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1715:16:8"
																			},
																			"nativeSrc": "1715:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1715:18:8"
																		},
																		"nativeSrc": "1715:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1715:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1685:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1685:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1701:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1701:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1705:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1705:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1697:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1697:3:8"
																				},
																				"nativeSrc": "1697:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1697:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1709:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1709:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1693:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1693:3:8"
																		},
																		"nativeSrc": "1693:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1693:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1682:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1682:2:8"
																},
																"nativeSrc": "1682:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1682:30:8"
															},
															"nativeSrc": "1679:56:8",
															"nodeType": "YulIf",
															"src": "1679:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1788:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1788:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1826:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1826:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1820:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1820:5:8"
																				},
																				"nativeSrc": "1820:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1820:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1794:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "1794:25:8"
																		},
																		"nativeSrc": "1794:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1794:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1834:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1744:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1744:43:8"
																},
																"nativeSrc": "1744:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1744:97:8"
															},
															"nativeSrc": "1744:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "1744:97:8"
														},
														{
															"nativeSrc": "1850:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1850:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1867:1:8",
																"nodeType": "YulLiteral",
																"src": "1867:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1854:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1854:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1877:17:8",
															"nodeType": "YulAssignment",
															"src": "1877:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1890:4:8",
																"nodeType": "YulLiteral",
																"src": "1890:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1877:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1877:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1940:642:8",
																		"nodeType": "YulBlock",
																		"src": "1940:642:8",
																		"statements": [
																			{
																				"nativeSrc": "1954:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1954:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1973:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1973:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1985:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1985:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1981:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1981:3:8"
																							},
																							"nativeSrc": "1981:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1981:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1969:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1969:3:8"
																					},
																					"nativeSrc": "1969:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1969:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1958:7:8",
																						"nodeType": "YulTypedName",
																						"src": "1958:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2002:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2002:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2046:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2046:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2016:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "2016:29:8"
																					},
																					"nativeSrc": "2016:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2016:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2006:6:8",
																						"nodeType": "YulTypedName",
																						"src": "2006:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2064:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2064:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2073:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2068:1:8",
																						"nodeType": "YulTypedName",
																						"src": "2068:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2144:165:8",
																					"nodeType": "YulBlock",
																					"src": "2144:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2169:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2169:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2187:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "2187:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2192:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "2192:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2183:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2183:3:8"
																												},
																												"nativeSrc": "2183:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2183:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2177:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "2177:5:8"
																										},
																										"nativeSrc": "2177:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2177:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2162:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2162:6:8"
																								},
																								"nativeSrc": "2162:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2162:42:8"
																							},
																							"nativeSrc": "2162:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2162:42:8"
																						},
																						{
																							"nativeSrc": "2221:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2221:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2235:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2235:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2243:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2243:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2231:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2231:3:8"
																								},
																								"nativeSrc": "2231:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2231:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2221:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2221:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2262:33:8",
																							"nodeType": "YulAssignment",
																							"src": "2262:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2279:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "2279:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2290:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2290:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2275:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2275:3:8"
																								},
																								"nativeSrc": "2275:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2275:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2262:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2262:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2098:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "2098:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2101:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2101:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2095:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2095:2:8"
																					},
																					"nativeSrc": "2095:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2095:14:8"
																				},
																				"nativeSrc": "2087:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2110:21:8",
																					"nodeType": "YulBlock",
																					"src": "2110:21:8",
																					"statements": [
																						{
																							"nativeSrc": "2112:17:8",
																							"nodeType": "YulAssignment",
																							"src": "2112:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2121:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "2121:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2124:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2124:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2117:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2117:3:8"
																								},
																								"nativeSrc": "2117:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2117:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2112:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "2112:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2091:3:8",
																					"nodeType": "YulBlock",
																					"src": "2091:3:8",
																					"statements": []
																				},
																				"src": "2087:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "2357:166:8",
																					"nodeType": "YulBlock",
																					"src": "2357:166:8",
																					"statements": [
																						{
																							"nativeSrc": "2375:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2375:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2402:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2402:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2407:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2407:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2398:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2398:3:8"
																										},
																										"nativeSrc": "2398:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2398:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2392:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2392:5:8"
																								},
																								"nativeSrc": "2392:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2392:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2379:9:8",
																									"nodeType": "YulTypedName",
																									"src": "2379:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2442:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2442:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2454:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2454:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2481:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "2481:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2484:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "2484:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2477:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "2477:3:8"
																																		},
																																		"nativeSrc": "2477:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2477:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2493:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2493:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2473:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2473:3:8"
																																},
																																"nativeSrc": "2473:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2473:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2503:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2503:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2499:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2499:3:8"
																																},
																																"nativeSrc": "2499:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2499:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2469:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "2469:3:8"
																														},
																														"nativeSrc": "2469:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "2469:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2465:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2465:3:8"
																												},
																												"nativeSrc": "2465:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2465:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2450:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2450:3:8"
																										},
																										"nativeSrc": "2450:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2450:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2435:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2435:6:8"
																								},
																								"nativeSrc": "2435:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2435:74:8"
																							},
																							"nativeSrc": "2435:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2435:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2328:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2328:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2337:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2337:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2325:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2325:2:8"
																					},
																					"nativeSrc": "2325:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2325:19:8"
																				},
																				"nativeSrc": "2322:201:8",
																				"nodeType": "YulIf",
																				"src": "2322:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2543:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2543:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2557:1:8",
																											"nodeType": "YulLiteral",
																											"src": "2557:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2560:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2560:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2553:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2553:3:8"
																									},
																									"nativeSrc": "2553:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2553:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2569:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2569:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2549:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2549:3:8"
																							},
																							"nativeSrc": "2549:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2549:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2536:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2536:6:8"
																					},
																					"nativeSrc": "2536:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2536:36:8"
																				},
																				"nativeSrc": "2536:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2536:36:8"
																			}
																		]
																	},
																	"nativeSrc": "1933:649:8",
																	"nodeType": "YulCase",
																	"src": "1933:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1938:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1938:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2599:234:8",
																		"nodeType": "YulBlock",
																		"src": "2599:234:8",
																		"statements": [
																			{
																				"nativeSrc": "2613:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2613:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2626:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2617:5:8",
																						"nodeType": "YulTypedName",
																						"src": "2617:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2662:67:8",
																					"nodeType": "YulBlock",
																					"src": "2662:67:8",
																					"statements": [
																						{
																							"nativeSrc": "2680:35:8",
																							"nodeType": "YulAssignment",
																							"src": "2680:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2699:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2699:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2704:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2704:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2695:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2695:3:8"
																										},
																										"nativeSrc": "2695:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2695:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2689:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2689:5:8"
																								},
																								"nativeSrc": "2689:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2689:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2680:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2680:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2643:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2643:6:8"
																				},
																				"nativeSrc": "2640:89:8",
																				"nodeType": "YulIf",
																				"src": "2640:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2749:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2749:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2808:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2808:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2815:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2815:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2755:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "2755:52:8"
																							},
																							"nativeSrc": "2755:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2755:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2742:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2742:6:8"
																					},
																					"nativeSrc": "2742:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2742:81:8"
																				},
																				"nativeSrc": "2742:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2742:81:8"
																			}
																		]
																	},
																	"nativeSrc": "2591:242:8",
																	"nodeType": "YulCase",
																	"src": "2591:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1913:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1921:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1921:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1910:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1910:2:8"
																},
																"nativeSrc": "1910:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1910:14:8"
															},
															"nativeSrc": "1903:930:8",
															"nodeType": "YulSwitch",
															"src": "1903:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1540:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1621:4:8",
														"nodeType": "YulTypedName",
														"src": "1621:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1627:3:8",
														"nodeType": "YulTypedName",
														"src": "1627:3:8",
														"type": ""
													}
												],
												"src": "1540:1299:8"
											},
											{
												"body": {
													"nativeSrc": "2945:102:8",
													"nodeType": "YulBlock",
													"src": "2945:102:8",
													"statements": [
														{
															"nativeSrc": "2955:26:8",
															"nodeType": "YulAssignment",
															"src": "2955:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2967:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2967:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2978:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2978:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2963:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2963:3:8"
																},
																"nativeSrc": "2963:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2963:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2955:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2955:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2997:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2997:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3012:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3012:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3028:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3028:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3033:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3033:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3024:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3024:3:8"
																						},
																						"nativeSrc": "3024:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3024:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3037:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3037:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3020:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3020:3:8"
																				},
																				"nativeSrc": "3020:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3020:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3008:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:8"
																		},
																		"nativeSrc": "3008:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2990:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:8"
																},
																"nativeSrc": "2990:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2990:51:8"
															},
															"nativeSrc": "2990:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2990:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2844:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2914:9:8",
														"nodeType": "YulTypedName",
														"src": "2914:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2925:6:8",
														"nodeType": "YulTypedName",
														"src": "2925:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2936:4:8",
														"nodeType": "YulTypedName",
														"src": "2936:4:8",
														"type": ""
													}
												],
												"src": "2844:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610ad7380380610ad783398101604081905261002e91610119565b3360405180604001604052806008815260200167252b21aa37b5b2b760c11b815250604051806040016040528060038152602001624a564360e81b815250816003908161007b91906101c8565b50600461008882826101c8565b5050506001600160a01b0381166100b857604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100c1816100c8565b5050610282565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208284031215610129575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061015857607f821691505b60208210810361017657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101c357805f5260205f20601f840160051c810160208510156101a15750805b601f840160051c820191505b818110156101c0575f81556001016101ad565b50505b505050565b81516001600160401b038111156101e1576101e1610130565b6101f5816101ef8454610144565b8461017c565b6020601f821160018114610227575f83156102105750848201515b5f19600385901b1c1916600184901b1784556101c0565b5f84815260208120601f198516915b828110156102565787850151825560209485019460019092019101610236565b508482101561027357868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6108488061028f5f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce567146101355780636281b95b14610144575b5f80fd5b6100d761020a565b6040516100e491906106b8565b60405180910390f35b6101006100fb366004610708565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610730565b6102b3565b604051601281526020016100e4565b61015761015236600461076a565b6102d6565b005b61011461016736600461076a565b6001600160a01b03165f9081526020819052604090205490565b6101576102ea565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102fd565b6101006101ba366004610708565b61030c565b6101146101cd36600461078a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61015761020536600461076a565b610319565b606060038054610219906107bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107bb565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a7818585610358565b60019150505b92915050565b5f336102c085828561036a565b6102cb8585856103e5565b506001949350505050565b6102de610442565b6102e781610319565b50565b6102f2610442565b6102fb5f61046f565b565b606060048054610219906107bb565b5f336102a78185856103e5565b610321610442565b6001600160a01b03811661034f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102e78161046f565b61036583838360016104c0565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103df57818110156103d157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610346565b6103df84848484035f6104c0565b50505050565b6001600160a01b03831661040e57604051634b637e8f60e11b81525f6004820152602401610346565b6001600160a01b0382166104375760405163ec442f0560e01b81525f6004820152602401610346565b610365838383610592565b6005546001600160a01b031633146102fb5760405163118cdaa760e01b8152336004820152602401610346565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166104e95760405163e602df0560e01b81525f6004820152602401610346565b6001600160a01b03831661051257604051634a1406b160e11b81525f6004820152602401610346565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103df57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161058491815260200190565b60405180910390a350505050565b6001600160a01b0383166105bc578060025f8282546105b191906107f3565b9091555061062c9050565b6001600160a01b0383165f908152602081905260409020548181101561060e5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610346565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661064857600280548290039055610666565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106ab91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610703575f80fd5b919050565b5f8060408385031215610719575f80fd5b610722836106ed565b946020939093013593505050565b5f805f60608486031215610742575f80fd5b61074b846106ed565b9250610759602085016106ed565b929592945050506040919091013590565b5f6020828403121561077a575f80fd5b610783826106ed565b9392505050565b5f806040838503121561079b575f80fd5b6107a4836106ed565b91506107b2602084016106ed565b90509250929050565b600181811c908216806107cf57607f821691505b6020821081036107ed57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220cbd96961db6b6f140d769a864022fbae67ab2f79a4e82eb5b38609ebb5b1299b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAD7 CODESIZE SUB DUP1 PUSH2 0xAD7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x119 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x252B21AA37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4A5643 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x88 DUP3 DUP3 PUSH2 0x1C8 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1 DUP2 PUSH2 0xC8 JUMP JUMPDEST POP POP PUSH2 0x282 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x158 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x176 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C3 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1A1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E1 JUMPI PUSH2 0x1E1 PUSH2 0x130 JUMP JUMPDEST PUSH2 0x1F5 DUP2 PUSH2 0x1EF DUP5 SLOAD PUSH2 0x144 JUMP JUMPDEST DUP5 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x227 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x210 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1C0 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x256 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x236 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x273 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x848 DUP1 PUSH2 0x28F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x6281B95B EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3E5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x442 JUMP JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x319 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x442 JUMP JUMPDEST PUSH2 0x2FB PUSH0 PUSH2 0x46F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x34F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x46F JUMP JUMPDEST PUSH2 0x365 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH2 0x3DF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH2 0x365 DUP4 DUP4 DUP4 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3DF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x584 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x62C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x648 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6AB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x703 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6ED JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6ED JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6ED JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x783 DUP3 PUSH2 0x6ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A4 DUP4 PUSH2 0x6ED JUMP JUMPDEST SWAP2 POP PUSH2 0x7B2 PUSH1 0x20 DUP5 ADD PUSH2 0x6ED JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xD9 PUSH10 0x61DB6B6F140D769A8640 0x22 0xFB 0xAE PUSH8 0xAB2F79A4E82EB5B3 DUP7 MULMOD 0xEB 0xB5 0xB1 0x29 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "168:480:7:-:0;;;210:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;279:10;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2990:51:8;2963:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;210:83:7;168:480;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:184:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:8;;14:184;-1:-1:-1;14:184:8:o;203:127::-;264:10;259:3;255:20;252:1;245:31;295:4;292:1;285:15;319:4;316:1;309:15;335:380;414:1;410:12;;;;457;;;478:61;;532:4;524:6;520:17;510:27;;478:61;585:2;577:6;574:14;554:18;551:38;548:161;;631:10;626:3;622:20;619:1;612:31;666:4;663:1;656:15;694:4;691:1;684:15;548:161;;335:380;;;:::o;846:518::-;948:2;943:3;940:11;937:421;;;984:5;981:1;974:16;1028:4;1025:1;1015:18;1098:2;1086:10;1082:19;1079:1;1075:27;1069:4;1065:38;1134:4;1122:10;1119:20;1116:47;;;-1:-1:-1;1157:4:8;1116:47;1212:2;1207:3;1203:12;1200:1;1196:20;1190:4;1186:31;1176:41;;1267:81;1285:2;1278:5;1275:13;1267:81;;;1344:1;1330:16;;1311:1;1300:13;1267:81;;;1271:3;;937:421;846:518;;;:::o;1540:1299::-;1660:10;;-1:-1:-1;;;;;1682:30:8;;1679:56;;;1715:18;;:::i;:::-;1744:97;1834:6;1794:38;1826:4;1820:11;1794:38;:::i;:::-;1788:4;1744:97;:::i;:::-;1890:4;1921:2;1910:14;;1938:1;1933:649;;;;2626:1;2643:6;2640:89;;;-1:-1:-1;2695:19:8;;;2689:26;2640:89;-1:-1:-1;;1497:1:8;1493:11;;;1489:24;1485:29;1475:40;1521:1;1517:11;;;1472:57;2742:81;;1903:930;;1933:649;793:1;786:14;;;830:4;817:18;;-1:-1:-1;;1969:20:8;;;2087:222;2101:7;2098:1;2095:14;2087:222;;;2183:19;;;2177:26;2162:42;;2290:4;2275:20;;;;2243:1;2231:14;;;;2117:12;2087:222;;;2091:3;2337:6;2328:7;2325:19;2322:201;;;2398:19;;;2392:26;-1:-1:-1;;2481:1:8;2477:14;;;2493:3;2473:24;2469:37;2465:42;2450:58;2435:74;;2322:201;-1:-1:-1;;;;2569:1:8;2553:14;;;2549:22;2536:36;;-1:-1:-1;1540:1299:8:o;2844:203::-;168:480:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 856,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1216,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1090,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 874,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1135,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 997,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1426,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 666,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 522,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 746,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 765,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 691,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 793,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership__1287": {
									"entryPoint": 726,
									"id": 1287,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 780,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3485:8",
										"nodeType": "YulBlock",
										"src": "0:3485:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:8",
													"nodeType": "YulBlock",
													"src": "135:297:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:8",
																		"nodeType": "YulLiteral",
																		"src": "163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:8"
																},
																"nativeSrc": "145:21:8",
																"nodeType": "YulFunctionCall",
																"src": "145:21:8"
															},
															"nativeSrc": "145:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:8"
														},
														{
															"nativeSrc": "175:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:8"
																},
																"nativeSrc": "189:13:8",
																"nodeType": "YulFunctionCall",
																"src": "189:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:8",
																	"nodeType": "YulTypedName",
																	"src": "179:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:8",
																				"nodeType": "YulLiteral",
																				"src": "233:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:8"
																		},
																		"nativeSrc": "218:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																},
																"nativeSrc": "211:34:8",
																"nodeType": "YulFunctionCall",
																"src": "211:34:8"
															},
															"nativeSrc": "211:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:8",
																				"nodeType": "YulLiteral",
																				"src": "275:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:8"
																		},
																		"nativeSrc": "260:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:8",
																				"nodeType": "YulLiteral",
																				"src": "292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:8"
																		},
																		"nativeSrc": "280:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:8"
																},
																"nativeSrc": "254:50:8",
																"nodeType": "YulFunctionCall",
																"src": "254:50:8"
															},
															"nativeSrc": "254:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:8"
																				},
																				"nativeSrc": "324:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:8",
																				"nodeType": "YulLiteral",
																				"src": "348:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:8"
																		},
																		"nativeSrc": "320:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:8",
																		"nodeType": "YulLiteral",
																		"src": "353:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:8"
																},
																"nativeSrc": "313:42:8",
																"nodeType": "YulFunctionCall",
																"src": "313:42:8"
															},
															"nativeSrc": "313:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:8"
														},
														{
															"nativeSrc": "364:62:8",
															"nodeType": "YulAssignment",
															"src": "364:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:8",
																								"nodeType": "YulLiteral",
																								"src": "407:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:8"
																						},
																						"nativeSrc": "395:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:8",
																								"nodeType": "YulLiteral",
																								"src": "416:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:8"
																						},
																						"nativeSrc": "412:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:8"
																				},
																				"nativeSrc": "391:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:8"
																		},
																		"nativeSrc": "376:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "423:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:8"
																},
																"nativeSrc": "372:54:8",
																"nodeType": "YulFunctionCall",
																"src": "372:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:418:8"
											},
											{
												"body": {
													"nativeSrc": "486:124:8",
													"nodeType": "YulBlock",
													"src": "486:124:8",
													"statements": [
														{
															"nativeSrc": "496:29:8",
															"nodeType": "YulAssignment",
															"src": "496:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:8"
																},
																"nativeSrc": "505:20:8",
																"nodeType": "YulFunctionCall",
																"src": "505:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:8",
																"nodeType": "YulBlock",
																"src": "588:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:8",
																					"nodeType": "YulLiteral",
																					"src": "597:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:8",
																					"nodeType": "YulLiteral",
																					"src": "600:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:8"
																			},
																			"nativeSrc": "590:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:8"
																		},
																		"nativeSrc": "590:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:8",
																										"nodeType": "YulLiteral",
																										"src": "573:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:8",
																										"nodeType": "YulLiteral",
																										"src": "578:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:8"
																								},
																								"nativeSrc": "569:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:8",
																								"nodeType": "YulLiteral",
																								"src": "582:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:8"
																						},
																						"nativeSrc": "565:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:8"
																				},
																				"nativeSrc": "554:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:8"
																		},
																		"nativeSrc": "544:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:8"
																},
																"nativeSrc": "537:50:8",
																"nodeType": "YulFunctionCall",
																"src": "537:50:8"
															},
															"nativeSrc": "534:70:8",
															"nodeType": "YulIf",
															"src": "534:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:8",
														"nodeType": "YulTypedName",
														"src": "465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:8",
														"nodeType": "YulTypedName",
														"src": "476:5:8",
														"type": ""
													}
												],
												"src": "437:173:8"
											},
											{
												"body": {
													"nativeSrc": "702:213:8",
													"nodeType": "YulBlock",
													"src": "702:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:8",
																"nodeType": "YulBlock",
																"src": "748:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:8",
																					"nodeType": "YulLiteral",
																					"src": "757:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:8",
																					"nodeType": "YulLiteral",
																					"src": "760:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:8"
																			},
																			"nativeSrc": "750:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:8"
																		},
																		"nativeSrc": "750:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:8"
																		},
																		"nativeSrc": "719:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "744:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:8"
																},
																"nativeSrc": "715:32:8",
																"nodeType": "YulFunctionCall",
																"src": "715:32:8"
															},
															"nativeSrc": "712:52:8",
															"nodeType": "YulIf",
															"src": "712:52:8"
														},
														{
															"nativeSrc": "773:39:8",
															"nodeType": "YulAssignment",
															"src": "773:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:8"
																},
																"nativeSrc": "783:29:8",
																"nodeType": "YulFunctionCall",
																"src": "783:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:8"
																}
															]
														},
														{
															"nativeSrc": "821:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:8",
																"nodeType": "YulLiteral",
																"src": "834:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:8",
																	"nodeType": "YulTypedName",
																	"src": "825:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:8",
															"nodeType": "YulAssignment",
															"src": "844:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:8",
																				"nodeType": "YulLiteral",
																				"src": "881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:8"
																		},
																		"nativeSrc": "866:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:8"
																},
																"nativeSrc": "853:32:8",
																"nodeType": "YulFunctionCall",
																"src": "853:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:8"
																}
															]
														},
														{
															"nativeSrc": "894:15:8",
															"nodeType": "YulAssignment",
															"src": "894:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:8",
																"nodeType": "YulIdentifier",
																"src": "904:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:8",
														"nodeType": "YulTypedName",
														"src": "660:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:8",
														"nodeType": "YulTypedName",
														"src": "671:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:8",
														"nodeType": "YulTypedName",
														"src": "683:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:8",
														"nodeType": "YulTypedName",
														"src": "691:6:8",
														"type": ""
													}
												],
												"src": "615:300:8"
											},
											{
												"body": {
													"nativeSrc": "1015:92:8",
													"nodeType": "YulBlock",
													"src": "1015:92:8",
													"statements": [
														{
															"nativeSrc": "1025:26:8",
															"nodeType": "YulAssignment",
															"src": "1025:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:8"
																},
																"nativeSrc": "1033:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:8"
																				},
																				"nativeSrc": "1085:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:8"
																		},
																		"nativeSrc": "1078:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:8"
																},
																"nativeSrc": "1060:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:8"
															},
															"nativeSrc": "1060:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:8",
														"nodeType": "YulTypedName",
														"src": "984:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:8",
														"nodeType": "YulTypedName",
														"src": "995:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:8",
														"nodeType": "YulTypedName",
														"src": "1006:4:8",
														"type": ""
													}
												],
												"src": "920:187:8"
											},
											{
												"body": {
													"nativeSrc": "1213:76:8",
													"nodeType": "YulBlock",
													"src": "1213:76:8",
													"statements": [
														{
															"nativeSrc": "1223:26:8",
															"nodeType": "YulAssignment",
															"src": "1223:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:8"
																},
																"nativeSrc": "1231:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:8"
																},
																"nativeSrc": "1258:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:8"
															},
															"nativeSrc": "1258:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:8",
														"nodeType": "YulTypedName",
														"src": "1182:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:8",
														"nodeType": "YulTypedName",
														"src": "1193:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:8",
														"nodeType": "YulTypedName",
														"src": "1204:4:8",
														"type": ""
													}
												],
												"src": "1112:177:8"
											},
											{
												"body": {
													"nativeSrc": "1398:270:8",
													"nodeType": "YulBlock",
													"src": "1398:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:8",
																"nodeType": "YulBlock",
																"src": "1444:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:8"
																			},
																			"nativeSrc": "1446:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:8"
																		},
																		"nativeSrc": "1446:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:8"
																		},
																		"nativeSrc": "1415:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:8"
																},
																"nativeSrc": "1411:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:8"
															},
															"nativeSrc": "1408:52:8",
															"nodeType": "YulIf",
															"src": "1408:52:8"
														},
														{
															"nativeSrc": "1469:39:8",
															"nodeType": "YulAssignment",
															"src": "1469:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:8"
																},
																"nativeSrc": "1479:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:8"
																}
															]
														},
														{
															"nativeSrc": "1517:48:8",
															"nodeType": "YulAssignment",
															"src": "1517:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:8"
																		},
																		"nativeSrc": "1546:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:8"
																},
																"nativeSrc": "1527:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:8"
																}
															]
														},
														{
															"nativeSrc": "1574:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:8",
																"nodeType": "YulLiteral",
																"src": "1587:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:8",
															"nodeType": "YulAssignment",
															"src": "1597:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:8"
																		},
																		"nativeSrc": "1619:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:8"
																},
																"nativeSrc": "1606:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:8"
																}
															]
														},
														{
															"nativeSrc": "1647:15:8",
															"nodeType": "YulAssignment",
															"src": "1647:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:8",
																"nodeType": "YulIdentifier",
																"src": "1657:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:8",
														"nodeType": "YulTypedName",
														"src": "1348:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:8",
														"nodeType": "YulTypedName",
														"src": "1359:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:8",
														"nodeType": "YulTypedName",
														"src": "1371:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:8",
														"nodeType": "YulTypedName",
														"src": "1379:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:8",
														"nodeType": "YulTypedName",
														"src": "1387:6:8",
														"type": ""
													}
												],
												"src": "1294:374:8"
											},
											{
												"body": {
													"nativeSrc": "1770:87:8",
													"nodeType": "YulBlock",
													"src": "1770:87:8",
													"statements": [
														{
															"nativeSrc": "1780:26:8",
															"nodeType": "YulAssignment",
															"src": "1780:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:8"
																},
																"nativeSrc": "1788:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:8"
																		},
																		"nativeSrc": "1833:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:8"
																},
																"nativeSrc": "1815:36:8",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:8"
															},
															"nativeSrc": "1815:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:8",
														"nodeType": "YulTypedName",
														"src": "1739:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:8",
														"nodeType": "YulTypedName",
														"src": "1750:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:8",
														"nodeType": "YulTypedName",
														"src": "1761:4:8",
														"type": ""
													}
												],
												"src": "1673:184:8"
											},
											{
												"body": {
													"nativeSrc": "1932:116:8",
													"nodeType": "YulBlock",
													"src": "1932:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:8",
																"nodeType": "YulBlock",
																"src": "1978:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:8"
																			},
																			"nativeSrc": "1980:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:8"
																		},
																		"nativeSrc": "1980:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:8"
																		},
																		"nativeSrc": "1949:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:8"
																},
																"nativeSrc": "1945:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:8"
															},
															"nativeSrc": "1942:52:8",
															"nodeType": "YulIf",
															"src": "1942:52:8"
														},
														{
															"nativeSrc": "2003:39:8",
															"nodeType": "YulAssignment",
															"src": "2003:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:8"
																},
																"nativeSrc": "2013:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:8",
														"nodeType": "YulTypedName",
														"src": "1898:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:8",
														"nodeType": "YulTypedName",
														"src": "1909:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:8",
														"nodeType": "YulTypedName",
														"src": "1921:6:8",
														"type": ""
													}
												],
												"src": "1862:186:8"
											},
											{
												"body": {
													"nativeSrc": "2154:102:8",
													"nodeType": "YulBlock",
													"src": "2154:102:8",
													"statements": [
														{
															"nativeSrc": "2164:26:8",
															"nodeType": "YulAssignment",
															"src": "2164:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2176:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2176:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2187:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2187:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2172:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:8"
																},
																"nativeSrc": "2172:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2172:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2164:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2164:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2206:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2206:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2221:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2237:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2237:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2242:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2242:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2233:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2233:3:8"
																						},
																						"nativeSrc": "2233:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2233:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2246:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2246:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2229:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2229:3:8"
																				},
																				"nativeSrc": "2229:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2229:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2217:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:8"
																		},
																		"nativeSrc": "2217:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2217:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2199:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:8"
																},
																"nativeSrc": "2199:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2199:51:8"
															},
															"nativeSrc": "2199:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2199:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2053:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2123:9:8",
														"nodeType": "YulTypedName",
														"src": "2123:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2134:6:8",
														"nodeType": "YulTypedName",
														"src": "2134:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2145:4:8",
														"nodeType": "YulTypedName",
														"src": "2145:4:8",
														"type": ""
													}
												],
												"src": "2053:203:8"
											},
											{
												"body": {
													"nativeSrc": "2348:173:8",
													"nodeType": "YulBlock",
													"src": "2348:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2394:16:8",
																"nodeType": "YulBlock",
																"src": "2394:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2396:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:8"
																			},
																			"nativeSrc": "2396:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:12:8"
																		},
																		"nativeSrc": "2396:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2369:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2369:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2365:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:8"
																		},
																		"nativeSrc": "2365:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2390:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2361:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:8"
																},
																"nativeSrc": "2361:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2361:32:8"
															},
															"nativeSrc": "2358:52:8",
															"nodeType": "YulIf",
															"src": "2358:52:8"
														},
														{
															"nativeSrc": "2419:39:8",
															"nodeType": "YulAssignment",
															"src": "2419:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2429:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2429:18:8"
																},
																"nativeSrc": "2429:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2429:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:8"
																}
															]
														},
														{
															"nativeSrc": "2467:48:8",
															"nodeType": "YulAssignment",
															"src": "2467:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:8"
																		},
																		"nativeSrc": "2496:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2477:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2477:18:8"
																},
																"nativeSrc": "2477:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2477:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2467:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2261:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2306:9:8",
														"nodeType": "YulTypedName",
														"src": "2306:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2317:7:8",
														"nodeType": "YulTypedName",
														"src": "2317:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2329:6:8",
														"nodeType": "YulTypedName",
														"src": "2329:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2337:6:8",
														"nodeType": "YulTypedName",
														"src": "2337:6:8",
														"type": ""
													}
												],
												"src": "2261:260:8"
											},
											{
												"body": {
													"nativeSrc": "2581:325:8",
													"nodeType": "YulBlock",
													"src": "2581:325:8",
													"statements": [
														{
															"nativeSrc": "2591:22:8",
															"nodeType": "YulAssignment",
															"src": "2591:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2605:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2608:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2608:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:8"
																},
																"nativeSrc": "2601:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2591:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:8"
																}
															]
														},
														{
															"nativeSrc": "2622:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2622:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2652:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2652:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2658:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:8"
																},
																"nativeSrc": "2648:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2648:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2626:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2626:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2699:31:8",
																"nodeType": "YulBlock",
																"src": "2699:31:8",
																"statements": [
																	{
																		"nativeSrc": "2701:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2701:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2715:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2715:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2723:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2723:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2711:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:8"
																			},
																			"nativeSrc": "2711:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2711:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2679:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2679:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:8"
																},
																"nativeSrc": "2672:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2672:26:8"
															},
															"nativeSrc": "2669:61:8",
															"nodeType": "YulIf",
															"src": "2669:61:8"
														},
														{
															"body": {
																"nativeSrc": "2789:111:8",
																"nodeType": "YulBlock",
																"src": "2789:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:8"
																					},
																					"nativeSrc": "2813:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:8"
																			},
																			"nativeSrc": "2803:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:8"
																		},
																		"nativeSrc": "2803:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:8"
																			},
																			"nativeSrc": "2847:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:8"
																		},
																		"nativeSrc": "2847:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:8"
																			},
																			"nativeSrc": "2875:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:8"
																		},
																		"nativeSrc": "2875:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2745:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2745:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2765:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2765:2:8"
																		},
																		"nativeSrc": "2765:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2742:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:8"
																},
																"nativeSrc": "2742:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2742:38:8"
															},
															"nativeSrc": "2739:161:8",
															"nodeType": "YulIf",
															"src": "2739:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2526:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2561:4:8",
														"nodeType": "YulTypedName",
														"src": "2561:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2570:6:8",
														"nodeType": "YulTypedName",
														"src": "2570:6:8",
														"type": ""
													}
												],
												"src": "2526:380:8"
											},
											{
												"body": {
													"nativeSrc": "3068:188:8",
													"nodeType": "YulBlock",
													"src": "3068:188:8",
													"statements": [
														{
															"nativeSrc": "3078:26:8",
															"nodeType": "YulAssignment",
															"src": "3078:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3090:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3090:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3101:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3086:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3086:3:8"
																},
																"nativeSrc": "3086:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3086:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3078:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3078:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3120:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3135:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3135:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3151:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3151:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3156:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3156:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3147:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3147:3:8"
																						},
																						"nativeSrc": "3147:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3147:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3160:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3160:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3143:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3143:3:8"
																				},
																				"nativeSrc": "3143:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3143:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3131:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:8"
																		},
																		"nativeSrc": "3131:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3113:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:8"
																},
																"nativeSrc": "3113:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3113:51:8"
															},
															"nativeSrc": "3113:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3113:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3184:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3184:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3195:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3195:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3180:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:8"
																		},
																		"nativeSrc": "3180:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3180:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3200:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3200:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3173:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:8"
																},
																"nativeSrc": "3173:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3173:34:8"
															},
															"nativeSrc": "3173:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3173:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3227:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3227:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3238:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3238:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3223:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:8"
																		},
																		"nativeSrc": "3223:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3223:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3243:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:8"
																},
																"nativeSrc": "3216:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3216:34:8"
															},
															"nativeSrc": "3216:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2911:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3021:9:8",
														"nodeType": "YulTypedName",
														"src": "3021:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3032:6:8",
														"nodeType": "YulTypedName",
														"src": "3032:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3040:6:8",
														"nodeType": "YulTypedName",
														"src": "3040:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3048:6:8",
														"nodeType": "YulTypedName",
														"src": "3048:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3059:4:8",
														"nodeType": "YulTypedName",
														"src": "3059:4:8",
														"type": ""
													}
												],
												"src": "2911:345:8"
											},
											{
												"body": {
													"nativeSrc": "3309:174:8",
													"nodeType": "YulBlock",
													"src": "3309:174:8",
													"statements": [
														{
															"nativeSrc": "3319:16:8",
															"nodeType": "YulAssignment",
															"src": "3319:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3330:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3333:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3333:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3326:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:8"
																},
																"nativeSrc": "3326:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3326:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3319:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:111:8",
																"nodeType": "YulBlock",
																"src": "3366:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3387:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3387:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3394:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3394:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3399:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3399:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3390:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:8"
																					},
																					"nativeSrc": "3390:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3390:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3380:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:8"
																			},
																			"nativeSrc": "3380:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:31:8"
																		},
																		"nativeSrc": "3380:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3431:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3431:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3434:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3434:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3424:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3424:6:8"
																			},
																			"nativeSrc": "3424:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3424:15:8"
																		},
																		"nativeSrc": "3424:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3424:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3459:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3462:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3462:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3452:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:8"
																			},
																			"nativeSrc": "3452:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3452:15:8"
																		},
																		"nativeSrc": "3452:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3350:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3350:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3353:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3347:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3347:2:8"
																},
																"nativeSrc": "3347:10:8",
																"nodeType": "YulFunctionCall",
																"src": "3347:10:8"
															},
															"nativeSrc": "3344:133:8",
															"nodeType": "YulIf",
															"src": "3344:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3261:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3292:1:8",
														"nodeType": "YulTypedName",
														"src": "3292:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3295:1:8",
														"nodeType": "YulTypedName",
														"src": "3295:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3301:3:8",
														"nodeType": "YulTypedName",
														"src": "3301:3:8",
														"type": ""
													}
												],
												"src": "3261:222:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce567146101355780636281b95b14610144575b5f80fd5b6100d761020a565b6040516100e491906106b8565b60405180910390f35b6101006100fb366004610708565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610730565b6102b3565b604051601281526020016100e4565b61015761015236600461076a565b6102d6565b005b61011461016736600461076a565b6001600160a01b03165f9081526020819052604090205490565b6101576102ea565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102fd565b6101006101ba366004610708565b61030c565b6101146101cd36600461078a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61015761020536600461076a565b610319565b606060038054610219906107bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107bb565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a7818585610358565b60019150505b92915050565b5f336102c085828561036a565b6102cb8585856103e5565b506001949350505050565b6102de610442565b6102e781610319565b50565b6102f2610442565b6102fb5f61046f565b565b606060048054610219906107bb565b5f336102a78185856103e5565b610321610442565b6001600160a01b03811661034f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102e78161046f565b61036583838360016104c0565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103df57818110156103d157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610346565b6103df84848484035f6104c0565b50505050565b6001600160a01b03831661040e57604051634b637e8f60e11b81525f6004820152602401610346565b6001600160a01b0382166104375760405163ec442f0560e01b81525f6004820152602401610346565b610365838383610592565b6005546001600160a01b031633146102fb5760405163118cdaa760e01b8152336004820152602401610346565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166104e95760405163e602df0560e01b81525f6004820152602401610346565b6001600160a01b03831661051257604051634a1406b160e11b81525f6004820152602401610346565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103df57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161058491815260200190565b60405180910390a350505050565b6001600160a01b0383166105bc578060025f8282546105b191906107f3565b9091555061062c9050565b6001600160a01b0383165f908152602081905260409020548181101561060e5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610346565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661064857600280548290039055610666565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106ab91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610703575f80fd5b919050565b5f8060408385031215610719575f80fd5b610722836106ed565b946020939093013593505050565b5f805f60608486031215610742575f80fd5b61074b846106ed565b9250610759602085016106ed565b929592945050506040919091013590565b5f6020828403121561077a575f80fd5b610783826106ed565b9392505050565b5f806040838503121561079b575f80fd5b6107a4836106ed565b91506107b2602084016106ed565b90509250929050565b600181811c908216806107cf57607f821691505b6020821081036107ed57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220cbd96961db6b6f140d769a864022fbae67ab2f79a4e82eb5b38609ebb5b1299b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x6281B95B EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3E5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x442 JUMP JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x319 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x442 JUMP JUMPDEST PUSH2 0x2FB PUSH0 PUSH2 0x46F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x34F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x46F JUMP JUMPDEST PUSH2 0x365 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH2 0x3DF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH2 0x365 DUP4 DUP4 DUP4 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3DF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x584 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x62C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x648 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6AB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x703 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6ED JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6ED JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6ED JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x783 DUP3 PUSH2 0x6ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A4 DUP4 PUSH2 0x6ED JUMP JUMPDEST SWAP2 POP PUSH2 0x7B2 PUSH1 0x20 DUP5 ADD PUSH2 0x6ED JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xD9 PUSH10 0x61DB6B6F140D769A8640 0x22 0xFB 0xAE PUSH8 0xAB2F79A4E82EB5B3 DUP7 MULMOD 0xEB 0xB5 0xB1 0x29 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "168:480:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:8;;1078:22;1060:41;;1048:2;1033:18;4293:186:2;920:187:8;3144:97:2;3222:12;;3144:97;;;1258:25:8;;;1246:2;1231:18;3144:97:2;1112:177:8;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1815:36:8;;1803:2;1788:18;3002:82:2;1673:184:8;299:109:7;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2199:51:8;;2187:2;2172:18;1638:85:0;2053:203:8;2276:93:2;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;:::i;:::-;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;299:109:7:-;1531:13:0;:11;:13::i;:::-;373:28:7::1;391:9;373:17;:28::i;:::-;299:109:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2199:51:8::0;2172:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;8989:128:2:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;3131:32:8;;10936:60:2;;;3113:51:8;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;10936:60:2;2911:345:8;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2199:51:8;2172:18;;5780:30:2;2053:203:8;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2199:51:8;2172:18;;5873:32:2;2053:203:8;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2199:51:8;2172:18;;1901:40:0;2053:203:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2199:51:8;2172:18;;10103:32:2;2053:203:8;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2199:51:8;2172:18;;10203:31:2;2053:203:8;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1258:25:8;;1246:2;1231:18;;1112:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3131:32:8;;6649:50:2;;;3113:51:8;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;6649:50:2;2911:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1258::8;;1246:2;1231:18;;1112:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:418:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:8;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:8:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:8;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:8:o;2261:260::-;2329:6;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2429:29;2448:9;2429:29;:::i;:::-;2419:39;;2477:38;2511:2;2500:9;2496:18;2477:38;:::i;:::-;2467:48;;2261:260;;;;;:::o;2526:380::-;2605:1;2601:12;;;;2648;;;2669:61;;2723:4;2715:6;2711:17;2701:27;;2669:61;2776:2;2768:6;2765:14;2745:18;2742:38;2739:161;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15;2739:161;;2526:380;;;:::o;3261:222::-;3326:9;;;3347:10;;;3344:133;;;3399:10;3394:3;3390:20;3387:1;3380:31;3434:4;3431:1;3424:15;3462:4;3459:1;3452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "424000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2560",
								"decimals()": "265",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"transferOwnership_(address)": "infinite"
							},
							"internal": {
								"burn(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 648,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 648,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 648,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 293,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 293,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 210,
									"end": 293,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 210,
									"end": 293,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 210,
									"end": 293,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 210,
									"end": 293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 210,
									"end": 293,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 210,
									"end": 293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 279,
									"end": 289,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "252B21AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4A5643"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2990,
									"end": 3041,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2963,
									"end": 2981,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2963,
									"end": 2981,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 210,
									"end": 293,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 168,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 168,
									"end": 648,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 203,
									"end": 330,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 203,
									"end": 330,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 264,
									"end": 274,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 259,
									"end": 262,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 255,
									"end": 275,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 252,
									"end": 253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 295,
									"end": 299,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 285,
									"end": 300,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 319,
									"end": 323,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 324,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 335,
									"end": 715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 414,
									"end": 415,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 478,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 532,
									"end": 536,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 524,
									"end": 530,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 520,
									"end": 537,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 510,
									"end": 537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 478,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 585,
									"end": 587,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 577,
									"end": 583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 574,
									"end": 588,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 551,
									"end": 589,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 631,
									"end": 641,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 626,
									"end": 629,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 622,
									"end": 642,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 619,
									"end": 620,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 666,
									"end": 670,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 663,
									"end": 664,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 656,
									"end": 671,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 694,
									"end": 698,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 691,
									"end": 692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 948,
									"end": 950,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 943,
									"end": 946,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 940,
									"end": 951,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 984,
									"end": 989,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 981,
									"end": 982,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 990,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1032,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1026,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1033,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1079,
									"end": 1080,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1075,
									"end": 1102,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1069,
									"end": 1073,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1065,
									"end": 1103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1122,
									"end": 1132,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1139,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1214,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1207,
									"end": 1210,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 1215,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1196,
									"end": 1216,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1190,
									"end": 1194,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1186,
									"end": 1217,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1217,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1217,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1278,
									"end": 1283,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1275,
									"end": 1288,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 1346,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1330,
									"end": 1346,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1312,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1300,
									"end": 1313,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 2839,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1540,
									"end": 2839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1670,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1682,
									"end": 1712,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1712,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1715,
									"end": 1733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1826,
									"end": 1830,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1820,
									"end": 1831,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1794,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1744,
									"end": 1841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1890,
									"end": 1894,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1921,
									"end": 1923,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1910,
									"end": 1924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1910,
									"end": 1924,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1938,
									"end": 1939,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2695,
									"end": 2714,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2695,
									"end": 2714,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2695,
									"end": 2714,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2715,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2640,
									"end": 2729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1497,
									"end": 1498,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1514,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1475,
									"end": 1515,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1472,
									"end": 1529,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2742,
									"end": 2823,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2742,
									"end": 2823,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1903,
									"end": 2833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1903,
									"end": 2833,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1933,
									"end": 2582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 786,
									"end": 800,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 817,
									"end": 835,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1969,
									"end": 1989,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 1989,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 1989,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2108,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2099,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2095,
									"end": 2109,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2177,
									"end": 2203,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2162,
									"end": 2204,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2162,
									"end": 2204,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2244,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2231,
									"end": 2245,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2091,
									"end": 2094,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2337,
									"end": 2343,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2328,
									"end": 2335,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2325,
									"end": 2344,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2392,
									"end": 2418,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2481,
									"end": 2482,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2477,
									"end": 2491,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2477,
									"end": 2491,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2477,
									"end": 2491,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2493,
									"end": 2496,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2473,
									"end": 2497,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2469,
									"end": 2506,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2465,
									"end": 2507,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2450,
									"end": 2508,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2435,
									"end": 2509,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2435,
									"end": 2509,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2322,
									"end": 2523,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2569,
									"end": 2570,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2553,
									"end": 2567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2567,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2567,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2536,
									"end": 2572,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2536,
									"end": 2572,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1540,
									"end": 2839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2844,
									"end": 3047,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 2844,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 168,
									"end": 648,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 648,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 168,
									"end": 648,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 648,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 648,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 168,
									"end": 648,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 648,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cbd96961db6b6f140d769a864022fbae67ab2f79a4e82eb5b38609ebb5b1299b64736f6c634300081a0033",
									".code": [
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "6281B95B"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 168,
											"end": 648,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 299,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 299,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2189,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 299,
											"end": 408,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 299,
											"end": 408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 391,
											"end": 400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 373,
											"end": 390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 373,
											"end": 401,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 373,
											"end": 401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 373,
											"end": 401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 299,
											"end": 408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2393,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2429,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2477,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2780,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3409,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3390,
											"end": 3410,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3467,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/bank.sol",
								"contracts/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferOwnership_(address)": "6281b95b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token.sol\":\"JVCToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/token.sol\":{\"keccak256\":\"0xb30cf13722e947764feb154dcb6cce60d82c6ef1c7a0a8bdb60c0ce992becc2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bcc37a8765d39946fb066c00580e5151dec41501cb4cbf1be37336f8819b393\",\"dweb:/ipfs/QmPTSsEEbV6YAWL8bSvTLohVA3ysBFQWwvxbySxRKadfW4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/token.sol:JVCToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/token.sol:JVCToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/token.sol:JVCToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/token.sol:JVCToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/token.sol:JVCToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/token.sol:JVCToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/bank.sol": {
				"ast": {
					"absolutePath": "contracts/bank.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"JVCBank": [
							1253
						],
						"JVCToken": [
							1318
						],
						"Ownable": [
							147
						]
					},
					"id": 1254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 148,
							"src": "58:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token.sol",
							"file": "./token.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1319,
							"src": "111:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "Ownable",
										"nameLocations": [
											"154:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "154:7:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "154:7:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "JVCToken",
										"nameLocations": [
											"163:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1318,
										"src": "163:8:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "163:8:6"
								}
							],
							"canonicalName": "JVCBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1253,
							"linearizedBaseContracts": [
								1253,
								1318,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "JVCBank",
							"nameLocation": "143:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 946,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "243:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "211:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
										"typeString": "mapping(address => struct JVCBank.User)"
									},
									"typeName": {
										"id": 945,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 942,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "219:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "211:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
											"typeString": "mapping(address => struct JVCBank.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 944,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 943,
												"name": "User",
												"nameLocations": [
													"230:4:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 959,
												"src": "230:4:6"
											},
											"referencedDeclaration": 959,
											"src": "230:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$959_storage_ptr",
												"typeString": "struct JVCBank.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 949,
									"mutability": "mutable",
									"name": "minDepAmt",
									"nameLocation": "270:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "254:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3030303338",
										"id": 948,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "282:13:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_380000000000000_by_1",
											"typeString": "int_const 380000000000000"
										},
										"value": "0.00038"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 952,
									"mutability": "mutable",
									"name": "maxWithdAmt",
									"nameLocation": "317:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "301:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 951,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "331:7:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "JVCBank.User",
									"id": 959,
									"members": [
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "uAddr",
											"nameLocation": "398:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "390:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 953,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "390:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "uName",
											"nameLocation": "420:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "413:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 955,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "413:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 958,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "443:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "435:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 957,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "435:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "375:4:6",
									"nodeType": "StructDefinition",
									"scope": 1253,
									"src": "368:89:6",
									"visibility": "public"
								},
								{
									"canonicalName": "JVCBank.Status",
									"id": 963,
									"members": [
										{
											"id": 960,
											"name": "Pending",
											"nameLocation": "549:7:6",
											"nodeType": "EnumValue",
											"src": "549:7:6"
										},
										{
											"id": 961,
											"name": "Failed",
											"nameLocation": "566:6:6",
											"nodeType": "EnumValue",
											"src": "566:6:6"
										},
										{
											"id": 962,
											"name": "Successful",
											"nameLocation": "582:10:6",
											"nodeType": "EnumValue",
											"src": "582:10:6"
										}
									],
									"name": "Status",
									"nameLocation": "532:6:6",
									"nodeType": "EnumDefinition",
									"src": "527:71:6"
								},
								{
									"constant": false,
									"functionSelector": "200d2ed2",
									"id": 966,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "617:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "603:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$963",
										"typeString": "enum JVCBank.Status"
									},
									"typeName": {
										"id": 965,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 964,
											"name": "Status",
											"nameLocations": [
												"603:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 963,
											"src": "603:6:6"
										},
										"referencedDeclaration": 963,
										"src": "603:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$963",
											"typeString": "enum JVCBank.Status"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5",
									"id": 972,
									"name": "DepositSuccessful",
									"nameLocation": "697:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "731:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "715:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "745:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "737:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:38:6"
									},
									"src": "691:62:6"
								},
								{
									"anonymous": false,
									"eventSelector": "a8b9f7931ac94cf9850accd175cf4543fac81ae93865d1670e14213829f67de5",
									"id": 978,
									"name": "DepositFailed",
									"nameLocation": "764:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "794:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "778:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "807:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "800:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 975,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "800:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:38:6"
									},
									"src": "758:58:6"
								},
								{
									"anonymous": false,
									"eventSelector": "46b6c03a6ed8406eda01806ab6d408e07129555fda5275b7f67e3a255f2d7a0d",
									"id": 986,
									"name": "WithdrawalSuccessful",
									"nameLocation": "827:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "864:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "848:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "886:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "870:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:60:6"
									},
									"src": "821:87:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e6f929185a164b69900aded735a0dde72fc0fcc419233880e26d0e55d8bf3fde",
									"id": 992,
									"name": "WithdrawalFailed",
									"nameLocation": "919:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "952:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "936:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "965:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "958:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "958:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:38:6"
									},
									"src": "913:61:6"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "1114:90:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1132:22:6",
															"subExpression": {
																"arguments": [
																	{
																		"id": 998,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "1148:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 997,
																	"name": "isContractAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "1133:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1133:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206973206120636f6e7472616374206164647265737321",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1156:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d",
																"typeString": "literal_string \"This is a contract address!\""
															},
															"value": "This is a contract address!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7157f5820812b1ceeaf13fb3bf41f34d20ab603472eefa120c0ae9e8081c641d",
																"typeString": "literal_string \"This is a contract address!\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1124:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1124:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "1124:62:6"
											},
											{
												"id": 1004,
												"nodeType": "PlaceholderStatement",
												"src": "1196:1:6"
											}
										]
									},
									"id": 1006,
									"name": "verifyAddr",
									"nameLocation": "1088:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1107:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1099:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:15:6"
									},
									"src": "1079:125:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "1287:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1013,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "1311:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
																						"typeString": "mapping(address => struct JVCBank.User storage ref)"
																					}
																				},
																				"id": 1016,
																				"indexExpression": {
																					"expression": {
																						"id": 1014,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1317:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1015,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1321:6:6",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1317:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1311:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$959_storage",
																					"typeString": "struct JVCBank.User storage ref"
																				}
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1329:5:6",
																			"memberName": "uName",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "1311:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1305:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1011,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1305:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1305:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1336:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1305:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1346:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1305:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f7420666f756e6421",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1349:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8",
																"typeString": "literal_string \"User not found!\""
															},
															"value": "User not found!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ddf868ec996a73fe20094f7e080f702e1ea4b5415cad3cd2d6bd2a43825baf8",
																"typeString": "literal_string \"User not found!\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1297:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "1297:70:6"
											},
											{
												"id": 1025,
												"nodeType": "PlaceholderStatement",
												"src": "1377:1:6"
											}
										]
									},
									"id": 1027,
									"name": "findUserByUname",
									"nameLocation": "1250:15:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "uname",
												"nameLocation": "1280:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1266:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1266:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:21:6"
									},
									"src": "1241:144:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "1451:2:6",
										"statements": []
									},
									"id": 1036,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1032,
													"name": "_initialSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1029,
													"src": "1436:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1033,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1031,
												"name": "JVCToken",
												"nameLocations": [
													"1427:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1318,
												"src": "1427:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1427:24:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "1411:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1403:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:24:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:6"
									},
									"scope": 1253,
									"src": "1391:62:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "1553:134:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1046,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "1577:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
																						"typeString": "mapping(address => struct JVCBank.User storage ref)"
																					}
																				},
																				"id": 1048,
																				"indexExpression": {
																					"id": 1047,
																					"name": "addr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1040,
																					"src": "1583:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1577:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$959_storage",
																					"typeString": "struct JVCBank.User storage ref"
																				}
																			},
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1589:5:6",
																			"memberName": "uName",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "1577:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1571:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1044,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1571:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1571:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1596:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1571:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220616c7265616479207265676973746572656421",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1609:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3",
																"typeString": "literal_string \"User already registered!\""
															},
															"value": "User already registered!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf2766e8d508f9848062d9281df8bb359976bd033f04b025fa8b4dc8207193b3",
																"typeString": "literal_string \"User already registered!\""
															}
														],
														"id": 1043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1563:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1563:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "1563:73:6"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1057,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "1646:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
																"typeString": "mapping(address => struct JVCBank.User storage ref)"
															}
														},
														"id": 1059,
														"indexExpression": {
															"id": 1058,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "1652:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1646:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$959_storage",
															"typeString": "struct JVCBank.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1061,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1665:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 1062,
																"name": "uname",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1671:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1678:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1060,
															"name": "User",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1660:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_User_$959_storage_ptr_$",
																"typeString": "type(struct JVCBank.User storage pointer)"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1660:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$959_memory_ptr",
															"typeString": "struct JVCBank.User memory"
														}
													},
													"src": "1646:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$959_storage",
														"typeString": "struct JVCBank.User storage ref"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "1646:34:6"
											}
										]
									},
									"functionSelector": "0e54b872",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerUser",
									"nameLocation": "1490:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "uname",
												"nameLocation": "1517:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1503:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1037,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1503:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1540:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1524:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:43:6"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1553:0:6"
									},
									"scope": 1253,
									"src": "1481:206:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1827:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1079,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "1844:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
															"typeString": "mapping(address => struct JVCBank.User storage ref)"
														}
													},
													"id": 1081,
													"indexExpression": {
														"id": 1080,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "1850:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1844:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$959_storage",
														"typeString": "struct JVCBank.User storage ref"
													}
												},
												"functionReturnParameters": 1078,
												"id": 1082,
												"nodeType": "Return",
												"src": "1837:25:6"
											}
										]
									},
									"functionSelector": "69c212f6",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1073,
													"name": "userAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1070,
													"src": "1792:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1072,
												"name": "verifyAddr",
												"nameLocations": [
													"1781:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1006,
												"src": "1781:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1781:23:6"
										}
									],
									"name": "getUserByAddress",
									"nameLocation": "1731:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1756:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1748:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:21:6"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1814:11:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$959_memory_ptr",
													"typeString": "struct JVCBank.User"
												},
												"typeName": {
													"id": 1076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1075,
														"name": "User",
														"nameLocations": [
															"1814:4:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 959,
														"src": "1814:4:6"
													},
													"referencedDeclaration": 959,
													"src": "1814:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$959_storage_ptr",
														"typeString": "struct JVCBank.User"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:13:6"
									},
									"scope": 1253,
									"src": "1722:147:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "2006:41:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1095,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2023:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
															"typeString": "mapping(address => struct JVCBank.User storage ref)"
														}
													},
													"id": 1098,
													"indexExpression": {
														"expression": {
															"id": 1096,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2029:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2033:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2029:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2023:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$959_storage",
														"typeString": "struct JVCBank.User storage ref"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1099,
												"nodeType": "Return",
												"src": "2016:24:6"
											}
										]
									},
									"functionSelector": "4bff5009",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1089,
													"name": "Uname",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1086,
													"src": "1977:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "findUserByUname",
												"nameLocations": [
													"1961:15:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "1961:15:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1961:22:6"
										}
									],
									"name": "getUserByName",
									"nameLocation": "1914:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "Uname",
												"nameLocation": "1942:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1928:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1928:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:21:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1993:11:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$959_memory_ptr",
													"typeString": "struct JVCBank.User"
												},
												"typeName": {
													"id": 1092,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1091,
														"name": "User",
														"nameLocations": [
															"1993:4:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 959,
														"src": "1993:4:6"
													},
													"referencedDeclaration": 959,
													"src": "1993:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$959_storage_ptr",
														"typeString": "struct JVCBank.User"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:13:6"
									},
									"scope": 1253,
									"src": "1905:142:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "2146:448:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1108,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2160:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2164:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2160:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1110,
														"name": "minDepAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "2172:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2160:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"nodeType": "IfStatement",
												"src": "2156:175:6",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "2183:148:6",
													"statements": [
														{
															"expression": {
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1112,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "2197:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$963",
																		"typeString": "enum JVCBank.Status"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1113,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "2206:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$963_$",
																			"typeString": "type(enum JVCBank.Status)"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2213:6:6",
																	"memberName": "Failed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 961,
																	"src": "2206:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$963",
																		"typeString": "enum JVCBank.Status"
																	}
																},
																"src": "2197:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$963",
																	"typeString": "enum JVCBank.Status"
																}
															},
															"id": 1116,
															"nodeType": "ExpressionStatement",
															"src": "2197:22:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1118,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2252:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2256:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2252:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "4d696e696d756d206465706f73697420616d6f756e7420697320302e3030303338",
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2264:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44",
																			"typeString": "literal_string \"Minimum deposit amount is 0.00038\""
																		},
																		"value": "Minimum deposit amount is 0.00038"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bf5fed18d9dc29d5979b77c13a0cd802de8c736791ec84b81bd4dbca1f84cc44",
																			"typeString": "literal_string \"Minimum deposit amount is 0.00038\""
																		}
																	],
																	"id": 1117,
																	"name": "DepositFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "2238:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory)"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2238:62:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1122,
															"nodeType": "EmitStatement",
															"src": "2233:67:6"
														},
														{
															"functionReturnParameters": 1107,
															"id": 1123,
															"nodeType": "Return",
															"src": "2314:7:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1129,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2410:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2414:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2410:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2402:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2402:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2402:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1134,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2431:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_JVCBank_$1253",
																		"typeString": "contract JVCBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_JVCBank_$1253",
																		"typeString": "contract JVCBank"
																	}
																],
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2423:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1132,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2423:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2423:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2438:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2442:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2438:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2389:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "2389:59:6"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1140,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "2458:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
																	"typeString": "mapping(address => struct JVCBank.User storage ref)"
																}
															},
															"id": 1143,
															"indexExpression": {
																"expression": {
																	"id": 1141,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2464:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2468:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2464:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2458:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$959_storage",
																"typeString": "struct JVCBank.User storage ref"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2476:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 958,
														"src": "2458:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1145,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2487:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2491:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2487:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2458:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "2458:38:6"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1149,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2506:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$963",
															"typeString": "enum JVCBank.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1150,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "2515:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$963_$",
																"typeString": "type(enum JVCBank.Status)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2522:10:6",
														"memberName": "Successful",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "2515:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$963",
															"typeString": "enum JVCBank.Status"
														}
													},
													"src": "2506:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$963",
														"typeString": "enum JVCBank.Status"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "2506:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2565:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2569:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2565:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2577:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2581:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2577:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1154,
														"name": "DepositSuccessful",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "2547:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2547:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "EmitStatement",
												"src": "2542:45:6"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1104,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2134:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2138:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2134:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1103,
												"name": "verifyAddr",
												"nameLocations": [
													"2123:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1006,
												"src": "2123:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2123:22:6"
										}
									],
									"name": "deposit",
									"nameLocation": "2098:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2105:2:6"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:0:6"
									},
									"scope": 1253,
									"src": "2089:505:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "2733:286:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1174,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "2751:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1175,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "2761:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
																			"typeString": "mapping(address => struct JVCBank.User storage ref)"
																		}
																	},
																	"id": 1177,
																	"indexExpression": {
																		"id": 1176,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "2767:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2761:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$959_storage",
																		"typeString": "struct JVCBank.User storage ref"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2773:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 958,
																"src": "2761:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2751:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2782:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2743:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2743:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "2743:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "2823:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1185,
																"name": "maxWithdAmt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "2833:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2823:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e742065786365656473206c696d6974",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2846:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011",
																"typeString": "literal_string \"Withdrawal amount exceeds limit\""
															},
															"value": "Withdrawal amount exceeds limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9abffd3926387568d97415599a26805b49476535a70a670ef2d643afbe68011",
																"typeString": "literal_string \"Withdrawal amount exceeds limit\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2815:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2815:65:6"
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1190,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "2890:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
																	"typeString": "mapping(address => struct JVCBank.User storage ref)"
																}
															},
															"id": 1192,
															"indexExpression": {
																"id": 1191,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "2896:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2890:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$959_storage",
																"typeString": "struct JVCBank.User storage ref"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2902:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 958,
														"src": "2890:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1194,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2913:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2890:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "2890:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2938:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1199,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "2944:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2929:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2929:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "2929:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1203,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2987:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2993:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2997:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2993:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "3005:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "WithdrawalSuccessful",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2966:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2966:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "EmitStatement",
												"src": "2961:51:6"
											}
										]
									},
									"functionSelector": "00f714ce",
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1169,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2721:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2725:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2721:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1168,
												"name": "verifyAddr",
												"nameLocations": [
													"2710:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1006,
												"src": "2710:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2710:22:6"
										}
									],
									"name": "withdraw",
									"nameLocation": "2648:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2665:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "2657:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2689:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "2673:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2673:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:38:6"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2733:0:6"
									},
									"scope": 1253,
									"src": "2639:380:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "3067:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1218,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3090:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_JVCBank_$1253",
																		"typeString": "contract JVCBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_JVCBank_$1253",
																		"typeString": "contract JVCBank"
																	}
																],
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3082:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1216,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3082:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3082:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3097:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "3077:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3077:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3077:27:6"
											}
										]
									},
									"functionSelector": "c634d032",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "3034:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3052:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "3044:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:16:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3067:0:6"
									},
									"scope": 1253,
									"src": "3025:86:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "3159:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1232,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3182:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_JVCBank_$1253",
																		"typeString": "contract JVCBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_JVCBank_$1253",
																		"typeString": "contract JVCBank"
																	}
																],
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3174:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1230,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3174:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3174:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "3189:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "3169:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3169:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "3169:27:6"
											}
										]
									},
									"functionSelector": "7b47ec1a",
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "3126:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3144:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3136:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3135:16:6"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3159:0:6"
									},
									"scope": 1253,
									"src": "3117:86:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "3345:45:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1245,
																"name": "addr_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "3362:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "3362:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3373:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3362:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3382:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3362:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1250,
												"nodeType": "Return",
												"src": "3355:28:6"
											}
										]
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContractAddr",
									"nameLocation": "3286:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "addr_",
												"nameLocation": "3309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3301:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3300:15:6"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3339:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3339:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:6:6"
									},
									"scope": 1253,
									"src": "3277:113:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1254,
							"src": "134:3258:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								972,
								978,
								986,
								992
							]
						}
					],
					"src": "32:3361:6"
				},
				"id": 6
			},
			"contracts/token.sol": {
				"ast": {
					"absolutePath": "contracts/token.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"JVCToken": [
							1318
						],
						"Ownable": [
							147
						]
					},
					"id": 1319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1319,
							"sourceUnit": 800,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1319,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1258,
										"name": "ERC20",
										"nameLocations": [
											"189:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "189:5:7"
									},
									"id": 1259,
									"nodeType": "InheritanceSpecifier",
									"src": "189:5:7"
								},
								{
									"baseName": {
										"id": 1260,
										"name": "Ownable",
										"nameLocations": [
											"196:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "196:7:7"
									},
									"id": 1261,
									"nodeType": "InheritanceSpecifier",
									"src": "196:7:7"
								}
							],
							"canonicalName": "JVCToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1318,
							"linearizedBaseContracts": [
								1318,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "JVCToken",
							"nameLocation": "177:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "291:2:7",
										"statements": []
									},
									"id": 1275,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4a5643546f6b656e",
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "252:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7b37d8c817ed0d1192bb675ac03d4d9eb76e2dcf4b3332fccae20ded814038c",
														"typeString": "literal_string \"JVCToken\""
													},
													"value": "JVCToken"
												},
												{
													"hexValue": "4a5643",
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "264:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9f40d3fb77bc36763b9098f0a1c02455d281478afc72da0b2fbeaeee6ff7cff1",
														"typeString": "literal_string \"JVC\""
													},
													"value": "JVC"
												}
											],
											"id": 1268,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1265,
												"name": "ERC20",
												"nameLocations": [
													"246:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "246:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "246:24:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1270,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "279:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "283:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "279:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1272,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1269,
												"name": "Ownable",
												"nameLocations": [
													"271:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "271:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "271:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "230:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "222:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:24:7"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:0:7"
									},
									"scope": 1318,
									"src": "210:83:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "363:45:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1283,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "391:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1282,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "373:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "373:28:7"
											}
										]
									},
									"functionSelector": "6281b95b",
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1279,
												"name": "onlyOwner",
												"nameLocations": [
													"353:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "353:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "353:9:7"
										}
									],
									"name": "transferOwnership_",
									"nameLocation": "308:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "335:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "327:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:19:7"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:7"
									},
									"scope": 1318,
									"src": "299:109:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "489:40:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "fromAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "505:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "515:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1296,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "499:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "499:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "499:23:7"
											}
										]
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1294,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1293,
												"name": "onlyOwner",
												"nameLocations": [
													"479:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "479:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "479:9:7"
										}
									],
									"name": "burn",
									"nameLocation": "423:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "fromAddr",
												"nameLocation": "436:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "428:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "454:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "446:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:34:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "489:0:7"
									},
									"scope": 1318,
									"src": "414:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "608:38:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "624:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "632:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1311,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "618:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "618:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "618:21:7"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1309,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1308,
												"name": "onlyOwner",
												"nameLocations": [
													"598:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "598:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "598:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "544:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "557:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "549:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "573:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "565:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:32:7"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:0:7"
									},
									"scope": 1318,
									"src": "535:111:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1319,
							"src": "168:480:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:617:7"
				},
				"id": 7
			}
		}
	}
}